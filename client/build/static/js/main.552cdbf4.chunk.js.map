{"version":3,"sources":["api/index.js","constants/actionTypes.js","actions/leaves.js","actions/training.js","actions/leaveTypes.js","components/PageLoading/PageLoading.js","components/Home/Home.js","components/LeaveHome/LeaveHome.js","_defaultProps.js","_supervisorProps.js","_adminProps.js","components/NoticeIcon/NoticeList.js","components/HeaderDropdown/HeaderDropdown.js","components/NoticeIcon/NoticeIcon.js","actions/notification.js","components/NoticeIcon/index.js","components/AvatarDropdown/AvatarDropdown.js","actions/auth.js","components/Auth/Auth.js","actions/holidays.js","components/LeaveForm/LeaveForm.js","actions/users.js","components/LeaveDetail/LeaveDetail.js","actions/depts.js","components/LeaveList/LeaveList.js","components/LeaveHistory/LeaveHistory.js","actions/roles.js","actions/policy.js","components/StaffForm/StaffForm.js","components/DeptHome/DeptHome.js","components/DeptForm/DeptForm.js","components/StaffHome/StaffHome.js","components/StaffDetails/StaffDetail.js","components/LeaveTypeForm/LeaveTypeForm.js","components/LeaveTypeHome/LeaveTypeHome.js","components/RoleHome/RoleHome.js","constants/permissions.js","components/RoleForm/RoleForm.js","components/Profile/Profile.js","components/Calendar/events-utils.js","components/Calendar/Calendar.js","PrivateRoute.js","components/Test2/Test2.js","PublicRoute.js","components/Test/Test.js","components/ResetPasswordForm/ResetPasswordForm.js","components/HolidayHome/HolidayHome.js","components/HolidayForm/HolidayForm.js","components/TrainingHome/TrainingHome.js","components/TrainingForm/TrainingForm.js","components/TrainingList/TrainingList.js","components/TrainingDetails/TrainingDetails.js","components/ExtTrainingForm/ExtTrainingForm.js","components/ExtTrainingList/ExtTrainingList.js","components/TrainingHistory/TrainingHistory.js","components/AdminHome/AdminHome.js","components/SupervisorHome/SupervisorHome.js","components/LeavePolicyForm/LeavePolicyForm.js","components/LeavePolicyHome/LeavePolicyHome.js","components/Error/Error404.js","components/CalendarPersonal/CalendarPersonal.js","actions/trainingProgress.js","components/TrainingProgressForm/TrainingProgressForm.js","components/TrainingProgressDetails/TrainingProgressDetails.js","components/TrainingProgressHistory/TrainingProgressHistory.js","components/TrainingProgressList/TrainingProgressList.js","components/ChangePasswordForm/ChangePasswordForm.js","App.js","reducers/error.js","reducers/auth.js","reducers/index.js","reducers/leaves.js","reducers/depts.js","reducers/users.js","reducers/leaveTypes.js","reducers/roles.js","reducers/holidays.js","reducers/training.js","reducers/trainingProgress.js","reducers/policy.js","reducers/notification.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["API","axios","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","fetchLeaveById","id","get","fetchLeaveByDateRange","dateRange","post","fetchLeaveByDateRangePersonal","updateLeave","updatedLeave","patch","fetchLeaveRequests","role","user","department","fetchUpcomingLeaves","fetchLeaveHistory","signIn","formData","resetPassword","email","changePassword","password","updateSettings","settings","getDept","updateDept","createUser","getUser","updateUser","updatedUser","fetchDeptUsers","createLeaveType","getLeaveType","updateLeaveType","updatedLeaveType","getRole","updateRole","updatedRole","fetchHolidaysByYear","year","createHoliday","updateHoliday","getHoliday","deleteHoliday","delete","fetchTrainingById","updateTraining","updatedTraining","leaveTraining","fetchExtTraining","updateTrainingStatus","fetchExtTrainingHistory","fetchTrainingHistory","fetchUpcomingTraining","getPoliciesByDept","dept","getPolicy","updatePolicy","updatedPolicy","getNotificationsById","clearNotificationsByType","type","setNotificationRead","getTrainingProgress","updateTrainingProgress","updatedProgress","getTrainingProgressUser","getTrainingProgressDept","CREATE_LEAVE","UPDATE_LEAVE","FETCH_ALL_LEAVE","FETCH_ONE_LEAVE","FETCH_LEAVE_BY_DATERANGE_PERSONAL","FETCH_LEAVE_BY_DATERANGE","LEAVE_START_LOADING","LEAVE_END_LOADING","LEAVE_ERROR","LEAVE_SUCCESS","FETCH_LEAVE_REQUESTS","FETCH_UPCOMING_LEAVE","FETCH_LEAVE_HISTORY","FETCH_TODAY_LEAVE","AUTH","RESET_PASSWORD","CHANGE_PASSWORD","UPDATE_AUTH","UPDATE_SETTINGS","LOGOUT","AUTH_START_LOADING","AUTH_END_LOADING","AUTH_ERROR","AUTH_SUCCESS","CREATE_USER","UPDATE_USER","FETCH_ALL_USER","FETCH_ONE_USER","USER_START_LOADING","USER_END_LOADING","USER_ERROR","USER_SUCCESS","FETCH_DEPT_USER","CREATE_DEPT","UPDATE_DEPT","DELETE_DEPT","FETCH_ALL_DEPT","DEPT_START_LOADING","DEPT_END_LOADING","DEPT_ERROR","DEPT_SUCCESS","CREATE_LEAVETYPE","UPDATE_LEAVETYPE","FETCH_ALL_LEAVETYPE","FETCH_ONE_LEAVETYPE","LEAVETYPE_START_LOADING","LEAVETYPE_END_LOADING","LEAVETYPE_ERROR","FETCH_LEAVE_COUNT","LEAVETYPE_SUCCESS","CREATE_ROLE","UPDATE_ROLE","FETCH_ALL_ROLE","FETCH_ONE_ROLE","ROLE_START_LOADING","ROLE_END_LOADING","ROLE_ERROR","ROLE_SUCCESS","CREATE_HOLIDAY","UPDATE_HOLIDAY","DELETE_HOLIDAY","FETCH_ALL_HOLIDAY","FETCH_ONE_HOLIDAY","HOLIDAY_START_LOADING","HOLIDAY_END_LOADING","HOLIDAY_ERROR","HOLIDAY_SUCCESS","FETCH_HOLIDAY_BY_YEAR","CREATE_TRAINING","FETCH_ALL_TRAINING","FETCH_ONE_TRAINING","TRAINING_START_LOADING","TRAINING_END_LOADING","TRAINING_ERROR","TRAINING_SUCCESS","UPDATE_TRAINING","LEAVE_TRAINING","FETCH_EXT_TRAINING","UPDATE_TRAINING_STATUS","FETCH_EXT_TRAINING_HISTORY","FETCH_TRAINING_HISTORY","FETCH_UPCOMING_TRAINING","FETCH_TODAY_TRAINING","FETCH_TRAINING_COUNT","CREATE_TRAININGPROGRESS","FETCH_ALL_TRAININGPROGRESS","FETCH_ONE_TRAININGPROGRESS","TRAININGPROGRESS_START_LOADING","TRAININGPROGRESS_END_LOADING","TRAININGPROGRESS_ERROR","TRAININGPROGRESS_SUCCESS","UPDATE_TRAININGPROGRESS","LEAVE_TRAININGPROGRESS","FETCH_DEPT_TRAININGPROGRESS","FETCH_USER_TRAININGPROGRESS","FETCH_EXT_TRAININGPROGRESS","UPDATE_TRAININGPROGRESS_STATUS","FETCH_EXT_TRAININGPROGRESS_HISTORY","FETCH_TRAININGPROGRESS_HISTORY","FETCH_UPCOMING_TRAININGPROGRESS","FETCH_TODAY_TRAININGPROGRESS","CREATE_POLICY","UPDATE_POLICY","FETCH_ALL_POLICY","FETCH_POLICY_BY_DEPT","FETCH_ONE_POLICY","POLICY_START_LOADING","POLICY_END_LOADING","POLICY_ERROR","POLICY_SUCCESS","NOTIFICATION_START_LOADING","NOTIFICATION_END_LOADING","NOTIFICATION_ERROR","NOTIFICATION_SUCCESS","FETCH_ALL_NOTIFICATION","CLEAR_NOTIFICATION_BY_TYPE","SET_NOTIFICATION_READ","fetchAllLeaves","dispatch","a","data","payload","error","api","leave","fetchTodayLeaves","createTraining","training","newTraining","getLeaveTypes","success","leaveType","PageLoading","props","style","paddingTop","paddingBottom","textAlign","className","size","tip","Home","screens","useBreakpoint","useSelector","state","leaves","isLoading","todayLeaves","trainings","leaveTypes","useDispatch","useEffect","leaveData","leaveCount","forEach","element","temp","name","value","count","push","totalTraining","trainingHours","completedTraining","completedHours","trainingNeeded","completionPercentage","trainingData","COLORS1","COLORS2","Title","level","gutter","xs","sm","md","lg","bordered","title","column","layout","Item","label","span","first_name","last_name","map","entry","index","_id","some","e","message","showIcon","description","ResponsiveContainer","minHeight","BarChart","margin","top","right","left","bottom","Bar","fill","dataKey","Cell","length","YAxis","XAxis","Tooltip","minWidth","PieChart","Pie","innerRadius","outerRadius","paddingAngle","startAngle","isAnimationActive","x","y","textAnchor","alignmentBaseline","labelLine","Legend","shape","to","dataSource","rowKey","Column","dataIndex","render","text","record","color","string","code","charAt","toUpperCase","slice","moment","fromDate","format","toDate","LeaveHome","Typography","Text","useState","upcomingLeave","result","useNavigate","COLORS","roles","status","wrap","align","display","justifyContent","route","path","routes","icon","UserOutlined","exact","ScheduleOutlined","HomeOutlined","UsergroupAddOutlined","HistoryOutlined","CalendarOutlined","SolutionOutlined","UnorderedListOutlined","FormOutlined","location","pathname","BarChartOutlined","ApartmentOutlined","ExclamationCircleOutlined","TeamOutlined","LaptopOutlined","SettingOutlined","AuditOutlined","NoticeList","list","onClick","onClear","onViewMore","emptyText","showClear","clearText","viewMoreText","showViewMore","renderItem","item","i","itemCls","classNames","read","leftIcon","avatar","src","Meta","extra","sender","content","createdAt","key","alt","HeaderDropdown","cls","overlayClassName","restProps","trigger","TabPane","Tabs","NoticeIcon","bell","useMergedState","popupVisible","onChange","onPopupVisibleChange","visible","setVisible","noticeButtonClass","notificationBox","children","loading","onTabChange","onItemClick","panes","React","Children","child","tabKey","len","msgCount","tabTitle","tab","event","spinning","delay","centered","getNotificationBox","NoticeBellIcon","BellOutlined","opened","boxShadow","placement","overlay","onVisibleChange","defaultProps","emptyImage","Tab","NoticeIconView","socket","useLocation","navigate","Math","random","notifications","notices","setNotices","noticeData","Array","isArray","newNotices","notice","newNotice","fromNow","Pending","Rejected","Approved","marginRight","groupBy","getNoticeData","unreadMsg","Object","keys","filter","getUnreadData","totalCount","total","getTotalUnreadCount","then","on","changeReadState","newN","clearReadState","info","clearClose","AvatarDropdown","logout","menuHeaderDropdown","styles","menu","LogoutOutlined","action","account","ellipsis","Auth","auth","onFinish","values","Modal","preview","marginLeft","width","padding","labelCol","wrapperCol","autoComplete","rules","required","autoFocus","pattern","Password","placeholder","offset","htmlType","TextArea","Input","RangePicker","DatePicker","Option","Select","LeaveForm","useParams","holidays","Form","useForm","form","setError","setLoading","setFieldsValue","reason","rangeValue","startDate","endDate","dateDiff","day","workingDays","isSameOrBefore","includes","add","lists","holiday","holidayCount","diff","calcWorkingDays","existedFile","FormData","upload","file","originFileObj","append","attachments","find","fileId","uid","rec","remainLeave","l","user_name","entries","stringify","onOk","newLeave","createLeave","whitespace","rows","disabledDate","val","ltVal","getFieldValue","start","end","lt","ltStart","ltEnd","startOf","operator","parseInt","substring","subtract","endOf","valuePropName","getValueFromEvent","fileList","Dragger","listType","customRequest","onSuccess","setTimeout","defaultFileList","fileName","url","filePath","showUploadList","showDownloadIcon","downloadIcon","DownloadOutlined","showRemoveIcon","removeIcon","DeleteOutlined","UploadOutlined","getUsers","LeaveDetail","curUser","leaveIsloading","setIsloading","setStatus","approver","minDate","newLeaveCount","xxl","xl","danger","getDepts","LeaveList","depts","deptFilters","typeFilter","columns","valueType","hideInSearch","filters","onFilter","indexOf","sorter","b","hideInTable","search","transform","startTime","endTime","actionRef","useRef","input","ret","reverseArr","locale","enUSIntl","params","every","RegExp","Promise","resolve","pagination","pageSize","showQuickJumper","labelWidth","dateFormatter","toolbar","tooltip","toolBarRender","LeaveHistory","leaveHistory","getRoles","StaffForm","oriIncRef","showPolicyField","setShowPolicyField","policy","employment_date","showLeaveCount","setShowLeaveCount","leaveCountText","setLeaveCountText","policyHelpText","setPolicyHelpText","emp_id","fetchData","le","policies","users","onDeptChange","undefined","calcPolicy","employmentDate","totalYears","inc","policyAfter","p","condition1","policyEvery","stacked","highestAfter","totalIncrease","increase","floor","leavetype","console","log","calcLeaveCount","policyVal","pol","curInc","f","t","current","oriInc","incDiff","abs","onPolicyChange","newState","disabled","help","Paragraph","orientation","initialValue","process","min","Table","DeptHome","marginBottom","DeptForm","newDept","Grid","StaffHome","StaffDetail","u","LeaveTypeForm","showStart","setShowStart","showEnd","setShowEnd","colorState","setColorState","startValue","customStartDate","endValue","customEndDate","onValuesChange","changedFields","allFields","str","test","formKey","submitter","resetButtonProps","doms","fieldProps","onPressEnter","autoCode","target","toLowerCase","split","disableAlpha","Group","options","validate","LeaveTypeHome","RoleHome","LEAVE_VIEW_ALL","LEAVE_APPROVE","ROLES_ASSIGN","RoleForm","createRole","Profile","marginTop","eventGuid","todayStr","Date","toISOString","replace","date1","date2","createEventId","String","Calendar","c","createRef","setDateRange","calendar","getApi","changeView","handleEventsss","ref","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","headerToolbar","center","initialView","dayMaxEvents","weekends","businessHours","daysOfWeek","events","eventContent","eventInfo","timeText","extendedProps","eventClick","clickInfo","PrivateRoute","requiredPermissions","matchAllPermissions","hasAccess","ai","PublicRoute","Test","window","Notification","permission","requestPermission","alert","notifyMe","ResetPasswordForm","HolidayHome","today","toString","setYear","deleteHo","date","dateStr","picker","defaultValue","overflowX","onConfirm","okText","cancelText","sorterA","isNaN","localeCompare","valueEnum","tableListDataSource","creators","containers","creator","now","money","progress","ceil","memo","QuestionCircleOutlined","columns2","defaultCollapsed","EllipsisOutlined","TrainingHome","upcomingTraining","strong","TrainingForm","timeRange","organizer","fromTime","toTime","duration","as","toFixed","trainingType","minuteStep","beforeUpload","TrainingList","calcAttendance","utc","asMilliseconds","attendants","TrainingDetails","joinTraining","user_id","cancelAttendance","setAttendanceStatus","attendant_id","newStatus","updatedAttendant","attendant","asDays","fee","ExtTrainingForm","ExtTrainingList","TrainingHistory","trainingHistory","extTrainings","formatDuration","columns1","extReverse","historyReverse","trainingCount","max","calcLeaveByMonth","month","d","getMonth","empLeaveData","countTemp","StatisticCard","Divider","prefix","LineChart","height","domain","allowDecimals","wrapperStyle","Line","stroke","activeDot","r","defaultSortOrder","deptId","isModalVisible","setIsModalVisible","filterDept","sort","top3Users","supervisorNames","footer","onCancel","contentStyle","wordBreak","mark","LeavePolicy","selectedItems","setSelectedItems","filteredOptions","leaveTypeArr","newD","newLt","onSelectChange","leavetypeArr","reduce","all","concat","validator","rule","reject","allowClear","mode","List","fields1","add1","remove1","remove","field1","fieldKey","labelInValue","optionLabelProp","policyFields","policyField","flexWrap","MinusCircleOutlined","PlusOutlined","block","Error404","subTitle","CalendarPersonal","trainingProgress","TrainingProgressForm","_","Error","TrainingProgressDetail","parseFloat","TrainingProgressHistory","trainingProgresses","TrainingProgressList","filterResult","ChangePasswordForm","hasFeedback","dependencies","App","Layout","Header","Footer","Sider","Content","showLogo","setShowLogo","fixSiderbar","navTheme","primaryColor","contentWidth","splitMenus","setPathname","setSocket","authData","emit","jwtDecode","exp","getTime","io","InfoCircleOutlined","CheckCircleOutlined","CloseCircleOutlined","notification","open","destroy","off","disconnect","supervisorProps","adminProps","background","logo","onCollapse","collapsed","menuRender","defaultDom","menuItemRender","dom","rightContentRender","SupervisorHome","LeavePolicyHome","LeavePolicyForm","Test2","handleError","response","authReducer","setItem","clear","appReducers","combineReducers","calLeaves","allDay","calHolidays","extTrainingProgress","upcomingTrainingProgress","noti","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","persistConfig","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","document","getElementById","URL","href","origin","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.552cdbf4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'https://intihrms.herokuapp.com' });\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem('profile')).token\r\n    }`;\r\n  }\r\n\r\n  return req;\r\n});\r\nconst config = {\r\n  headers: {\r\n    'content-type': 'multipart/form-data',\r\n  },\r\n};\r\nexport const fetchAllLeaves = () => API.get('/leaves');\r\nexport const fetchLeaveById = (id) => API.get(`/leaves/${id}`);\r\nexport const fetchLeaveByDateRange = (dateRange) =>\r\n  API.post(`/leaves/range`, dateRange);\r\nexport const fetchLeaveByDateRangePersonal = (dateRange) =>\r\n  API.post(`/leaves/range/personal`, dateRange);\r\nexport const createLeave = (newLeave) => API.post('/leaves', newLeave);\r\nexport const updateLeave = (id, updatedLeave) =>\r\n  API.patch(`/leaves/${id}`, updatedLeave);\r\nexport const fetchLeaveRequests = (role, user, department) =>\r\n  API.get(`/leaves/${role}/${user}/${department}`);\r\nexport const fetchUpcomingLeaves = (id) => API.get(`/leaves/upcoming/${id}`);\r\nexport const fetchLeaveHistory = (id) => API.get(`/leaves/history/${id}`);\r\nexport const fetchTodayLeaves = () => API.get('/leaves/date/today');\r\nexport const fetchLeaveCount = () => API.get('/leaves/count/dept');\r\n\r\nexport const signIn = (formData) => API.post('/users/signIn', formData);\r\nexport const signUp = (formData) => API.post('/users/signUp', formData);\r\nexport const resetPassword = (email) => API.post('/users/resetPassword', email);\r\nexport const changePassword = (id, password) =>\r\n  API.post(`/users/${id}/changePassword`, password);\r\nexport const updateAuth = (id) => API.get(`/users/updateAuth/${id}`);\r\nexport const updateSettings = (id, settings) =>\r\n  API.post(`/users/updateSettings/${id}`, settings);\r\n\r\nexport const getDepts = () => API.get('/depts');\r\nexport const getDept = (id) => API.get(`depts/${id}`);\r\nexport const updateDept = (id, formData) => API.post(`/depts/${id}`, formData);\r\nexport const createDept = (newDept) => API.post('/depts', newDept);\r\nexport const deleteDept = (id) => API.delete(`/depts/${id}`);\r\n\r\nexport const createUser = (formData) => API.post('/users', formData);\r\nexport const getUsers = () => API.get('/users');\r\nexport const getUser = (id) => API.get(`users/${id}`);\r\nexport const updateUser = (id, updatedUser) =>\r\n  API.patch(`/users/${id}`, updatedUser);\r\nexport const fetchDeptUsers = (department) =>\r\n  API.get(`users/dept/${department}`);\r\n\r\nexport const createLeaveType = (formData) => API.post('/leaveTypes', formData);\r\nexport const getLeaveTypes = () => API.get('/leaveTypes');\r\nexport const getLeaveType = (id) => API.get(`/leaveTypes/${id}`);\r\nexport const updateLeaveType = (id, updatedLeaveType) =>\r\n  API.patch(`/leaveTypes/${id}`, updatedLeaveType);\r\n\r\nexport const createRole = (formData) => API.post('/roles', formData);\r\nexport const getRoles = () => API.get('/roles');\r\nexport const getRole = (id) => API.get(`/roles/${id}`);\r\nexport const updateRole = (id, updatedRole) =>\r\n  API.patch(`/roles/${id}`, updatedRole);\r\n\r\nexport const fetchAllHolidays = () => API.get('/holidays');\r\nexport const fetchHolidaysByYear = (year) => API.get(`/holidays/${year}`);\r\nexport const createHoliday = (formData) => API.post('/holidays', formData);\r\nexport const updateHoliday = (year, id, formData) =>\r\n  API.post(`/holidays/${year}/${id}`, formData);\r\nexport const getHoliday = (year, id) => API.get(`/holidays/${year}/${id}`);\r\nexport const deleteHoliday = (year, id) =>\r\n  API.delete(`/holidays/${year}/${id}`);\r\n\r\nexport const createTraining = (newTraining) =>\r\n  API.post('/training', newTraining);\r\nexport const fetchAllTrainings = () => API.get('/training');\r\nexport const fetchTrainingById = (id) => API.get(`/training/${id}`);\r\nexport const updateTraining = (id, updatedTraining) =>\r\n  API.post(`/training/${id}`, updatedTraining);\r\nexport const leaveTraining = (id, updatedTraining) =>\r\n  API.patch(`/training/${id}`, updatedTraining);\r\nexport const fetchExtTraining = (role, user, department) =>\r\n  API.get(`/training/ext/${role}/${user}/${department}`);\r\nexport const updateTrainingStatus = (id, updatedTraining) =>\r\n  API.post(`/training/ext/${id}`, updatedTraining);\r\nexport const fetchExtTrainingHistory = (id) =>\r\n  API.get(`/training/history/ext/${id}`);\r\nexport const fetchTrainingHistory = (id) => API.get(`/training/history/${id}`);\r\nexport const fetchUpcomingTraining = (id) =>\r\n  API.get(`/training/upcoming/${id}`);\r\nexport const fetchTodayTrainings = () => API.get('/training/date/today');\r\nexport const fetchTrainingCount = () => API.get('/training/count/dept');\r\n\r\nexport const createPolicy = (formData) => API.post('/policy', formData);\r\nexport const getPolicies = () => API.get('/policy');\r\nexport const getPoliciesByDept = (dept) => API.get(`/policy/dept/${dept}`);\r\nexport const getPolicy = (id) => API.get(`/policy/${id}`);\r\nexport const updatePolicy = (id, updatedPolicy) =>\r\n  API.patch(`/policy/${id}`, updatedPolicy);\r\n\r\nexport const getNotificationsById = (id) => API.get(`/notification/${id}`);\r\nexport const clearNotificationsByType = (user, type) =>\r\n  API.post(`/notification/${user}`, type);\r\nexport const setNotificationRead = (id) => API.post(`/notification/read/${id}`);\r\n\r\nexport const getTrainingProgresses = () => API.get('/trainingProgress');\r\nexport const getTrainingProgress = (id) => API.get(`trainingProgress/${id}`);\r\nexport const updateTrainingProgress = (id, updatedProgress) =>\r\n  API.post(`/trainingProgress/${id}`, updatedProgress);\r\nexport const getTrainingProgressUser = (id) =>\r\n  API.get(`trainingProgress/user/${id}`);\r\nexport const getTrainingProgressDept = (id) =>\r\n  API.get(`trainingProgress/dept/${id}`);\r\n","export const CREATE_LEAVE = 'CREATE_LEAVE';\r\nexport const UPDATE_LEAVE = 'UPDATE_LEAVE';\r\nexport const DELETE_LEAVE = 'DELETE_LEAVE';\r\nexport const FETCH_ALL_LEAVE = 'FETCH_ALL_LEAVE';\r\nexport const FETCH_ONE_LEAVE = 'FETCH_ONE_LEAVE';\r\nexport const FETCH_LEAVE_BY_DATERANGE_PERSONAL =\r\n  'FETCH_LEAVE_BY_DATERANGE_PERSONAL';\r\nexport const FETCH_LEAVE_BY_DATERANGE = 'FETCH_LEAVE_BY_DATERANGE';\r\nexport const LEAVE_START_LOADING = 'LEAVE_START_LOADING';\r\nexport const LEAVE_END_LOADING = 'LEAVE_END_LOADING';\r\nexport const LEAVE_ERROR = 'LEAVE_ERROR';\r\nexport const LEAVE_SUCCESS = 'LEAVE_SUCCESS';\r\nexport const FETCH_LEAVE_REQUESTS = 'FETCH_LEAVE_REQUESTS';\r\nexport const FETCH_UPCOMING_LEAVE = 'FETCH_UPCOMING_LEAVE';\r\nexport const FETCH_LEAVE_HISTORY = 'FETCH_LEAVE_HISTORY';\r\nexport const FETCH_TODAY_LEAVE = 'FETCH_TODAY_LEAVE';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\r\nexport const CHANGE_PASSWORD = 'CHANGE_PASSWORD';\r\nexport const UPDATE_AUTH = 'UPDATE_AUTH';\r\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTH_START_LOADING = 'AUTH_START_LOADING';\r\nexport const AUTH_END_LOADING = 'AUTH_END_LOADING';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const FETCH_ALL_USER = 'FETCH_ALL_USER';\r\nexport const FETCH_ONE_USER = 'FETCH_ONE_USER';\r\nexport const USER_START_LOADING = 'USER_START_LOADING';\r\nexport const USER_END_LOADING = 'USER_END_LOADING';\r\nexport const USER_ERROR = 'USER_ERROR';\r\nexport const USER_SUCCESS = 'USER_SUCCESS';\r\nexport const FETCH_DEPT_USER = 'FETCH_DEPT_USER';\r\n\r\nexport const CREATE_DEPT = 'CREATE_DEPT';\r\nexport const UPDATE_DEPT = 'UPDATE_DEPT';\r\nexport const DELETE_DEPT = 'DELETE_DEPT';\r\nexport const FETCH_ALL_DEPT = 'FETCH_ALL_DEPT';\r\nexport const FETCH_ONE_DEPT = 'FETCH_ONE_DEPT';\r\nexport const DEPT_START_LOADING = 'DEPT_START_LOADING';\r\nexport const DEPT_END_LOADING = 'DEPT_END_LOADING';\r\nexport const DEPT_ERROR = 'DEPT_ERROR';\r\nexport const DEPT_SUCCESS = 'DEPT_SUCCESS';\r\n\r\nexport const CREATE_LEAVETYPE = 'CREATE_LEAVETYPE';\r\nexport const UPDATE_LEAVETYPE = 'UPDATE_LEAVETYPE';\r\nexport const DELETE_LEAVETYPE = 'DELETE_LEAVETYPE';\r\nexport const FETCH_ALL_LEAVETYPE = 'FETCH_ALL_LEAVETYPE';\r\nexport const FETCH_ONE_LEAVETYPE = 'FETCH_ONE_LEAVETYPE';\r\nexport const LEAVETYPE_START_LOADING = 'LEAVETYPE_START_LOADING';\r\nexport const LEAVETYPE_END_LOADING = 'LEAVETYPE_END_LOADING';\r\nexport const LEAVETYPE_ERROR = 'LEAVE_ERROR';\r\nexport const FETCH_LEAVE_COUNT = 'FETCH_LEAVE_COUNT';\r\nexport const LEAVETYPE_SUCCESS = 'LEAVE_SUCCESS';\r\n\r\nexport const CREATE_ROLE = 'CREATE_ROLE';\r\nexport const UPDATE_ROLE = 'UPDATE_ROLE';\r\nexport const DELETE_ROLE = 'DELETE_ROLE';\r\nexport const FETCH_ALL_ROLE = 'FETCH_ALL_ROLE';\r\nexport const FETCH_ONE_ROLE = 'FETCH_ONE_ROLE';\r\nexport const ROLE_START_LOADING = 'ROLE_START_LOADING';\r\nexport const ROLE_END_LOADING = 'ROLE_END_LOADING';\r\nexport const ROLE_ERROR = 'ROLE_ERROR';\r\nexport const ROLE_SUCCESS = 'ROLE_SUCCESS';\r\n\r\nexport const CREATE_HOLIDAY = 'CREATE_HOLIDAY';\r\nexport const UPDATE_HOLIDAY = 'UPDATE_HOLIDAY';\r\nexport const DELETE_HOLIDAY = 'DELETE_HOLIDAY';\r\nexport const FETCH_ALL_HOLIDAY = 'FETCH_ALL_HOLIDAY';\r\nexport const FETCH_ONE_HOLIDAY = 'FETCH_ONE_HOLIDAY';\r\nexport const HOLIDAY_START_LOADING = 'HOLIDAY_START_LOADING';\r\nexport const HOLIDAY_END_LOADING = 'HOLIDAY_END_LOADING';\r\nexport const HOLIDAY_ERROR = 'HOLIDAY_ERROR';\r\nexport const HOLIDAY_SUCCESS = 'HOLIDAY_SUCCESS';\r\nexport const FETCH_HOLIDAY_BY_YEAR = 'FETCH_HOLIDAY_BY_YEAR';\r\n\r\nexport const CREATE_TRAINING = 'CREATE_TRAINING';\r\nexport const FETCH_ALL_TRAINING = 'FETCH_ALL_TRAINING';\r\nexport const FETCH_ONE_TRAINING = 'FETCH_ONE_TRAINING';\r\nexport const TRAINING_START_LOADING = 'TRAINING_START_LOADING';\r\nexport const TRAINING_END_LOADING = 'TRAINING_END_LOADING';\r\nexport const TRAINING_ERROR = 'TRAINING_ERROR';\r\nexport const TRAINING_SUCCESS = 'TRAINING_SUCCESS';\r\nexport const UPDATE_TRAINING = 'UPDATE_TRAINING';\r\nexport const LEAVE_TRAINING = 'LEAVE_TRAINING';\r\nexport const FETCH_EXT_TRAINING = 'FETCH_EXT_TRAINING';\r\nexport const UPDATE_TRAINING_STATUS = 'UPDATE_TRAINING_STATUS';\r\nexport const FETCH_EXT_TRAINING_HISTORY = 'FETCH_EXT_TRAINING_HISTORY';\r\nexport const FETCH_TRAINING_HISTORY = 'FETCH_TRAINING_HISTORY';\r\nexport const FETCH_UPCOMING_TRAINING = 'FETCH_UPCOMING_TRAINING';\r\nexport const FETCH_TODAY_TRAINING = 'FETCH_TODAY_TRAINING';\r\nexport const FETCH_TRAINING_COUNT = 'FETCH_TRAINING_COUNT';\r\n\r\nexport const CREATE_TRAININGPROGRESS = 'CREATE_TRAININGPROGRESS';\r\nexport const FETCH_ALL_TRAININGPROGRESS = 'FETCH_ALL_TRAININGPROGRESS';\r\nexport const FETCH_ONE_TRAININGPROGRESS = 'FETCH_ONE_TRAININGPROGRESS';\r\nexport const TRAININGPROGRESS_START_LOADING = 'TRAININGPROGRESS_START_LOADING';\r\nexport const TRAININGPROGRESS_END_LOADING = 'TRAININGPROGRESS_END_LOADING';\r\nexport const TRAININGPROGRESS_ERROR = 'TRAININGPROGRESS_ERROR';\r\nexport const TRAININGPROGRESS_SUCCESS = 'TRAININGPROGRESS_SUCCESS';\r\nexport const UPDATE_TRAININGPROGRESS = 'UPDATE_TRAININGPROGRESS';\r\nexport const LEAVE_TRAININGPROGRESS = 'LEAVE_TRAININGPROGRESS';\r\nexport const FETCH_DEPT_TRAININGPROGRESS = 'FETCH_DEPT_TRAININGPROGRESS';\r\nexport const FETCH_USER_TRAININGPROGRESS = 'FETCH_USER_TRAININGPROGRESS';\r\n//\r\nexport const FETCH_EXT_TRAININGPROGRESS = 'FETCH_EXT_TRAININGPROGRESS';\r\nexport const UPDATE_TRAININGPROGRESS_STATUS = 'UPDATE_TRAININGPROGRESS_STATUS';\r\nexport const FETCH_EXT_TRAININGPROGRESS_HISTORY =\r\n  'FETCH_EXT_TRAININGPROGRESS_HISTORY';\r\nexport const FETCH_TRAININGPROGRESS_HISTORY = 'FETCH_TRAININGPROGRESS_HISTORY';\r\nexport const FETCH_UPCOMING_TRAININGPROGRESS =\r\n  'FETCH_UPCOMING_TRAININGPROGRESS';\r\nexport const FETCH_TODAY_TRAININGPROGRESS = 'FETCH_TODAY_TRAININGPROGRESS';\r\n\r\nexport const CREATE_POLICY = 'CREATE_POLICY';\r\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\r\nexport const DELETE_POLICY = 'DELETE_POLICY';\r\nexport const FETCH_ALL_POLICY = 'FETCH_ALL_POLICY';\r\nexport const FETCH_POLICY_BY_DEPT = 'FETCH_POLICY_BY_DEPT';\r\nexport const FETCH_ONE_POLICY = 'FETCH_ONE_POLICY';\r\nexport const POLICY_START_LOADING = 'POLICY_START_LOADING';\r\nexport const POLICY_END_LOADING = 'POLICY_END_LOADING';\r\nexport const POLICY_ERROR = 'POLICY_ERROR';\r\nexport const POLICY_SUCCESS = 'POLICY_SUCCESS';\r\n\r\nexport const NOTIFICATION_START_LOADING = 'NOTIFICATION_START_LOADING';\r\nexport const NOTIFICATION_END_LOADING = 'NOTIFICATION_END_LOADING';\r\nexport const NOTIFICATION_ERROR = 'NOTIFICATION_ERROR';\r\nexport const NOTIFICATION_SUCCESS = 'NOTIFICATION_SUCCESS';\r\nexport const FETCH_ALL_NOTIFICATION = 'FETCH_ALL_NOTIFICATION';\r\nexport const CLEAR_NOTIFICATION_BY_TYPE = 'CLEAR_NOTIFICATION_BY_TYPE';\r\nexport const SET_NOTIFICATION_READ = 'SET_NOTIFICATION_READ';\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_LEAVE,\r\n  FETCH_ALL_LEAVE,\r\n  FETCH_LEAVE_BY_DATERANGE,\r\n  FETCH_LEAVE_BY_DATERANGE_PERSONAL,\r\n  FETCH_LEAVE_COUNT,\r\n  FETCH_LEAVE_HISTORY,\r\n  FETCH_LEAVE_REQUESTS,\r\n  FETCH_ONE_LEAVE,\r\n  FETCH_TODAY_LEAVE,\r\n  FETCH_UPCOMING_LEAVE,\r\n  LEAVE_END_LOADING,\r\n  LEAVE_ERROR,\r\n  LEAVE_START_LOADING,\r\n  UPDATE_LEAVE,\r\n} from '../constants/actionTypes';\r\n\r\nexport const fetchAllLeaves = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchAllLeaves();\r\n    dispatch({ type: FETCH_ALL_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const fetchLeaveById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveById(id);\r\n    dispatch({ type: FETCH_ONE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const createLeave = (leave) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.createLeave(leave);\r\n    dispatch({ type: CREATE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const updateLeave = (id, leave) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.updateLeave(id, leave);\r\n    dispatch({ type: UPDATE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const fetchLeaveByDateRange = (dateRange) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const data = await api.fetchLeaveByDateRange(dateRange);\r\n\r\n    dispatch({ type: FETCH_LEAVE_BY_DATERANGE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const fetchLeaveByDateRangePersonal =\r\n  (dateRange) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LEAVE_START_LOADING });\r\n      const data = await api.fetchLeaveByDateRangePersonal(dateRange);\r\n\r\n      dispatch({ type: FETCH_LEAVE_BY_DATERANGE_PERSONAL, payload: data });\r\n      dispatch({ type: LEAVE_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: LEAVE_ERROR, error });\r\n    }\r\n  };\r\nexport const fetchLeaveRequests =\r\n  (role, user, department) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LEAVE_START_LOADING });\r\n      const { data } = await api.fetchLeaveRequests(role, user, department);\r\n      dispatch({ type: FETCH_LEAVE_REQUESTS, payload: data });\r\n      dispatch({ type: LEAVE_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: LEAVE_ERROR, error });\r\n    }\r\n  };\r\nexport const fetchUpcomingLeaves = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchUpcomingLeaves(id);\r\n    dispatch({ type: FETCH_UPCOMING_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const fetchLeaveHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveHistory(id);\r\n    dispatch({ type: FETCH_LEAVE_HISTORY, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const fetchTodayLeaves = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchTodayLeaves();\r\n    dispatch({ type: FETCH_TODAY_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\nexport const fetchLeaveCount = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveCount();\r\n    dispatch({ type: FETCH_LEAVE_COUNT, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });\r\n  }\r\n};\r\n","import { message } from 'antd';\r\nimport * as api from '../api/index.js';\r\nimport {\r\n  CREATE_TRAINING,\r\n  FETCH_ALL_TRAINING,\r\n  FETCH_EXT_TRAINING,\r\n  FETCH_EXT_TRAINING_HISTORY,\r\n  FETCH_ONE_TRAINING,\r\n  FETCH_TODAY_TRAINING,\r\n  FETCH_TRAINING_COUNT,\r\n  FETCH_TRAINING_HISTORY,\r\n  FETCH_UPCOMING_TRAINING,\r\n  LEAVE_TRAINING,\r\n  TRAINING_END_LOADING,\r\n  TRAINING_ERROR,\r\n  TRAINING_START_LOADING,\r\n  UPDATE_TRAINING,\r\n  UPDATE_TRAINING_STATUS,\r\n} from '../constants/actionTypes';\r\n\r\nexport const fetchAllTrainings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchAllTrainings();\r\n    dispatch({ type: FETCH_ALL_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchTrainingById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingById(id);\r\n    dispatch({ type: FETCH_ONE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const createTraining = (training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.createTraining(training);\r\n    dispatch({ type: CREATE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const updateTraining = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.updateTraining(id, training);\r\n    dispatch({ type: UPDATE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const leaveTraining = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.leaveTraining(id, training);\r\n    dispatch({ type: LEAVE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchExtTraining =\r\n  (role, user, department) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: TRAINING_START_LOADING });\r\n      const { data } = await api.fetchExtTraining(role, user, department);\r\n      dispatch({ type: FETCH_EXT_TRAINING, payload: data });\r\n      dispatch({ type: TRAINING_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: TRAINING_ERROR, error });\r\n    }\r\n  };\r\nexport const updateTrainingStatus = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.updateTrainingStatus(id, training);\r\n    dispatch({ type: UPDATE_TRAINING_STATUS, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchExtTrainingHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchExtTrainingHistory(id);\r\n    dispatch({ type: FETCH_EXT_TRAINING_HISTORY, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchTrainingHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingHistory(id);\r\n    dispatch({ type: FETCH_TRAINING_HISTORY, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchUpcomingTraining = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchUpcomingTraining(id);\r\n    dispatch({ type: FETCH_UPCOMING_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchTodayTrainings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTodayTrainings();\r\n    dispatch({ type: FETCH_TODAY_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\nexport const fetchTrainingCount = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingCount();\r\n    dispatch({ type: FETCH_TRAINING_COUNT, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });\r\n  }\r\n};\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_LEAVETYPE,\r\n  FETCH_ALL_LEAVETYPE,\r\n  FETCH_ONE_LEAVETYPE,\r\n  LEAVETYPE_END_LOADING,\r\n  LEAVETYPE_ERROR,\r\n  LEAVETYPE_START_LOADING,\r\n  LEAVETYPE_SUCCESS,\r\n  UPDATE_LEAVETYPE,\r\n} from '../constants/actionTypes';\r\n\r\nexport const getLeaveTypes = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.getLeaveTypes();\r\n    dispatch({ type: FETCH_ALL_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVETYPE_ERROR, error });\r\n  }\r\n};\r\nexport const getLeaveType = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.getLeaveType(id);\r\n    dispatch({ type: FETCH_ONE_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: LEAVETYPE_ERROR, error });\r\n  }\r\n};\r\nexport const createLeaveType = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.createLeaveType(formData);\r\n    dispatch({ type: CREATE_LEAVETYPE, payload: data });\r\n    dispatch({\r\n      type: LEAVETYPE_SUCCESS,\r\n      payload: { success: 'Leave type successfully created' },\r\n    });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVETYPE_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateLeaveType = (id, leaveType) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.updateLeaveType(id, leaveType);\r\n    dispatch({ type: UPDATE_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVETYPE_ERROR, error });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst PageLoading = ({ props }) => {\r\n  return (\r\n    <div\r\n      style={{ paddingTop: 100, paddingBottom: 100, textAlign: 'center' }}\r\n      className='antdp-page-loading'\r\n    >\r\n      <Spin size='large' tip='Loading...' {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLoading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchTodayLeaves } from '../../actions/leaves';\r\nimport { fetchTodayTrainings } from '../../actions/training';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\n\r\nimport './Home.less';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\n\r\nconst Home = ({ user }) => {\r\n  const screens = useBreakpoint();\r\n  const { leaves, isLoading, todayLeaves } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { trainings } = useSelector((state) => state.trainings);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTodayLeaves());\r\n    dispatch(fetchTodayTrainings());\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n\r\n  const leaveData = [];\r\n\r\n  user.leaveCount.forEach((element) => {\r\n    var temp = { name: element.leaveType.name, value: element.count };\r\n    leaveData.push(temp);\r\n  });\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const checkSelfLeave = () => {\r\n    if (todayLeaves.some((e) => e.user._id === user._id)) return true;\r\n    else return false;\r\n  };\r\n\r\n  var totalTraining = user.trainingHours,\r\n    completedTraining = user.completedHours;\r\n  var trainingNeeded = totalTraining - completedTraining;\r\n  var completionPercentage = completedTraining / totalTraining;\r\n  trainingNeeded = trainingNeeded < 0 ? '' : trainingNeeded;\r\n\r\n  const trainingData = [\r\n    { name: 'Hours Completed', value: completedTraining },\r\n    { name: 'Hours Required', value: trainingNeeded },\r\n  ];\r\n\r\n  const COLORS1 = ['#0088FE', '#2ce654', '#ff00f0'];\r\n  const COLORS2 = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (isLoading || !leaves || !todayLeaves || !trainings)\r\n    return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Personal Dashboard</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              column={{ sm: 2, xs: 1 }}\r\n              layout={screens.md ? 'horizontal' : 'vertical'}\r\n            >\r\n              <Descriptions.Item label='Name' span={3}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              {user.leaveCount.map((entry, index) => (\r\n                <Descriptions.Item\r\n                  label={entry.leaveType.name}\r\n                  span={2}\r\n                  key={entry.leaveType._id}\r\n                >\r\n                  {entry.count}\r\n                </Descriptions.Item>\r\n              ))}\r\n              <Descriptions.Item label='Total Training Hours Required' span={1}>\r\n                {totalTraining}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Training Hours Completed' span={1}>\r\n                {completedTraining}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            <br />\r\n            {checkSelfLeave() && (\r\n              <>\r\n                <Alert message='You are on leave today.' type='info' showIcon />\r\n                <br />\r\n              </>\r\n            )}\r\n            {completionPercentage <= 0.25 ? (\r\n              <Alert\r\n                message='Low Training Hours Completed'\r\n                description='Please participate in more trainings in order to reach your quota!'\r\n                type='error'\r\n              />\r\n            ) : completionPercentage < 0.75 ? (\r\n              <Alert\r\n                message='Moderate Training Hours Completed'\r\n                description='Keep up the good work! Participate in more trainings to reach your quota.'\r\n                type='warning'\r\n              />\r\n            ) : completionPercentage < 1 ? (\r\n              <Alert\r\n                message='Great Training Hours Completed'\r\n                description='Almost there! Keep participating in trainings to reach your quota!'\r\n                type='success'\r\n              />\r\n            ) : (\r\n              <Alert\r\n                message='Training Quota Reached'\r\n                description='Congratulations! You have reached your training quota!'\r\n                type='success'\r\n              />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12} lg={8}>\r\n          <Card bordered>\r\n            <h4>Your Leaves Remaining</h4>\r\n            <ResponsiveContainer minHeight={180}>\r\n              <BarChart\r\n                data={leaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <Bar fill='#0088FE' dataKey='value'>\r\n                  {leaveData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS1[index % COLORS1.length]}\r\n                    />\r\n                  ))}\r\n                </Bar>\r\n                <YAxis />\r\n                <XAxis dataKey='name' />\r\n                <Tooltip />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            <h4>Your Training Hours</h4>\r\n            <ResponsiveContainer minWidth={200} minHeight={210}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={trainingData}\r\n                  innerRadius={40}\r\n                  outerRadius={60}\r\n                  fill='#8884d8'\r\n                  paddingAngle={3}\r\n                  startAngle={-270}\r\n                  dataKey='value'\r\n                  isAnimationActive={false}\r\n                  label={renderCustomizedLabel}\r\n                  labelLine={false}\r\n                >\r\n                  {trainingData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS2[index % COLORS2.length]}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Today's Information</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round'>\r\n                <Link to='/leaves/home'>Leaves Dashboard</Link>\r\n              </Button>\r\n            </div>\r\n            <b>Currently on Leave:</b>\r\n            {todayLeaves &&\r\n              (!todayLeaves.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={todayLeaves} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.user.first_name} ${record.user.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => (\r\n                        <Tag color={text.color}>\r\n                          {capitalizeFirstLetter(text.code)}\r\n                        </Tag>\r\n                      )}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Date'\r\n                      dataIndex='date'\r\n                      key='date'\r\n                      render={(text, record) =>\r\n                        `${moment(record.fromDate).format(\r\n                          'YYYY-MM-DD'\r\n                        )} - ${moment(record.toDate).format('YYYY-MM-DD')}`\r\n                      }\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round'>\r\n                <Link to='/training/home'>Training Dashboard</Link>\r\n              </Button>\r\n            </div>\r\n            <b>Internal Trainings Today:</b>\r\n            {trainings &&\r\n              (!trainings.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={trainings} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Organizer'\r\n                      dataIndex='organizer'\r\n                      key='organizer'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Tite'\r\n                      dataIndex='title'\r\n                      key='title'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`/training/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/**<h4>Leaves Taken by Month for All Employees</h4>\r\n            <ResponsiveContainer minHeight={425}>\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                <Line\r\n                  type='monotone'\r\n                  dataKey='Casual'\r\n                  stroke='#8884d8'\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Line type='monotone' dataKey='Medical' stroke='#82ca9d' />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <Button type='primary'>\r\n              <Link to='/calendar'>View on Calendar</Link>\r\n            </Button> */\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveRequests, fetchUpcomingLeaves } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Descriptions,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n} from 'recharts';\r\n\r\nimport './LeaveHome.css';\r\nimport { set } from 'lodash';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nconst { Text } = Typography;\r\n\r\nconst LeaveHome = () => {\r\n  const screens = useBreakpoint();\r\n  const [loading, setLoading] = useState(true);\r\n  const { leaves, upcomingLeave, isLoading } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  var count = 0;\r\n\r\n  const leaveData = [];\r\n\r\n  user.leaveCount.forEach((element) => {\r\n    var temp = { name: element.leaveType.name, value: element.count };\r\n    leaveData.push(temp);\r\n  });\r\n  const COLORS = ['#0088FE', '#2ce654', '#ff00f0'];\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUpcomingLeaves(user._id));\r\n    dispatch(getLeaveTypes());\r\n    if (user.roles.name != 'staff')\r\n      dispatch(\r\n        fetchLeaveRequests(user.roles.name, user._id, user.department.name)\r\n      );\r\n  }, [dispatch]);\r\n\r\n  for (var element of leaves) {\r\n    if (element.status == 'Pending') count++;\r\n  }\r\n\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Current Leave Status</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} md={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              column={{ sm: 2, xs: 1 }}\r\n              layout={screens.md ? 'horizontal' : 'vertical'}\r\n            >\r\n              <Descriptions.Item label='Name' span={2}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              {user.leaveCount.map((entry, index) => (\r\n                <Descriptions.Item\r\n                  label={entry.leaveType.name}\r\n                  span={1}\r\n                  key={entry.leaveType._id}\r\n                >\r\n                  {entry.count}\r\n                </Descriptions.Item>\r\n              ))}\r\n            </Descriptions>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} md={12} lg={8}>\r\n          <Card bordered>\r\n            <ResponsiveContainer minHeight={215}>\r\n              <BarChart\r\n                data={leaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <Bar fill='#0088FE' dataKey='value'>\r\n                  {leaveData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                </Bar>\r\n                <YAxis />\r\n                <XAxis dataKey='name' />\r\n                <Tooltip />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Quick Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round' style={{ margin: '10px' }}>\r\n                <Link to='/leaves/create'>To Leave Application</Link>\r\n              </Button>\r\n              <Button type='primary' shape='round' style={{ margin: '10px' }}>\r\n                <Link to='/leaves/history'>To Leave History</Link>\r\n              </Button>\r\n            </div>\r\n            <b>Upcoming Leaves:</b>\r\n            {upcomingLeave &&\r\n              (!upcomingLeave.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={upcomingLeave} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => (\r\n                        <Tag color={text.color}>\r\n                          {capitalizeFirstLetter(text.code)}\r\n                        </Tag>\r\n                      )}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Reason'\r\n                      dataIndex='reason'\r\n                      key='reason'\r\n                      //render={(text, record) => <Text ellipsis>{text}</Text>}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Date'\r\n                      dataIndex='date'\r\n                      key='date'\r\n                      render={(text, record) =>\r\n                        `${moment(record.fromDate).format(\r\n                          'YYYY-MM-DD'\r\n                        )} - ${moment(record.toDate).format('YYYY-MM-DD')}`\r\n                      }\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n            <br />\r\n          </Card>\r\n        </Col>\r\n        {user.roles.name != 'staff' && (\r\n          <Col className='gutter-row' xs={24} sm={12}>\r\n            <Card bordered>\r\n              <Space\r\n                wrap\r\n                align='baseline'\r\n                style={{ display: 'flex', justifyContent: 'space-between' }}\r\n              >\r\n                <Typography.Text>\r\n                  Pending Leave Requests:{` ${count}`}\r\n                </Typography.Text>\r\n\r\n                <Button type='primary' shape='round'>\r\n                  <Link to='/leaves/list'>To Requests</Link>\r\n                </Button>\r\n              </Space>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveHome;\r\n","import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n  CalendarOutlined,\r\n} from '@ant-design/icons';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/home',\r\n        name: 'Personal Dashboard',\r\n        icon: <UserOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Leaves Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'create',\r\n            name: 'Apply Leave',\r\n            icon: <UsergroupAddOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Leave History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: '/calendar/personal',\r\n            name: 'Calendar View',\r\n            icon: <CalendarOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Training Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Internal Training List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Training History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: '/training/submitExt',\r\n            name: 'External Training Request',\r\n            icon: <FormOutlined />,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n  BarChartOutlined,\r\n  ApartmentOutlined,\r\n  CalendarOutlined,\r\n  ExclamationCircleOutlined,\r\n  TeamOutlined,\r\n} from '@ant-design/icons';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        name: 'Dashboard',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/home',\r\n            name: 'Personal',\r\n            icon: <UserOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/supervisor',\r\n            name: 'Department',\r\n            icon: <ApartmentOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Leaves Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'create',\r\n            name: 'Apply Leave',\r\n            icon: <UsergroupAddOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Leave History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Leave Requests',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/calendar/personal',\r\n            name: 'Calendar View',\r\n            icon: <CalendarOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Training Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Internal Training List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Training History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'submitExt',\r\n            name: 'External Training Request',\r\n            icon: <FormOutlined />,\r\n          },\r\n          {\r\n            path: 'extList',\r\n            name: 'External Requests List',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/trainingProgress/history',\r\n            name: 'Track Training Progress',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/trainingProgress/list',\r\n            name: 'Pending Training Completion',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/users/dept',\r\n        name: 'Employee',\r\n        icon: <TeamOutlined />,\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n","import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n  BarChartOutlined,\r\n  ApartmentOutlined,\r\n  CalendarOutlined,\r\n  ExclamationCircleOutlined,\r\n  LaptopOutlined,\r\n  SettingOutlined,\r\n  AuditOutlined,\r\n  TeamOutlined,\r\n} from '@ant-design/icons';\r\nimport { HiUserGroup } from 'react-icons/hi';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/dashboard',\r\n        name: 'Dashboard',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/home',\r\n            name: 'Personal',\r\n            icon: <UserOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/supervisor',\r\n            name: 'Department',\r\n            icon: <ApartmentOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/admin',\r\n            name: 'Admin',\r\n            icon: <LaptopOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/calendar',\r\n        name: 'Calendar',\r\n        icon: <CalendarOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Leaves Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'create',\r\n            name: 'Apply Leave',\r\n            icon: <UsergroupAddOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Leave History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Leave Requests',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/calendar/personal',\r\n            name: 'Calendar View',\r\n            icon: <CalendarOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: 'home',\r\n            name: 'Training Dashboard',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'create',\r\n            name: 'Create Internal Training',\r\n            icon: <UsergroupAddOutlined />,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Internal Training List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Training History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'submitExt',\r\n            name: 'External Training Request',\r\n            icon: <FormOutlined />,\r\n          },\r\n          {\r\n            path: 'extList',\r\n            name: 'External Requests List',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/trainingProgress/history',\r\n            name: 'Track Training Progress',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n          {\r\n            path: '/trainingProgress/list',\r\n            name: 'Pending Training Completion',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/settings',\r\n        name: 'Settings',\r\n        icon: <SettingOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/holidays',\r\n            name: 'Holidays',\r\n            icon: <CalendarOutlined />,\r\n          },\r\n          {\r\n            path: '/depts',\r\n            name: 'Departments',\r\n            icon: <AuditOutlined />,\r\n          },\r\n          {\r\n            path: '/leaveTypes',\r\n            name: 'Leave Types',\r\n            icon: <AuditOutlined />,\r\n          },\r\n          {\r\n            path: '/policy',\r\n            name: 'Policy',\r\n            icon: <AuditOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/users',\r\n        name: 'Employee',\r\n        icon: <TeamOutlined />,\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n","import { Avatar, List } from 'antd';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport './NoticeList.less';\r\n\r\nconst NoticeList = ({\r\n  list = [],\r\n  onClick,\r\n  onClear,\r\n  title,\r\n  onViewMore,\r\n  emptyText,\r\n  showClear = true,\r\n  clearText,\r\n  viewMoreText,\r\n  showViewMore = false,\r\n}) => {\r\n  if (!list || list.length === 0) {\r\n    return (\r\n      <div className={`notFound`}>\r\n        <img\r\n          src='https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg'\r\n          alt='not found'\r\n        />\r\n        <div>{emptyText}</div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <List\r\n        className={`list`}\r\n        dataSource={list}\r\n        renderItem={(item, i) => {\r\n          const itemCls = classNames(`item`, {\r\n            [`read`]: item.read,\r\n          });\r\n          // eslint-disable-next-line no-nested-ternary\r\n          const leftIcon = item.avatar ? (\r\n            typeof item.avatar === 'string' ? (\r\n              <Avatar className={`avatar`} src={item.avatar} />\r\n            ) : (\r\n              <span className={`iconElement`}>{item.avatar}</span>\r\n            )\r\n          ) : null;\r\n\r\n          return (\r\n            <List.Item\r\n              className={itemCls}\r\n              key={item.key || i}\r\n              onClick={() => {\r\n                onClick?.(item);\r\n              }}\r\n            >\r\n              <List.Item.Meta\r\n                className={`meta`}\r\n                avatar={leftIcon}\r\n                title={\r\n                  <div className={`title`}>\r\n                    {item.title}\r\n                    <div className={`extra`}>{item.extra}</div>\r\n                  </div>\r\n                }\r\n                description={\r\n                  <div>\r\n                    <div\r\n                      className={`description`}\r\n                    >{`${item.sender.first_name} ${item.sender.last_name} ${item.content.message}`}</div>\r\n                    <div className={`datetime`}>{item.createdAt}</div>\r\n                  </div>\r\n                }\r\n              />\r\n            </List.Item>\r\n          );\r\n        }}\r\n      />\r\n      <div className={`bottomBar`}>\r\n        {showClear ? (\r\n          <div onClick={onClear}>\r\n            {clearText} {title}\r\n          </div>\r\n        ) : null}\r\n        {showViewMore ? (\r\n          <div\r\n            onClick={(e) => {\r\n              if (onViewMore) {\r\n                onViewMore(e);\r\n              }\r\n            }}\r\n          >\r\n            {viewMoreText}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n","import { Dropdown } from 'antd';\r\nimport React from 'react';\r\nimport './HeaderDropdown.less';\r\n\r\nconst HeaderDropdown = ({ overlayClassName: cls, ...restProps }) => (\r\n  <Dropdown\r\n    overlayClassName={`container ${cls}`}\r\n    {...restProps}\r\n    trigger={['click']}\r\n  />\r\n);\r\n\r\nexport default HeaderDropdown;\r\n","import { BellOutlined } from '@ant-design/icons';\r\nimport { Badge, Spin, Tabs } from 'antd';\r\nimport useMergedState from 'rc-util/es/hooks/useMergedState';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport NoticeList from './NoticeList';\r\nimport HeaderDropdown from '../HeaderDropdown/HeaderDropdown';\r\nimport './index.less';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst NoticeIcon = (props) => {\r\n  const getNotificationBox = () => {\r\n    const {\r\n      children,\r\n      loading,\r\n      onClear,\r\n      onTabChange,\r\n      onItemClick,\r\n      onViewMore,\r\n      clearText,\r\n      viewMoreText,\r\n    } = props;\r\n    if (!children) {\r\n      return null;\r\n    }\r\n    const panes = [];\r\n    React.Children.forEach(children, (child) => {\r\n      if (!child) {\r\n        return;\r\n      }\r\n      const { list, title, count, tabKey, showClear, showViewMore } =\r\n        child.props;\r\n      const len = list && list.length ? list.length : 0;\r\n      const msgCount = count || count === 0 ? count : len;\r\n      const tabTitle = msgCount > 0 ? `${title} (${msgCount})` : title;\r\n      panes.push(\r\n        <TabPane tab={tabTitle} key={tabKey}>\r\n          <NoticeList\r\n            clearText={clearText}\r\n            viewMoreText={viewMoreText}\r\n            list={list}\r\n            tabKey={tabKey}\r\n            onClear={() => onClear && onClear(title, tabKey)}\r\n            onClick={(item) => onItemClick && onItemClick(item, child.props)}\r\n            onViewMore={(event) => onViewMore && onViewMore(child.props, event)}\r\n            showClear={showClear}\r\n            showViewMore={showViewMore}\r\n            title={title}\r\n          />\r\n        </TabPane>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <Spin spinning={loading} delay={300}>\r\n          <Tabs className={`tabs`} onChange={onTabChange} centered>\r\n            {panes}\r\n          </Tabs>\r\n        </Spin>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const { className, count, bell } = props;\r\n\r\n  const [visible, setVisible] = useMergedState(false, {\r\n    value: props.popupVisible,\r\n    onChange: props.onPopupVisibleChange,\r\n  });\r\n  const noticeButtonClass = classNames(className, `noticeButton`);\r\n  const notificationBox = getNotificationBox();\r\n  const NoticeBellIcon = bell || <BellOutlined className={`icon`} />;\r\n  const trigger = (\r\n    <span className={classNames(noticeButtonClass, { opened: visible })}>\r\n      <Badge count={count} style={{ boxShadow: 'none' }} className={`badge`}>\r\n        {NoticeBellIcon}\r\n      </Badge>\r\n    </span>\r\n  );\r\n  if (!notificationBox) {\r\n    return trigger;\r\n  }\r\n\r\n  return (\r\n    <HeaderDropdown\r\n      placement='bottomRight'\r\n      overlay={notificationBox}\r\n      overlayClassName={`popover`}\r\n      trigger={['click']}\r\n      visible={visible}\r\n      onVisibleChange={setVisible}\r\n    >\r\n      {trigger}\r\n    </HeaderDropdown>\r\n  );\r\n};\r\n\r\nNoticeIcon.defaultProps = {\r\n  emptyImage:\r\n    'https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg',\r\n};\r\n\r\nNoticeIcon.Tab = NoticeList;\r\n\r\nexport default NoticeIcon;\r\n","import {\r\n  CLEAR_NOTIFICATION_BY_TYPE,\r\n  FETCH_ALL_NOTIFICATION,\r\n  NOTIFICATION_END_LOADING,\r\n  NOTIFICATION_ERROR,\r\n  NOTIFICATION_START_LOADING,\r\n  SET_NOTIFICATION_READ,\r\n} from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\nexport const getNotificationsById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_START_LOADING });\r\n    const { data } = await api.getNotificationsById(id);\r\n    dispatch({ type: FETCH_ALL_NOTIFICATION, payload: data });\r\n    dispatch({ type: NOTIFICATION_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: NOTIFICATION_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const clearNotificationsByType = (user, type) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_START_LOADING });\r\n    const { data } = await api.clearNotificationsByType(user, type);\r\n    dispatch({ type: CLEAR_NOTIFICATION_BY_TYPE, payload: type });\r\n    dispatch({ type: NOTIFICATION_END_LOADING });\r\n    return true;\r\n  } catch (error) {\r\n    dispatch({ type: NOTIFICATION_ERROR, error });\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const setNotificationRead = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: NOTIFICATION_START_LOADING });\r\n    const { data } = await api.setNotificationRead(id);\r\n    dispatch({ type: SET_NOTIFICATION_READ, payload: data });\r\n    dispatch({ type: NOTIFICATION_END_LOADING });\r\n    return true;\r\n  } catch (error) {\r\n    dispatch({ type: NOTIFICATION_ERROR, error });\r\n\r\n    return false;\r\n  }\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { Tag, message } from 'antd';\r\nimport { groupBy } from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport NoticeIcon from './NoticeIcon';\r\nimport './index.less';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  clearNotificationsByType,\r\n  getNotificationsById,\r\n  setNotificationRead,\r\n} from '../../actions/notification';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nconst getNotices = () => {\r\n  return {\r\n    data: [\r\n      {\r\n        id: '000000001',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png',\r\n        title: '你收到了 14 份新周报',\r\n        datetime: '2017-08-09',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000002',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/OKJXDXrmkNshAMvwtvhu.png',\r\n        title: '你推荐的 曲妮妮 已通过第三轮面试',\r\n        datetime: '2017-08-08',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000003',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/kISTdvpyTAhtGxpovNWd.png',\r\n        title: '这种模板可以区分多种通知类型',\r\n        datetime: '2017-08-07',\r\n        read: true,\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000004',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/GvqBnKhFgObvnSGkDsje.png',\r\n        title: '左侧图标用于区分不同的类型',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000005',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png',\r\n        title: '内容不要超过两行字，超出时自动截断',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000006',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '曲丽丽 评论了你',\r\n        description: '描述信息描述信息描述信息',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000007',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '朱偏右 回复了你',\r\n        description: '这种模板用于提醒谁与你发生了互动，左侧放『谁』的头像',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000008',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '标题',\r\n        description: '这种模板用于提醒谁与你发生了互动，左侧放『谁』的头像',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000009',\r\n        title: '任务名称',\r\n        description: '任务需要在 2017-01-12 20:00 前启动',\r\n        extra: '未开始',\r\n        status: 'todo',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000010',\r\n        title: '第三方紧急代码变更',\r\n        description:\r\n          '冠霖提交于 2017-01-06，需在 2017-01-07 前完成代码变更任务',\r\n        extra: '马上到期',\r\n        status: 'urgent',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000011',\r\n        title: '信息安全考试',\r\n        description: '指派竹尔于 2017-01-09 前完成更新并发布',\r\n        extra: '已耗时 8 天',\r\n        status: 'doing',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000012',\r\n        title: 'ABCD 版本发布',\r\n        description:\r\n          '冠霖提交于 2017-01-06，需在 2017-01-07 前完成代码变更任务',\r\n        extra: '进行中',\r\n        status: 'processing',\r\n        type: 'notification',\r\n      },\r\n    ],\r\n  };\r\n};\r\nconst getNoticeData = (notices) => {\r\n  if (!notices || notices.length === 0 || !Array.isArray(notices)) {\r\n    return {};\r\n  }\r\n\r\n  const newNotices = notices.map((notice) => {\r\n    const newNotice = { ...notice };\r\n\r\n    if (newNotice.createdAt) {\r\n      newNotice.createdAt = moment(notice.createdAt).fromNow();\r\n    }\r\n\r\n    if (newNotice._id) {\r\n      newNotice.key = newNotice._id;\r\n    }\r\n\r\n    if (newNotice.content.status) {\r\n      const color = {\r\n        Pending: 'blue',\r\n        Rejected: 'red',\r\n        Approved: 'green',\r\n        'Waiting Completion': 'blue',\r\n        'Pending Approval': 'blue',\r\n      }[newNotice.content.status];\r\n      newNotice.extra = (\r\n        <Tag\r\n          color={color}\r\n          style={{\r\n            marginRight: 0,\r\n          }}\r\n        >\r\n          {newNotice.content.status}\r\n        </Tag>\r\n      );\r\n    }\r\n    return newNotice;\r\n  });\r\n  return groupBy(newNotices, 'content.type');\r\n};\r\n\r\nconst getUnreadData = (noticeData) => {\r\n  const unreadMsg = {};\r\n  Object.keys(noticeData).forEach((key) => {\r\n    const value = noticeData[key];\r\n\r\n    if (!unreadMsg[key]) {\r\n      unreadMsg[key] = 0;\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n      unreadMsg[key] = value.filter((item) => !item.read).length;\r\n    }\r\n  });\r\n  return unreadMsg;\r\n};\r\nconst getTotalUnreadCount = (unreadMsg) => {\r\n  let total = 0;\r\n  for (const key in unreadMsg) {\r\n    total += unreadMsg[key];\r\n  }\r\n  return total;\r\n};\r\nconst NoticeIconView = ({ user, socket }) => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [random, setRandom] = useState({ key: Math.random() });\r\n  const { notifications, isLoading } = useSelector(\r\n    (state) => state.notifications\r\n  );\r\n  const [notices, setNotices] = useState(notifications);\r\n  let noticeData = getNoticeData(notices);\r\n  let unreadMsg = getUnreadData(noticeData || {});\r\n  let totalCount = getTotalUnreadCount(unreadMsg);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(getNotificationsById(user._id)).then((data) => {\r\n        setNotices(data);\r\n      });\r\n    }\r\n  }, [user, location]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      socket?.on('newNotification', () => {\r\n        dispatch(getNotificationsById(user._id)).then((data) => {\r\n          setNotices(data);\r\n        });\r\n      });\r\n    }\r\n  }, [socket, user]);\r\n\r\n  // const { initialState } = useModel('@@initialState');\r\n  // const { currentUser } = initialState || {};\r\n\r\n  /** \r\n  useEffect(() => {\r\n    // getNotices().then(({ data }) => setNotices(data || []));\r\n    // setNotices(getNotices().data || []);\r\n  }, []);\r\n*/\r\n\r\n  const changeReadState = async (id) => {\r\n    const newN = notices.map((item) => {\r\n      const notice = { ...item };\r\n      if (notice._id === id) {\r\n        if (!notice.read) {\r\n          dispatch(setNotificationRead(id));\r\n          notice.read = true;\r\n        }\r\n        if (notice.content.type == 'leave') {\r\n          navigate(`leaves/view/${notice.content.id}`);\r\n        } else if (notice.content.type == 'training') {\r\n          navigate(`training/view/${notice.content.id}`);\r\n        }\r\n      }\r\n      return notice;\r\n    });\r\n    setNotices(newN);\r\n  };\r\n\r\n  const clearReadState = async (title, key) => {\r\n    await dispatch(clearNotificationsByType(user._id, { type: key }));\r\n    const newN = notices.filter((item) => item.content.type != key);\r\n\r\n    setNotices(newN);\r\n\r\n    message.success(`${'Clear'} ${title}`);\r\n  };\r\n  return (\r\n    <NoticeIcon\r\n      className={`action`}\r\n      //count={currentUser&&currentUser.unreadCount}\r\n      count={totalCount}\r\n      onItemClick={(item) => {\r\n        changeReadState(item._id);\r\n      }}\r\n      onClear={(title, key) => clearReadState(title, key)}\r\n      loading={isLoading}\r\n      clearText='Clear'\r\n      viewMoreText='View More'\r\n      onViewMore={() => message.info('Click on view more')}\r\n      clearClose\r\n    >\r\n      <NoticeIcon.Tab\r\n        tabKey='leave'\r\n        count={unreadMsg.leave}\r\n        list={noticeData.leave}\r\n        title='Leave'\r\n        emptyText='You have no new notifiications'\r\n      />\r\n      <NoticeIcon.Tab\r\n        tabKey='training'\r\n        count={unreadMsg.training}\r\n        list={noticeData.training}\r\n        title='Training'\r\n        emptyText='You have no new notifiications'\r\n      />\r\n      {/**\r\n \r\n      <NoticeIcon.Tab\r\n        tabKey='event'\r\n        title='待办'\r\n        emptyText='你已完成所有待办'\r\n        count={unreadMsg.event}\r\n        list={noticeData.event}\r\n        showViewMore\r\n      /> */}\r\n    </NoticeIcon>\r\n  );\r\n};\r\n\r\nexport default NoticeIconView;\r\n","import {\n  LogoutOutlined,\n  SettingOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Menu, Spin, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { LOGOUT } from '../../constants/actionTypes';\nimport HeaderDropdown from '../HeaderDropdown/HeaderDropdown';\nimport styles from './index.less';\n\nconst AvatarDropdown = ({ user, logout }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const login = () => {\n    navigate('/auth');\n  };\n\n  const menu = true;\n  const currentUser = {\n    avatar:\n      'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png',\n    name: 'Cheah',\n  };\n  const menuHeaderDropdown = (\n    <Menu className={styles.menu}>\n      <Menu.Item key='profile'>\n        <Link to='/profile'>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key='logout' onClick={logout}>\n        <LogoutOutlined />\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n  return user ? (\n    <HeaderDropdown overlay={menuHeaderDropdown} trigger={['click']}>\n      <span className={`${styles.action} ${styles.account}`}>\n        {/**\n         <Avatar\n          size='small'\n          className={styles.avatar}\n          src='https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'\n          alt='avatar'\n        />\n       */}\n\n        <span className={`${styles.name} anticon`}>\n          <Typography.Text\n            ellipsis\n            style={{ paddingTop: '35px', paddingBottom: '10px' }}\n          >{`${user.first_name} ${user.last_name}`}</Typography.Text>\n        </span>\n      </span>\n    </HeaderDropdown>\n  ) : (\n    <Link to='/auth'>Login</Link>\n  );\n};\n\nexport default AvatarDropdown;\n","import * as api from '../api/index.js';\r\nimport {\r\n  AUTH,\r\n  AUTH_END_LOADING,\r\n  AUTH_ERROR,\r\n  AUTH_START_LOADING,\r\n  AUTH_SUCCESS,\r\n  CHANGE_PASSWORD,\r\n  RESET_PASSWORD,\r\n  UPDATE_AUTH,\r\n  UPDATE_SETTINGS,\r\n} from '../constants/actionTypes';\r\n\r\nexport const signIn = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.signIn(formData);\r\n    dispatch({ type: AUTH, data });\r\n\r\n    dispatch({ type: AUTH_END_LOADING });\r\n    dispatch({\r\n      type: AUTH_SUCCESS,\r\n      payload: { success: 'Login successful' },\r\n    });\r\n\r\n    return true;\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const signUp = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.signUp(formData);\r\n    dispatch({ type: AUTH, data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n\r\n    navigate('/');\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.resetPassword(email);\r\n    dispatch({ type: RESET_PASSWORD, data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const changePassword = (id, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.changePassword(id, password);\r\n    dispatch({ type: CHANGE_PASSWORD, payload: data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateAuth = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.updateAuth(id);\r\n    dispatch({ type: UPDATE_AUTH, payload: data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateSettings = (id, settings) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.updateSettings(id, settings);\r\n    dispatch({ type: UPDATE_SETTINGS, payload: { settings } });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Typography,\r\n  Modal,\r\n  Image,\r\n  Space,\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './Auth.css';\r\nimport { signIn } from '../../actions/auth';\r\nconst { Title } = Typography;\r\nconst Auth = () => {\r\n  const { error, success, isLoading } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const onFinish = async (values) => {\r\n    const result = await dispatch(signIn(values, navigate));\r\n    if (!result) {\r\n      Modal.error({ content: error });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Image\r\n        src='/INTI_logo.png'\r\n        preview={false}\r\n        // style={{ width: '100%', maxWidth: '400px', height: 'auto' }}\r\n        style={{\r\n          display: 'block',\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          width: '50%',\r\n        }}\r\n      />\r\n      <Title level={2} style={{ textAlign: 'center', padding: '20px' }}>\r\n        Sign In\r\n      </Title>\r\n\r\n      <Form\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        name='basic'\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Email'\r\n          name='email'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'email',\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoFocus />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Password'\r\n          name='password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n            {\r\n              pattern:\r\n                '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$',\r\n              message:\r\n                'Minimum eight characters, at least one upper case English letter, one lower case English letter, one number and one special character',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password placeholder='Please enter password' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Sign In\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Link to='/resetPassword'>Forgot Password</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  FETCH_ALL_HOLIDAY,\r\n  FETCH_HOLIDAY_BY_YEAR,\r\n  FETCH_ONE_HOLIDAY,\r\n  HOLIDAY_END_LOADING,\r\n  HOLIDAY_ERROR,\r\n  HOLIDAY_START_LOADING,\r\n  HOLIDAY_SUCCESS,\r\n} from '../constants/actionTypes';\r\n\r\nexport const fetchAllHolidays = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.fetchAllHolidays();\r\n    dispatch({ type: FETCH_ALL_HOLIDAY, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\nexport const fetchHolidaysByYear = (year) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.fetchHolidaysByYear(year);\r\n    dispatch({ type: FETCH_HOLIDAY_BY_YEAR, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\nexport const createHoliday = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.createHoliday(formData);\r\n    dispatch({ type: CREATE_HOLIDAY, payload: data });\r\n    dispatch({\r\n      type: HOLIDAY_SUCCESS,\r\n      payload: { success: 'Create success' },\r\n    });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\nexport const updateHoliday = (year, id, formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.updateHoliday(year, id, formData);\r\n    dispatch({ type: DELETE_HOLIDAY, payload: data });\r\n    dispatch({\r\n      type: HOLIDAY_SUCCESS,\r\n      payload: { success: 'Update success' },\r\n    });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const getHoliday = (year, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.getHoliday(year, id);\r\n    dispatch({ type: FETCH_ONE_HOLIDAY, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\nexport const deleteHoliday = (year, id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.deleteHoliday(year, id);\r\n    dispatch({ type: DELETE_HOLIDAY, payload: data });\r\n    dispatch({\r\n      type: HOLIDAY_SUCCESS,\r\n      payload: { success: 'Delete success' },\r\n    });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: HOLIDAY_ERROR, error });\r\n  }\r\n};\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Typography,\r\n  Upload,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport './LeaveForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createLeave, fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nimport { fetchHolidaysByYear } from '../../actions/holidays';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst LeaveForm = ({ user }) => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const { leave } = useSelector((state) => state.leaves);\r\n  const [showRange, setShowRange] = useState(false);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const { holidays } = useSelector((state) => state.holidays);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n\r\n    holidays.lists.forEach((holiday) => {\r\n      if (startDate >= holiday.startDate && endDate <= holiday.endDate) {\r\n        const holidayCount = moment(holiday.endDate).diff(\r\n          moment(holiday.startDate),\r\n          'days'\r\n        );\r\n\r\n        workingDays -= holidayCount;\r\n      }\r\n    });\r\n    return workingDays;\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const onFinish = (values) => {\r\n    const rangeValue = values['range-picker'];\r\n    const startDate = rangeValue[0];\r\n    const endDate = rangeValue[1];\r\n    const dateDiff = calcWorkingDays(startDate, endDate);\r\n\r\n    if (dateDiff == 0) {\r\n      Modal.error({\r\n        content:\r\n          'Selected day is on holidays or weekend, do not need to apply!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    let existedFile = [];\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        } else {\r\n          existedFile.push(leave.attachments.find((a) => a.fileId == file.uid));\r\n        }\r\n      }\r\n    } else {\r\n      if (id) {\r\n        existedFile = leave.attachments;\r\n      }\r\n    }\r\n\r\n    const type = leaveTypes.find((rec) => rec._id === values['leaveType']);\r\n\r\n    let { count: remainLeave } = user.leaveCount.find(\r\n      (l) => l.leaveType._id == values['leaveType']\r\n    );\r\n\r\n    const leaveData = {\r\n      user_name: `${user.first_name} ${user.last_name}`,\r\n      reason: values.reason || '',\r\n      leaveType: values.leaveType,\r\n      user: user._id,\r\n      department: user.department._id,\r\n      fromDate: startDate.format('YYYY-MM-DD HH:mm'),\r\n      toDate: endDate.format('YYYY-MM-DD HH:mm'),\r\n    };\r\n    Object.entries(leaveData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    //  console.log(...formData);\r\n\r\n    if (remainLeave >= dateDiff) {\r\n      if (id) {\r\n        formData.append('attachments', JSON.stringify(existedFile));\r\n        dispatch(updateLeave(id, formData));\r\n        Modal.success({\r\n          content: 'Changes saved.',\r\n          onOk() {\r\n            navigate('/leaves/home');\r\n          },\r\n        });\r\n      } else {\r\n        dispatch(createLeave(formData));\r\n        Modal.success({\r\n          content: 'Leave application submitted.',\r\n          onOk() {\r\n            navigate('/leaves/home');\r\n          },\r\n        });\r\n      }\r\n    } else {\r\n      setError('Insufficient leave balance');\r\n    }\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      leave?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchHolidaysByYear(moment().format('YYYY')));\r\n    dispatch(getLeaveTypes());\r\n\r\n    if (id) {\r\n      setLoading(true);\r\n      dispatch(fetchLeaveById(id)).then((leave) => {\r\n        form.setFieldsValue({\r\n          reason: leave.reason || '',\r\n          leaveType: leave.leaveType._id,\r\n          'range-picker': [moment(leave.fromDate), moment(leave.toDate)],\r\n        });\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  const disabledDate = (val) => {\r\n    const ltVal = form.getFieldValue('leaveType');\r\n\r\n    if (!ltVal) return true;\r\n    const lt = leaveTypes.find((l) => l._id == ltVal);\r\n    const ltStart = lt.startDate;\r\n    const ltEnd = lt.endDate;\r\n    let start, end;\r\n    if (ltStart == 'year' || ltStart == 'month') {\r\n      start = moment().startOf(ltStart);\r\n    } else {\r\n      const operator = ltStart.charAt(0);\r\n      const day = parseInt(ltStart.substring(1));\r\n      if (operator == '+') {\r\n        start = moment().add(day, 'days');\r\n      } else {\r\n        start = moment().subtract(day, 'days');\r\n      }\r\n    }\r\n\r\n    if (ltEnd == 'year' || ltEnd == 'month') {\r\n      end = moment().endOf(ltEnd);\r\n    } else {\r\n      const operator = ltEnd.charAt(0);\r\n      const day = parseInt(ltEnd.substring(1));\r\n      if (operator == '+') {\r\n        end = moment().add(day, 'days');\r\n      } else {\r\n        end = moment().subtract(day, 'days');\r\n      }\r\n    }\r\n\r\n    return val < start || val > end;\r\n  };\r\n\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Leave' : 'Apply for Leave'}\r\n      </Typography.Title>\r\n\r\n      <Form\r\n        form={form}\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Leave Type'\r\n          name='leaveType'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder='Please choose a leave type'>\r\n            {user.leaveCount.map((leave) => (\r\n              <Option key={leave.leaveType._id} value={leave.leaveType._id}>\r\n                {leave.leaveType.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Reason'\r\n          name='reason'\r\n          rules={[{ required: true, whitespace: true }]}\r\n        >\r\n          <TextArea rows={4} placeholder='Please enter reason' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='range-picker'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <RangePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='upload'\r\n          label='Supporting Documents'\r\n          valuePropName='fileList'\r\n          getValueFromEvent={normFile}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type='secondary'\r\n            htmlType='button'\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default LeaveForm;\r\n","import { message } from 'antd';\r\nimport * as api from '../api/index.js';\r\nimport {\r\n  CREATE_USER,\r\n  FETCH_ALL_USER,\r\n  FETCH_DEPT_USER,\r\n  FETCH_ONE_USER,\r\n  UPDATE_USER,\r\n  USER_END_LOADING,\r\n  USER_ERROR,\r\n  USER_START_LOADING,\r\n} from '../constants/actionTypes';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.getUsers();\r\n    dispatch({ type: FETCH_ALL_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: USER_ERROR, error });\r\n  }\r\n};\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.getUser(id);\r\n    dispatch({ type: FETCH_ONE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: USER_ERROR, error });\r\n  }\r\n};\r\nexport const createUser = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.createUser(formData);\r\n    dispatch({ type: CREATE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: USER_ERROR, error });\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.updateUser(id, user);\r\n    dispatch({ type: UPDATE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: USER_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const fetchDeptUsers = (department) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.fetchDeptUsers(department);\r\n\r\n    //return data;\r\n    dispatch({ type: FETCH_DEPT_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: USER_ERROR, error });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './LeaveDetail.less';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Descriptions, Badge, Button, Space, Spin, Tag, Upload } from 'antd';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { updateUser, getUser } from '../../actions/users';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport _ from 'lodash';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nimport { fetchHolidaysByYear } from '../../actions/holidays';\r\nconst LeaveDetail = ({ user: curUser }) => {\r\n  const screens = useBreakpoint();\r\n  const { leave, isLoading: leaveIsloading } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { holidays } = useSelector((state) => state.holidays);\r\n  const dispatch = useDispatch();\r\n  const [loading, setIsloading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(fetchHolidaysByYear(moment().format('YYYY')));\r\n    dispatch(fetchLeaveById(id)).then(() => setIsloading(false));\r\n  }, [dispatch, id]);\r\n\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n\r\n    holidays?.lists.forEach((holiday) => {\r\n      if (startDate >= holiday.startDate && endDate <= holiday.endDate) {\r\n        const holidayCount = moment(holiday.endDate).diff(\r\n          moment(holiday.startDate),\r\n          'days'\r\n        );\r\n\r\n        workingDays -= holidayCount;\r\n      }\r\n    });\r\n    return workingDays;\r\n  };\r\n\r\n  const setStatus = (status) => {\r\n    dispatch(\r\n      updateLeave(id, {\r\n        ...leave,\r\n        status,\r\n        approver: curUser._id,\r\n        user_name: `${curUser.first_name} ${curUser.last_name}`,\r\n      })\r\n    );\r\n    if (status == 'Approved') {\r\n      dispatch(getUser(leave.user._id)).then((user) => {\r\n        const { count: remainLeave } = user.leaveCount.find(\r\n          (l) => l.leaveType._id == leave.leaveType._id\r\n        );\r\n\r\n        const dateDiff = calcWorkingDays(leave.startDate, leave.endDate);\r\n\r\n        const minDate = remainLeave - dateDiff;\r\n        const newLeaveCount = user.leaveCount.map((l) =>\r\n          l.leaveType._id == leave.leaveType._id ? { ...l, count: minDate } : l\r\n        );\r\n        dispatch(\r\n          updateUser(user._id, {\r\n            leaveCount: newLeaveCount,\r\n          })\r\n        );\r\n      });\r\n    }\r\n  };\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n\r\n    return (\r\n      leave?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  if (loading || leaveIsloading) return <PageLoading />;\r\n  //if (leaveIsloading || userIsloading) return null;\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='Leave Info'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n      >\r\n        <Descriptions.Item label='Requester' span={3}>\r\n          {`${leave.user.first_name} ${leave.user.last_name}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Department' span={3}>\r\n          {leave.department.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Leave Type' span={3}>\r\n          {\r\n            <Tag color={leave.leaveType.color}>\r\n              {capitalizeFirstLetter(leave.leaveType.code)}\r\n            </Tag>\r\n          }\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Reason' span={3}>\r\n          {leave.reason}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Date' span={1}>\r\n          {moment(leave.fromDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Date' span={2}>\r\n          {moment(leave.toDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label='Supporting Documents' span={3}>\r\n          {leave.attachments.length != 0 ? (\r\n            <>\r\n              <Upload\r\n                className='showFiles'\r\n                defaultFileList={defaultFile}\r\n                showUploadList={{\r\n                  showDownloadIcon: true,\r\n\r\n                  showRemoveIcon: false,\r\n                }}\r\n              ></Upload>\r\n            </>\r\n          ) : (\r\n            <div>None</div>\r\n          )}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge\r\n            status={\r\n              leave.status == 'Pending'\r\n                ? 'processing'\r\n                : leave.status == 'Approved'\r\n                ? 'success'\r\n                : 'error'\r\n            }\r\n            text={leave.status}\r\n          />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Space size='middle'>\r\n        <Button type='default' onClick={() => navigate(-1)}>\r\n          Back\r\n        </Button>\r\n        {leave.status == 'Pending' && leave.user._id == curUser._id ? (\r\n          <>\r\n            <Button\r\n              type='primary'\r\n              danger\r\n              onClick={() => setStatus('Cancelled')}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          leave.user._id != curUser._id &&\r\n          leave.status == 'Pending' && (\r\n            <>\r\n              <Button type='success' onClick={() => setStatus('Approved')}>\r\n                Approve\r\n              </Button>\r\n              <Button\r\n                type='primary'\r\n                danger\r\n                onClick={() => setStatus('Rejected')}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveDetail;\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_DEPT,\r\n  DELETE_DEPT,\r\n  DEPT_END_LOADING,\r\n  DEPT_ERROR,\r\n  DEPT_START_LOADING,\r\n  FETCH_ALL_DEPT,\r\n  FETCH_ONE_DEPT,\r\n} from '../constants/actionTypes';\r\n\r\nexport const getDepts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.getDepts();\r\n    dispatch({ type: FETCH_ALL_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });\r\n  }\r\n};\r\nexport const getDept = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.getDept(id);\r\n    dispatch({ type: FETCH_ONE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });\r\n  }\r\n};\r\nexport const createDept = (dept) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.createDept(dept);\r\n    dispatch({ type: CREATE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });\r\n  }\r\n};\r\nexport const deleteDept = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.deleteDept(id);\r\n    dispatch({ type: DELETE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateDept = (id, formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.updateDept(id, formData);\r\n\r\n    dispatch({ type: DELETE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });\r\n  }\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveRequests } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Typography,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport _ from 'lodash';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport { ProFormDateRangePicker } from '@ant-design/pro-form';\r\nimport { fetchHolidaysByYear } from '../../actions/holidays';\r\nconst { Text } = Typography;\r\n\r\nconst LeaveList = () => {\r\n  const { holidays } = useSelector((state) => state.holidays);\r\n  const { leaves, isLoading } = useSelector((state) => state.leaves);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'Pending' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n  var typeFilter = [];\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchHolidaysByYear(moment().format('YYYY')));\r\n    dispatch(\r\n      fetchLeaveRequests(user.roles.name, user._id, user.department.name)\r\n    );\r\n    dispatch(getDepts());\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n  if (user.roles.name == 'admin')\r\n    depts.map((element) => {\r\n      deptFilters.push({ text: element.name, value: element.name });\r\n    });\r\n  leaveTypes.map((element) => {\r\n    typeFilter.push({ text: element.name, value: element.code });\r\n  });\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    if (string) return string.charAt(0).toUpperCase() + string.slice(1);\r\n    return string;\r\n  };\r\n\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n\r\n    holidays.lists.forEach((holiday) => {\r\n      if (startDate >= holiday.startDate && endDate <= holiday.endDate) {\r\n        const holidayCount = moment(holiday.endDate).diff(\r\n          moment(holiday.startDate),\r\n          'days'\r\n        );\r\n\r\n        workingDays -= holidayCount;\r\n      }\r\n    });\r\n    return workingDays;\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Employee Name',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Department',\r\n      dataIndex: ['department', 'name'],\r\n      key: 'department',\r\n      hideInSearch: true,\r\n      filters: deptFilters,\r\n      onFilter: (value, record) => record.department.name.indexOf(value) === 0,\r\n      //  render: (text, record) => `${record.department.name}`,\r\n    },\r\n    {\r\n      title: 'Reason',\r\n      dataIndex: 'reason',\r\n      key: 'reason',\r\n      hideInSearch: true,\r\n      render: (text, record) => <Text ellipsis>{text}</Text>,\r\n    },\r\n    {\r\n      title: 'Leave Type',\r\n      dataIndex: 'leaveType',\r\n      key: 'leaveType',\r\n      filters: typeFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.leaveType.code.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Tag color={text.color}>{capitalizeFirstLetter(text.code)}</Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Total Days',\r\n      hideInSearch: true,\r\n      dataIndex: 'toDate',\r\n      key: 'totalDays',\r\n      render: (text, record) => calcWorkingDays(record.fromDate, record.toDate),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/leaves/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n  let temp = reverseArr(leaves);\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <h2>Leave Requests</h2>\r\n      {!leaves.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n              toolBarRender={() => [\r\n                <Space>\r\n                  <Button type='primary' shape='round'>\r\n                    <Link to='/leaves/create'>To Leave Application</Link>\r\n                  </Button>\r\n                </Space>,\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveList;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveHistory } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport { fetchHolidaysByYear } from '../../actions/holidays';\r\n\r\nconst LeaveHistory = () => {\r\n  const { leaveHistory, isLoading } = useSelector((state) => state.leaves);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const { holidays } = useSelector((state) => state.holidays);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'Pending' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n  var typeFilter = [];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLeaveHistory(user._id));\r\n    dispatch(getLeaveTypes());\r\n    dispatch(fetchHolidaysByYear(moment().format('YYYY')));\r\n  }, [dispatch]);\r\n\r\n  leaveTypes.map((element) => {\r\n    typeFilter.push({ text: element.name, value: element.code });\r\n  });\r\n\r\n  const applyLeave = () => {\r\n    navigate('/leaves/create');\r\n  };\r\n\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n\r\n    holidays.lists.forEach((holiday) => {\r\n      if (startDate >= holiday.startDate && endDate <= holiday.endDate) {\r\n        const holidayCount = moment(holiday.endDate).diff(\r\n          moment(holiday.startDate),\r\n          'days'\r\n        );\r\n\r\n        workingDays -= holidayCount;\r\n      }\r\n    });\r\n    return workingDays;\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const actionRef = useRef();\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Leave Type',\r\n      dataIndex: 'leaveType',\r\n      key: 'leaveType',\r\n      filters: typeFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.leaveType.code.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Tag color={text.color}>{capitalizeFirstLetter(text.code)}</Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Total Days',\r\n      hideInSearch: true,\r\n      dataIndex: 'toDate',\r\n      key: 'totalDays',\r\n      render: (text, record) => calcWorkingDays(record.fromDate, record.toDate),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/leaves/view/${record._id}`}>View</Link>\r\n          {record.status == 'Pending' && (\r\n            <Link to={`/leaves/edit/${record._id}`}>Edit</Link>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n\r\n  let temp = reverseArr(leaveHistory);\r\n\r\n  if (isLoading || !leaveHistory || !leaveTypes) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2>My Leave Applications</h2>\r\n      {!leaveHistory.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              search={{\r\n                span: 24,\r\n              }}\r\n              rowKey='id'\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n              toolBarRender={() => [\r\n                <Button type='primary' key='primary' shape='round'>\r\n                  <Link to='/leaves/create'>To Leave Application</Link>\r\n                </Button>,\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveHistory;\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_ROLE,\r\n  FETCH_ALL_ROLE,\r\n  FETCH_ONE_ROLE, ROLE_END_LOADING,\r\n  ROLE_ERROR,\r\n  ROLE_START_LOADING, UPDATE_ROLE\r\n} from '../constants/actionTypes';\r\n\r\nexport const getRoles = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.getRoles();\r\n    dispatch({ type: FETCH_ALL_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: ROLE_ERROR, error });\r\n  }\r\n};\r\nexport const getRole = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.getRole(id);\r\n    dispatch({ type: FETCH_ONE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: ROLE_ERROR, error });\r\n  }\r\n};\r\nexport const createRole = (role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.createRole(role);\r\n    dispatch({ type: CREATE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: ROLE_ERROR, error });\r\n  }\r\n};\r\nexport const updateRole = (id, role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.updateRole(id, role);\r\n    dispatch({ type: UPDATE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: ROLE_ERROR, error });\r\n  }\r\n};\r\n","import * as api from '../api/index.js';\r\nimport {\r\n  CREATE_POLICY,\r\n  FETCH_ALL_POLICY,\r\n  FETCH_ONE_POLICY,\r\n  POLICY_END_LOADING,\r\n  POLICY_ERROR,\r\n  POLICY_START_LOADING,\r\n  UPDATE_POLICY,\r\n} from '../constants/actionTypes';\r\n\r\nexport const getPolicies = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.getPolicies();\r\n    dispatch({ type: FETCH_ALL_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: POLICY_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const getPoliciesByDept = (dept) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.getPoliciesByDept(dept);\r\n    dispatch({ type: FETCH_ALL_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: POLICY_ERROR, error });\r\n  }\r\n};\r\nexport const getPolicy = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.getPolicy(id);\r\n    dispatch({ type: FETCH_ONE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: POLICY_ERROR, error });\r\n    return false;\r\n  }\r\n};\r\nexport const createPolicy = (role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.createPolicy(role);\r\n    dispatch({ type: CREATE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: POLICY_ERROR, error });\r\n  }\r\n};\r\nexport const updatePolicy = (id, role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.updatePolicy(id, role);\r\n    dispatch({ type: UPDATE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: POLICY_ERROR, error });\r\n  }\r\n};\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Row,\r\n  Divider,\r\n  Col,\r\n  Typography,\r\n  Alert,\r\n  Modal,\r\n} from 'antd';\r\n\r\nimport './StaffForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createUser, getUser, updateUser } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport { getRoles } from '../../actions/roles';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { getPoliciesByDept, getPolicy } from '../../actions/policy';\r\nimport moment from 'moment';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { useForm } = Form;\r\nconst StaffForm = () => {\r\n  const navigate = useNavigate();\r\n  const [form] = useForm();\r\n  const { id } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  // const [oriInc, setOriInc] = useState();\r\n  const oriIncRef = useRef();\r\n  //var oriInc;\r\n  const [showPolicyField, setShowPolicyField] = useState(false);\r\n  const [showLeaveCount, setShowLeaveCount] = useState({\r\n    policy: false,\r\n    employment_date: false,\r\n  });\r\n  const [leaveCountText, setLeaveCountText] = useState({});\r\n  const [policyHelpText, setPolicyHelpText] = useState(\r\n    'Select a policy to show description'\r\n  );\r\n  const [password, setPassword] = useState('');\r\n  const [staff, setStaff] = useState({\r\n    emp_id: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    employment_date: '',\r\n    password: '',\r\n    department: '',\r\n    roles: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    fetchData().then(() => setLoading(false));\r\n  }, [dispatch]);\r\n\r\n  const fetchData = async () => {\r\n    await dispatch(getRoles());\r\n    await dispatch(getDepts());\r\n    await dispatch(getLeaveTypes());\r\n    // await dispatch(getPoliciesByDept());\r\n    if (id) {\r\n      await dispatch(getUser(id)).then(async (data) => {\r\n        await dispatch(getPoliciesByDept(data.department._id));\r\n\r\n        let le = {};\r\n        data.leaveCount.forEach((l) => {\r\n          le[l['leaveType']['_id']] = l['count'];\r\n        });\r\n        form.setFieldsValue({\r\n          emp_id: data.emp_id,\r\n          first_name: data.first_name,\r\n          last_name: data.last_name,\r\n          email: data.email,\r\n          employment_date: moment(data.employment_date),\r\n          department: data.department._id,\r\n          policy: data.policy._id,\r\n          roles: data.roles._id,\r\n          trainingHours: data.trainingHours,\r\n          leaveType: { ...le },\r\n        });\r\n      });\r\n      setShowPolicyField(true);\r\n      setShowLeaveCount({ policy: true, employment_date: true });\r\n      //calcLeaveCount();\r\n    }\r\n  };\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { roles } = useSelector((state) => state.roles);\r\n  const { policies } = useSelector((state) => state.policy);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const { user, error } = useSelector((state) => state.users);\r\n  const onFinish = async (values) => {\r\n    const leaveCount = [];\r\n    for (const [key, value] of Object.entries(values.leaveType)) {\r\n      leaveCount.push({ leaveType: key, count: value });\r\n    }\r\n\r\n    if (id) {\r\n      await dispatch(\r\n        updateUser(id, {\r\n          extra: { department: user.department._id },\r\n          emp_id: values.emp_id,\r\n          first_name: values.first_name,\r\n          last_name: values.last_name,\r\n          email: values.email,\r\n          policy: values.policy,\r\n          employment_date: values['employment_date'].format('YYYY-MM-DD'),\r\n          department: values.department,\r\n          roles: values.roles,\r\n          leaveCount: leaveCount,\r\n          trainingHours: values.trainingHours,\r\n        })\r\n      );\r\n      Modal.success({\r\n        content: 'Staff Updated',\r\n        onOk() {\r\n          navigate('/users');\r\n        },\r\n      });\r\n    } else {\r\n      const d = await dispatch(\r\n        createUser({\r\n          emp_id: values.emp_id,\r\n          first_name: values.first_name,\r\n          last_name: values.last_name,\r\n          email: values.email,\r\n          policy: values.policy,\r\n          employment_date: values['employment_date'].format('YYYY-MM-DD'),\r\n          department: values.department,\r\n          roles: values.roles,\r\n          leaveCount: leaveCount,\r\n          trainingHours: values.trainingHours,\r\n        })\r\n      );\r\n      if (d) {\r\n        Modal.success({\r\n          content: 'Staff created',\r\n          onOk() {\r\n            navigate('/users');\r\n          },\r\n        });\r\n      } else {\r\n        Modal.error({\r\n          content: 'Email already exist',\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const onDateChange = (val) => {\r\n    const newState = { ...showLeaveCount, employment_date: true };\r\n    setShowLeaveCount(newState);\r\n    if (newState.employment_date && newState.policy) {\r\n      calcLeaveCount();\r\n    }\r\n\r\n    /**\r\n    const stacked = policy.stacked;\r\n    const policy = policy.list;\r\n    if (policy) {\r\n      const today = moment('2025-01-01');\r\n      const employmentDate = moment(val);\r\n      const totalYears = today.diff(employmentDate, 'years');\r\n      console.log(totalYears);\r\n      let totalIncrease = 0;\r\n      const policyAfter = policy.filter((p) => p.condition1 == 'after');\r\n      const policyEvery = policy.filter((p) => p.condition1 == 'every');\r\n      let highestAfter = 0;\r\n      policyAfter.forEach((p) => {\r\n        if (totalYears >= p.year) {\r\n          if (stacked) {\r\n            totalIncrease += p.increase;\r\n          } else {\r\n            if (p.year > highestAfter) {\r\n              totalIncrease = p.increase;\r\n              highestAfter = p.year;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      policyEvery.forEach((p) => {\r\n        const count = totalYears / p.year;\r\n        totalIncrease += count * p.increase;\r\n      });\r\n\r\n      console.log(totalIncrease);\r\n    }\r\n     */\r\n  };\r\n  const onDeptChange = async (e) => {\r\n    form.setFieldsValue({ policy: undefined });\r\n    setPolicyHelpText('Select a policy to show description');\r\n    setShowLeaveCount({ ...showLeaveCount, policy: false });\r\n    await dispatch(getPoliciesByDept(e));\r\n\r\n    setShowPolicyField(true);\r\n  };\r\n  const calcPolicy = (employmentDate, policy) => {\r\n    const totalYears = moment().diff(employmentDate, 'years');\r\n    let inc = {};\r\n    leaveTypes.forEach((lt) => (inc[lt._id] = 0));\r\n\r\n    policy.lists.forEach((list) => {\r\n      const policyAfter = list.policy.filter((p) => p.condition1 == 'after');\r\n      const policyEvery = list.policy.filter((p) => p.condition1 == 'every');\r\n      const stacked = list.stacked;\r\n      let highestAfter = 0;\r\n      let totalIncrease = 0;\r\n      policyAfter.forEach((p) => {\r\n        if (totalYears >= p.year) {\r\n          if (stacked) {\r\n            totalIncrease += p.increase;\r\n          } else {\r\n            if (p.year > highestAfter) {\r\n              totalIncrease = p.increase;\r\n              highestAfter = p.year;\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      policyEvery.forEach((p) => {\r\n        const count = Math.floor(totalYears / p.year);\r\n        totalIncrease += count * p.increase;\r\n      });\r\n      list.leavetype.forEach((lt) => (inc[lt._id] = totalIncrease));\r\n    });\r\n    console.log('inc', inc);\r\n    return inc;\r\n  };\r\n\r\n  const calcLeaveCount = () => {\r\n    const employmentDate = form.getFieldValue('employment_date');\r\n    const totalYears = moment().diff(employmentDate, 'years');\r\n    const policyVal = form.getFieldValue('policy');\r\n    console.log(policies);\r\n    const pol = policies.find((p) => p._id == policyVal);\r\n    const curInc = calcPolicy(employmentDate, pol);\r\n    console.log(curInc, 'curInc');\r\n\r\n    const f = {};\r\n    leaveTypes.forEach((lt) => (f[lt._id] = lt.count));\r\n    const t = {};\r\n    leaveTypes.forEach(\r\n      (lt) => (t[lt._id] = `Base: ${lt.count} Not applicable`)\r\n    );\r\n\r\n    if (id) {\r\n      if (user.policy._id != pol) {\r\n        let le = {};\r\n        user.leaveCount.forEach((l) => {\r\n          le[l['leaveType']['_id']] = l['count'];\r\n        });\r\n        console.log('here');\r\n\r\n        if (!oriIncRef.current) {\r\n          oriIncRef.current = calcPolicy(\r\n            user.employment_date,\r\n            policies.find((p) => p._id == user.policy._id)\r\n          );\r\n        }\r\n        const oriInc = oriIncRef.current;\r\n        //const oriInc = calcPolicy(user.employment_date, oriPolicy);\r\n        console.log(oriInc, curInc);\r\n        leaveTypes.forEach((lt) => {\r\n          let incDiff = oriInc[lt._id] - curInc[lt._id];\r\n          f[lt._id] = le[lt._id] - incDiff;\r\n          f[lt._id] = f[lt._id] > 0 ? f[lt._id] : 0;\r\n          if (incDiff == 0) {\r\n            t[lt._id] = ` Current: ${le[lt._id]} No changes`;\r\n          } else if (incDiff >= 0) {\r\n            t[lt._id] = ` Current: ${le[lt._id]} Decrease: ${Math.abs(\r\n              incDiff\r\n            )}`;\r\n          } else {\r\n            t[lt._id] = ` Current: ${le[lt._id]} Increase: ${Math.abs(\r\n              incDiff\r\n            )}`;\r\n          }\r\n          /* \r\n        if (incDiff > 0) {\r\n          f[lt._id] = le[lt._id] - incDiff;\r\n        } else if (incDiff < 0) {\r\n          f[lt._id] = le[lt._id] - incDiff;\r\n        }*/\r\n        });\r\n        setLeaveCountText(t);\r\n\r\n        form.setFieldsValue({ leaveType: f });\r\n      }\r\n    } else {\r\n      for (const [key, value] of Object.entries(curInc)) {\r\n        t[key] = `Base: ${f[key]} + Increase: ${value}`;\r\n        f[key] += value;\r\n      }\r\n      setLeaveCountText(t);\r\n\r\n      form.setFieldsValue({ leaveType: f });\r\n    }\r\n\r\n    /**\r\n * \r\n      list.leavetype.forEach((lt) => {\r\n        if (id) {\r\n          let le = {};\r\n          user.leaveCount.forEach((l) => {\r\n            le[l['leaveType']['_id']] = l['count'];\r\n          });\r\n          //const curV = form.getFieldValue(`leaveType`);\r\n          //console.log(curV);\r\n          let initialIncrease = le[lt._id] - lt.count;\r\n          initialIncrease = initialIncrease > 0 ? initialIncrease : 0;\r\n          if (totalIncrease > initialIncrease) {\r\n            f[lt._id] = le[lt._id] + (totalIncrease - initialIncrease);\r\n          } else if (totalIncrease < initialIncrease) {\r\n            f[lt._id] = le[lt._id] - (initialIncrease - totalIncrease);\r\n            f[lt._id] = f[lt._id] < 0 ? 0 : f[lt._id];\r\n          }\r\n          t[lt._id] = `Base: ${\r\n            lt.count\r\n          } + Increase: ${totalIncrease} Current: ${le[lt._id]}`;\r\n        } else {\r\n          f[lt._id] = lt.count + totalIncrease;\r\n          t[lt._id] = `Base: ${lt.count} + Increase: ${totalIncrease}`;\r\n        }\r\n      });\r\n \r\n\r\n  */\r\n  };\r\n\r\n  const onPolicyChange = async (e) => {\r\n    const policy = policies.find((p) => p._id == e);\r\n    const f = {};\r\n    const text = policy.lists.map((list, i) => {\r\n      return (\r\n        <>\r\n          <b>{list.leavetype.map((lt) => `${lt.name}, `)}</b>\r\n          {list.stacked ? <p>Stacked</p> : <></>}\r\n          {list.policy.map((p, i) => (\r\n            <p\r\n              key={i}\r\n            >{`${p.condition1} ${p.year} years, increase by ${p.increase}`}</p>\r\n          ))}\r\n        </>\r\n      );\r\n    });\r\n    setPolicyHelpText(text);\r\n    const newState = { ...showLeaveCount, policy: true };\r\n    setShowLeaveCount(newState);\r\n    if (newState.employment_date && newState.policy) {\r\n      calcLeaveCount();\r\n    }\r\n  };\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Staff' : 'Create Staff'}\r\n      </Typography.Title>\r\n      <Row>\r\n        <Col xl={{ offset: 6, span: 12 }}>\r\n          <Form\r\n            form={form}\r\n            name='basic'\r\n            onFinish={onFinish}\r\n            autoComplete='off'\r\n            labelCol={{\r\n              sm: { span: 8 },\r\n            }}\r\n          >\r\n            <Form.Item\r\n              label='Employee ID'\r\n              name='emp_id'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder={`Please enter employee\\'s ID`} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label='First Name'\r\n              name='first_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder={`Please enter employee\\'s first name`} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label='Last Name'\r\n              name='last_name'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder={`Please enter employee\\'s last name`} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label='Email'\r\n              name='email'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  type: 'email',\r\n                  whitespace: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                disabled={id ? true : false}\r\n                type='email'\r\n                placeholder={`Please enter employee\\'s email`}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label='Employment Date'\r\n              name='employment_date'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <DatePicker style={{ width: '100%' }} onChange={onDateChange} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label='Department'\r\n              name='department'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Select\r\n                placeholder={`Please choose employee\\'s department`}\r\n                onChange={onDeptChange}\r\n              >\r\n                {depts.map((dept) => (\r\n                  <Option key={dept._id} value={dept._id}>\r\n                    {dept.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            <Form.Item\r\n              help={\r\n                <>\r\n                  <Typography.Paragraph>\r\n                    Staff: Can Apply Leave and Training. Have Personal Dashboard\r\n                  </Typography.Paragraph>\r\n                  <Typography.Paragraph>\r\n                    Supervisor: All privilege of staff applied Can approve /\r\n                    reject leave.Have own department dashboard. Can view leave\r\n                    and training list of own department.\r\n                  </Typography.Paragraph>\r\n                  <Typography.Paragraph>\r\n                    Admin: All privilege of Supervisor applied. Have Admin\r\n                    Dashboard and view all department training and leave list.\r\n                    Can Create Internal Training.\r\n                  </Typography.Paragraph>\r\n                </>\r\n              }\r\n              label='Roles'\r\n              name='roles'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Select placeholder={`Please choose employee\\'s role`}>\r\n                {roles.map((role) => (\r\n                  <Option key={role._id} value={role._id}>\r\n                    {role.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n            {showPolicyField && (\r\n              <Form.Item\r\n                help={policyHelpText}\r\n                label='Policy'\r\n                name='policy'\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  placeholder={`Please choose a policy`}\r\n                  onChange={onPolicyChange}\r\n                >\r\n                  {policies.map((policy) => (\r\n                    <Option key={policy._id} value={policy._id}>\r\n                      {policy.name}\r\n                    </Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            )}\r\n            <Divider orientation='center'>Training</Divider>\r\n            <Form.Item\r\n              label='Training Hours'\r\n              name='trainingHours'\r\n              initialValue={process.env.REACT_APP_TRAINING_HOURS}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <InputNumber style={{ width: '100%' }} min={0} />\r\n            </Form.Item>\r\n            <Divider orientation='center'>Leave</Divider>\r\n            {showLeaveCount.policy && showLeaveCount.employment_date ? (\r\n              leaveTypes.map((leaveType) => (\r\n                <Form.Item\r\n                  key={leaveType._id}\r\n                  label={leaveType.name}\r\n                  name={[['leaveType'], [leaveType._id]]}\r\n                  initialValue={leaveType.count}\r\n                  help={\r\n                    leaveCountText[leaveType._id]\r\n                      ? leaveCountText[leaveType._id]\r\n                      : 'Not applicable'\r\n                  }\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <InputNumber style={{ width: '100%' }} min={0} />\r\n                </Form.Item>\r\n              ))\r\n            ) : (\r\n              <p style={{ textAlign: 'center' }}>\r\n                Select employment date and policy to view leave count\r\n              </p>\r\n            )}\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Form.Item\r\n              wrapperCol={{\r\n                sm: { offset: 8 },\r\n              }}\r\n            >\r\n              <Button type='primary' htmlType='submit'>\r\n                Submit\r\n              </Button>\r\n              <Button>\r\n                <Link to='/users'>Back</Link>\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\n\r\nimport './DeptHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { deleteDept, getDepts } from '../../actions/depts';\r\nconst { Column } = Table;\r\nconst DeptHome = () => {\r\n  const edit = (id) => {\r\n    // dispatch(deleteDept(rec._id));\r\n    navigate(`/depts/edit/${id}`);\r\n  };\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createDept = () => {\r\n    navigate('/depts/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createDept}>Create New Department</Button>\r\n      </Space>\r\n\r\n      {!depts.length ? (\r\n        <>\r\n          <br />\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={depts} rowKey='_id'>\r\n            <Column title='Name' dataIndex='name' key='name' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button onClick={() => edit(record._id)}>edit</Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptHome;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { Form, Input, Button, Select, Typography, Modal } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport './DeptForm.css';\r\nimport { createDept, getDept, updateDept } from '../../actions/depts';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nimport { userInfo } from 'os';\r\nconst { Title } = Typography;\r\nconst DeptForm = ({ user }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = useForm();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const onFinish = (values) => {\r\n    if (id) {\r\n      dispatch(updateDept(id, values));\r\n      Modal.success({\r\n        content: 'Department updated',\r\n        onOk() {\r\n          navigate('/depts');\r\n        },\r\n      });\r\n    } else {\r\n      dispatch(createDept(values));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      dispatch(getDept(id)).then((data) => {\r\n        form.setFieldsValue(data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Title level={2} style={{ textAlign: 'center' }}>\r\n        Create Department\r\n      </Title>\r\n      <Form\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        form={form}\r\n        name='basic'\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        {/** \r\n        <Form.Item\r\n          label='Code'\r\n          name='code'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoFocus placeholder='Please enter code' />\r\n        </Form.Item>\r\n*/}\r\n        <Form.Item\r\n          label='Name'\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter name' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button>\r\n            <Link to='/depts'>Back</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button, List, Grid } from 'antd';\r\n\r\nimport './StaffHome.css';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { fetchDeptUsers, getUsers } from '../../actions/users';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { Column } = Table;\r\nconst { useBreakpoint } = Grid;\r\nconst StaffHome = ({ user }) => {\r\n  const { users, isLoading, error } = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (user.roles.name == 'supervisor') {\r\n      dispatch(fetchDeptUsers(user.department._id));\r\n    } else {\r\n      dispatch(getUsers());\r\n    }\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createUser = () => {\r\n    navigate('/users/create');\r\n  };\r\n  const screens = useBreakpoint();\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      {user.roles.name == 'admin' && (\r\n        <Space style={{ marginBottom: 16 }}>\r\n          <Button onClick={createUser}>Add User</Button>\r\n        </Space>\r\n      )}\r\n      <br />\r\n      {isLoading ? (\r\n        <>\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={users} rowKey='_id'>\r\n            <Column title='Employee ID' dataIndex='emp_id' key='emp_id' />\r\n            <Column\r\n              title='Name'\r\n              key='name'\r\n              render={(text, record) => (\r\n                <div>\r\n                  {record.first_name} {record.last_name}\r\n                </div>\r\n              )}\r\n            />\r\n            <Column\r\n              title='Department'\r\n              dataIndex={['department', 'name']}\r\n              key='department.name'\r\n            />\r\n            <Column\r\n              title='Roles'\r\n              dataIndex={['roles', 'name']}\r\n              key='roles.name'\r\n            />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`/users/view/${record._id}`}>View</Link>\r\n                  </Button>\r\n                  <Button>\r\n                    <Link to={`/users/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Button>\r\n            <Link to='/'>Back</Link>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffHome;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport './StaffDetail.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Descriptions, Badge, Button } from 'antd';\r\nimport { getUser } from '../../actions/users';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst StaffDetail = () => {\r\n  const screens = useBreakpoint();\r\n  const { user: u, isLoading } = useSelector((state) => state.users);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    await dispatch(getUser(id));\r\n    setLoading(false);\r\n  };\r\n  if (loading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='User Info'\r\n        bordered\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Employee ID'>{u.emp_id}</Descriptions.Item>\r\n        <Descriptions.Item label='First Name'>{u.first_name}</Descriptions.Item>\r\n        <Descriptions.Item label='Last Name'>{u.last_name}</Descriptions.Item>\r\n\r\n        <Descriptions.Item label='Email'>{u.email}</Descriptions.Item>\r\n        <Descriptions.Item label='Department'>\r\n          {u.department?.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Employment Date'>\r\n          {moment(u.employment_date).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <Descriptions title='Leave Balance' bordered>\r\n        {u?.leaveCount?.map((leave) => (\r\n          <Descriptions.Item\r\n            key={leave.leaveType._id}\r\n            label={leave.leaveType.name}\r\n          >\r\n            {leave.count}\r\n          </Descriptions.Item>\r\n        ))}\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Button>\r\n        <Link to='/users'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffDetail;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Tag,\r\n  ConfigProvider,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Typography,\r\n} from 'antd';\r\n\r\nimport ProForm, {\r\n  ProFormText,\r\n  ProFormDigit,\r\n  ProFormColorPicker,\r\n  ProFormSelect,\r\n  ProFormRadio,\r\n} from '@ant-design/pro-form';\r\nimport styles from './LeaveTypeForm.less';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  createLeaveType,\r\n  updateLeaveType,\r\n  getLeaveType,\r\n} from '../../actions/leaveTypes';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport moment from 'moment';\r\nimport { ChromePicker, SketchPicker } from 'react-color';\r\n\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n//https://stackoverflow.com/a/68880332\r\nconst isBlank = (str) => {\r\n  return !!!str || /^\\s*$/.test(str);\r\n};\r\nconst LeaveTypeForm = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const [color, setColor] = useState('#39f983');\r\n  const { leaveType, isLoading, success, error } = useSelector(\r\n    (state) => state.leaveTypes\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  const [showStart, setShowStart] = useState(false);\r\n  const [showEnd, setShowEnd] = useState(false);\r\n\r\n  const [colorState, setColorState] = useState({\r\n    code: 'sample',\r\n    color: 'blue',\r\n  });\r\n\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const onFinish = async (values) => {\r\n    let start, end;\r\n    const startValue =\r\n      values.startDate == 'custom' ? values.customStartDate : values.startDate;\r\n    const endValue =\r\n      values.endDate == 'custom' ? values.customEndDate : values.endDate;\r\n    if (startValue == 'year' || startValue == 'month') {\r\n      start = moment().startOf(startValue);\r\n    } else {\r\n      const operator = startValue.charAt(0);\r\n      const day = parseInt(startValue.substring(1));\r\n      if (operator == '+') {\r\n        start = moment().add(day, 'days');\r\n      } else {\r\n        start = moment().subtract(day, 'days');\r\n      }\r\n    }\r\n    if (endValue == 'year' || endValue == 'month') {\r\n      end = moment().endOf(endValue);\r\n    } else {\r\n      const operator = endValue.charAt(0);\r\n      const day = parseInt(endValue.substring(1));\r\n      if (operator == '+') {\r\n        end = moment().add(day, 'days');\r\n      } else {\r\n        end = moment().subtract(day, 'days');\r\n      }\r\n    }\r\n\r\n    if (end.diff(start, 'days') < 0) {\r\n      Modal.error({\r\n        content: 'End date must be later than start date',\r\n      });\r\n    }\r\n\r\n    if (id) {\r\n      dispatch(\r\n        updateLeaveType(id, {\r\n          ...values,\r\n          startDate: startValue,\r\n          endDate: endValue,\r\n        })\r\n      );\r\n      Modal.success({\r\n        content: 'Leave type updated',\r\n        onOk() {\r\n          navigate('/leaveTypes');\r\n        },\r\n      });\r\n    } else {\r\n      dispatch(\r\n        createLeaveType({ ...values, startDate: startValue, endDate: endValue })\r\n      );\r\n      Modal.success({\r\n        content: 'Leave type created',\r\n        onOk() {\r\n          navigate('/leaveTypes');\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n\r\n      dispatch(getLeaveType(id)).then((data) => {\r\n        form.setFieldsValue(data);\r\n        setLoading(false);\r\n        setColorState({ code: data.code, color: data.color });\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  const onValuesChange = (changedFields, allFields) => {\r\n    if (changedFields.color || changedFields.code) {\r\n      setColorState({\r\n        code: changedFields.code\r\n          ? changedFields.code\r\n          : isBlank(colorState.code)\r\n          ? 'sample'\r\n          : colorState.code,\r\n        color: changedFields.color ? changedFields.color : colorState.color,\r\n      });\r\n    }\r\n  };\r\n  const onNameChange = (event) => {\r\n    const value = event.target.value;\r\n    const autoCode = value.toLowerCase().split(' ')[0];\r\n    form.setFieldsValue({ code: autoCode });\r\n    setColorState({ ...colorState, code: autoCode });\r\n  };\r\n\r\n  const onStartChange = (e) => {\r\n    if (e.target.value == 'custom') {\r\n      setShowStart(true);\r\n    } else {\r\n      setShowStart(false);\r\n    }\r\n  };\r\n\r\n  const onEndChange = (e) => {\r\n    if (e.target.value == 'custom') {\r\n      setShowEnd(true);\r\n    } else {\r\n      setShowEnd(false);\r\n    }\r\n  };\r\n\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Leave Type' : 'Create Leave Type'}\r\n      </Typography.Title>\r\n      <ConfigProvider locale={enUSIntl}>\r\n        <ProForm\r\n          onValuesChange={onValuesChange}\r\n          form={form}\r\n          name='basic'\r\n          layout='horizontal'\r\n          labelCol={{\r\n            sm: { span: 8 },\r\n          }}\r\n          wrapperCol={{\r\n            sm: { span: 8 },\r\n          }}\r\n          // wrapperCol={{ span: 16 }}\r\n          onFinish={onFinish}\r\n          autoComplete='off'\r\n          formKey='base-form-use-demo'\r\n          //https://github.com/ant-design/pro-components/issues/1027\r\n          submitter={{\r\n            resetButtonProps: {\r\n              style: {\r\n                display: 'none',\r\n              },\r\n            },\r\n            render: (props, doms) => {\r\n              return (\r\n                <Form.Item\r\n                  wrapperCol={{\r\n                    sm: { offset: 8 },\r\n                  }}\r\n                >\r\n                  <Space>{doms}</Space>\r\n                </Form.Item>\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <ProFormText\r\n            name='name'\r\n            label='Name'\r\n            placeholder='Enter Name'\r\n            tooltip='Press enter to autofill short name'\r\n            fieldProps={{ onPressEnter: onNameChange }}\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          />\r\n          <ProFormText\r\n            name='code'\r\n            label='Short Name'\r\n            placeholder='Enter Short Name'\r\n            tooltip='This field is meant for display purpose'\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <ProFormDigit\r\n            name='count'\r\n            label='Default Count'\r\n            placeholder='Enter Default count'\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n              {\r\n                type: 'number',\r\n                min: 0,\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <ProFormColorPicker\r\n            fieldProps={{ disableAlpha: true }}\r\n            name='color'\r\n            initialValue='blue'\r\n            label='color'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter color',\r\n              },\r\n            ]}\r\n          />\r\n          <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col sm={{ offset: 8 }}>\r\n              <Space>\r\n                Preview:\r\n                <Tag color={colorState.color}>{colorState.code}</Tag>\r\n              </Space>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <ProFormRadio.Group\r\n            fieldProps={{ onChange: onStartChange }}\r\n            initialValue='year'\r\n            options={[\r\n              {\r\n                value: 'year',\r\n                label: 'Year',\r\n              },\r\n              {\r\n                value: 'month',\r\n                label: 'Month',\r\n              },\r\n              {\r\n                value: 'custom',\r\n                label: 'Custom',\r\n              },\r\n            ]}\r\n            name='startDate'\r\n            label={'Start Date'}\r\n          />\r\n          {showStart && (\r\n            <ProFormText\r\n              validate\r\n              name='customStartDate'\r\n              label='Start Date'\r\n              tooltip='Number of days from now. Format: +/- number Eg: -7'\r\n              placeholder='+ or - with numbers eg: -7'\r\n              rules={[\r\n                { required: true },\r\n                { pattern: '[+-][\\\\d]+', message: 'Invalid Format' },\r\n              ]}\r\n            />\r\n          )}\r\n          <ProFormRadio.Group\r\n            fieldProps={{ onChange: onEndChange }}\r\n            initialValue='year'\r\n            options={[\r\n              {\r\n                value: 'year',\r\n                label: 'Year',\r\n              },\r\n              {\r\n                value: 'month',\r\n                label: 'Month',\r\n              },\r\n              {\r\n                value: 'custom',\r\n                label: 'Custom',\r\n              },\r\n            ]}\r\n            name='endDate'\r\n            label={'End Date'}\r\n          />\r\n          {showEnd && (\r\n            <ProFormText\r\n              name='customEndDate'\r\n              label='End Date'\r\n              tooltip='Number of days from now. Format: +/- number Eg: +7'\r\n              placeholder='+ or - with numbers eg: +7'\r\n              rules={[\r\n                { required: true },\r\n                { pattern: '[+-][\\\\d]+', message: 'Invalid Format' },\r\n              ]}\r\n            />\r\n          )}\r\n        </ProForm>\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\nexport default LeaveTypeForm;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\n\r\nimport './LeaveTypeHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nconst { Column } = Table;\r\nconst LeaveTypeHome = () => {\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createLeaveType = () => {\r\n    navigate('/leaveTypes/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createLeaveType}>Create New Leave Type</Button>\r\n      </Space>\r\n\r\n      {!leaveTypes.length ? (\r\n        <>\r\n          <br />\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={leaveTypes} rowKey='_id'>\r\n            <Column title='Code' dataIndex='code' key='code' />\r\n            <Column title='Name' dataIndex='name' key='name' />\r\n            <Column title='Count' dataIndex='count' key='count' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`/leaveTypes/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Button type='secondary' htmlType='button'>\r\n            <Link to='/'>Back</Link>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveTypeHome;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\n\r\nimport './RoleHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { getRoles } from '../../actions/roles';\r\nconst { Column } = Table;\r\nconst RoleHome = () => {\r\n  const { roles } = useSelector((state) => state.roles);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createRole = () => {\r\n    navigate('/roles/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createRole}>Add Roles</Button>\r\n      </Space>\r\n      <br />\r\n      {!roles.length ? (\r\n        <>\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={roles} rowKey='_id'>\r\n            <Column title='Roles' dataIndex='name' key='name' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`roles/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n      <Button>\r\n        <Link to='/'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleHome;\r\n","export const LEAVE_VIEW_SELF = 'LEAVE_VIEW_SELF';\r\nexport const LEAVE_VIEW_DEPT = 'LEAVE_VIEW_DEPT';\r\nexport const LEAVE_VIEW_ALL = 'LEAVE_VIEW_ALL';\r\nexport const LEAVE_APPROVE = 'LEAVE_APPROVE';\r\n\r\nexport const ROLES_ASSIGN = 'ROLES_ASSIGN';\r\n\r\nexport const PERMISSIONS = [\r\n  {\r\n    modules: 'HISTORY',\r\n    permissions: [\r\n      {\r\n        name: 'View Own Leave',\r\n        code: LEAVE_VIEW_SELF,\r\n      },\r\n      {\r\n        name: 'View Department Leave',\r\n        code: LEAVE_VIEW_DEPT,\r\n      },\r\n      {\r\n        name: 'View All Leave',\r\n        code: LEAVE_VIEW_ALL,\r\n      },\r\n      {\r\n        name: 'Approve Leave',\r\n        code: LEAVE_APPROVE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    modules: 'Other',\r\n    permissions: [\r\n      {\r\n        name: 'Assign roles',\r\n        code: ROLES_ASSIGN,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Space,\r\n  Checkbox,\r\n  Typography,\r\n} from 'antd';\r\n\r\nimport './RoleForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { createRole, getRole, updateRole } from '../../actions/roles';\r\nimport { PERMISSIONS } from '../../constants/permissions';\r\n\r\nconst RoleForm = () => {\r\n  //const modules = PERMISSIONS.map((list) => list.modules);\r\n  const { id } = useParams();\r\n  const { role } = useSelector((state) => state.roles);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    //  let lists = [];\r\n    // for (let i of modules) lists = lists.concat(values[i]);\r\n\r\n    //PERMISSIONS.map((list) => (lists = lists.concat(values[list.modules])));\r\n    //https://stackoverflow.com/a/44971570\r\n    // for (let key in modules) lists = lists.concat(values[key].filter);\r\n    //console.log(lists);\r\n\r\n    if (id) {\r\n      dispatch(updateRole(id, { ...values }));\r\n    } else {\r\n      dispatch(createRole({ ...values }));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getRole(id));\r\n      /**\r\n      const fields = modules.map((module) => {\r\n        return { [module]: role.permissions };\r\n      });\r\n      form.setFieldsValue({ ...role, ...fields });\r\n       */\r\n      form.setFieldsValue({ ...role });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Role' : 'Create Role'}\r\n      </Typography.Title>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Name'\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter ' />\r\n        </Form.Item>\r\n        {/*   <Form.Item\r\n          label='Short Name'\r\n          name='code'\r\n          tooltip={{ title: 'This field is meant for display purpose' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter short name' />\r\n        </Form.Item>\r\n        */}\r\n        {/**\r\n      {PERMISSIONS.map((list) => {\r\n        const options = list.permissions.map((permission) => {\r\n          return {\r\n            key: permission.code,\r\n            label: permission.name,\r\n            value: permission.code,\r\n          };\r\n        });\r\n        return (\r\n          <>\r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 7,\r\n                span: 16,\r\n              }}\r\n              labelCol={{ offset: 7, span: 24 }}\r\n              key={list.modules}\r\n              name={list.modules}\r\n              label={list.modules}\r\n            >\r\n              <Checkbox.Group options={options} defaultValue={[]} />\r\n            </Form.Item>\r\n          </>\r\n        );\r\n      })}*/}\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Space>\r\n            <Button type='primary' htmlType='submit'>\r\n              Submit\r\n            </Button>\r\n            <Button type='secondary' htmlType='button'>\r\n              <Link to='/roles'>Back</Link>\r\n            </Button>\r\n          </Space>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default RoleForm;\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  Descriptions,\r\n  Divider,\r\n  Form,\r\n  Row,\r\n  Typography,\r\n  Alert,\r\n  Modal,\r\n} from 'antd';\r\n//https://github.com/nanxiaobei/antd-img-crop#styles\r\nimport 'antd/es/modal/style';\r\nimport 'antd/es/slider/style';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nimport moment from 'moment';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { updateSettings } from '../../actions/auth';\r\nimport './Profile.css';\r\n\r\n//import * as PusherPushNotifications from '@pusher/push-notifications-web';\r\n/*\r\nconst beamsClient = new PusherPushNotifications.Client({\r\n  instanceId: '0b883b28-92f8-4afc-9f97-ffebaa950fc8',\r\n});\r\n*/\r\nconst { Text } = Typography;\r\nconst { useForm } = Form;\r\nconst Profile = ({ user }) => {\r\n  const [form] = useForm();\r\n  const screens = useBreakpoint();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const onFinish = async (values) => {\r\n    const settings = {};\r\n    settings.email = values.settings.includes('email');\r\n\r\n    /*\r\n    if (settings.notification) {\r\n      beamsClient\r\n        .start()\r\n        .then((beamsClient) => beamsClient.getDeviceId())\r\n        .catch((err) => {\r\n          error = true;\r\n          Modal.error({\r\n            content:\r\n              \"Can't enable push notification. Please check if u disable it for this site\",\r\n          });\r\n\r\n          settings.notification = false;\r\n          console.log(settings);\r\n          dispatch(updateSettings(user._id, settings));\r\n        })\r\n        .then(() => {\r\n          beamsClient.addDeviceInterest(user._id.toString());\r\n          dispatch(updateSettings(user._id, settings));\r\n          Modal.success({ content: 'Settings Updated' });\r\n        });\r\n    } else {\r\n      beamsClient.stop();\r\n     \r\n    }*/\r\n    dispatch(updateSettings(user._id, settings));\r\n    Modal.success({ content: 'Settings Updated' });\r\n    //console.log(settings);\r\n  };\r\n  useEffect(() => {\r\n    //console.log(user.settings.map(([key, value]) => key));\r\n\r\n    //https://stackoverflow.com/a/45890604\r\n    form.setFieldsValue({\r\n      settings: Object.keys(user.settings).filter(\r\n        (key) => user['settings'][key]\r\n      ),\r\n    });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Profile\r\n      </Typography.Title>\r\n\r\n      <Descriptions\r\n        title={<Divider orientation='left'>Details</Divider>}\r\n        bordered\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Emoployee ID'>\r\n          {user.emp_id}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='First Name'>\r\n          {user.first_name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Last Name'>\r\n          {user.last_name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Department'>\r\n          {user.department.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Employment Date'>\r\n          {moment(user.employment_date).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Roles'>{user.roles.name}</Descriptions.Item>\r\n      </Descriptions>\r\n\r\n      <Descriptions\r\n        title={<Divider orientation='left'>Leave Balance</Divider>}\r\n        bordered\r\n      >\r\n        {user.leaveCount.map((leave) => (\r\n          <Descriptions.Item\r\n            key={leave.leaveType._id}\r\n            label={leave.leaveType.name}\r\n          >\r\n            {leave.count}\r\n          </Descriptions.Item>\r\n        ))}\r\n      </Descriptions>\r\n\r\n      <Divider orientation='left'>Settings</Divider>\r\n      <Form form={form} name='basic' onFinish={onFinish} autoComplete='off'>\r\n        <Form.Item name='settings'>\r\n          <Checkbox.Group>\r\n            <Row>\r\n              {/*\r\n              <Col span={24}>\r\n                <Checkbox value='notification'>Notification</Checkbox>\r\n              </Col>\r\n            */}\r\n              <Col span={24}>\r\n                <Checkbox value='email'>Email</Checkbox>\r\n              </Col>\r\n            </Row>\r\n          </Checkbox.Group>\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button type='primary' htmlType='submit'>\r\n            Save Settings\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <Button type='primary'>\r\n          <Link to='/profile/changePassword'>Change Password</Link>\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n//https://flexiple.com/loop-through-object-javascript/\r\n\r\nexport default Profile;\r\n","let eventGuid = 0;\r\nlet todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\r\nlet date1 = new Date('2021-10-03');\r\nlet date2 = new Date('2021-10-08');\r\nexport const INITIAL_EVENTS = [\r\n  {\r\n    id: createEventId(),\r\n    title: 'All-day event',\r\n    start: todayStr,\r\n    display: 'background',\r\n  },\r\n  {\r\n    id: createEventId(),\r\n    title: 'Timed1 event',\r\n    start: todayStr + 'T12:00:00',\r\n  },\r\n  {\r\n    id: createEventId(),\r\n    title: 'Timed event',\r\n    start: date1,\r\n    end: date2,\r\n    display: 'background',\r\n  },\r\n];\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++);\r\n}\r\n","import React, { useEffect, useState, createRef } from 'react';\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport { INITIAL_EVENTS, createEventId } from './events-utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Spin } from 'antd';\r\n\r\nimport './Calendar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchLeaveByDateRange } from '../../actions/leaves';\r\nimport moment from 'moment';\r\nconst { useBreakpoint } = Grid;\r\n\r\n//https://github.com/scaredofseagles/Producky/blob/master/client/src/views/CalendarMain.js\r\n//https://github.com/fullcalendar/fullcalendar-example-projects/blob/master/react/src/DemoApp.jsx\r\nconst Calendar = () => {\r\n  const dispatch = useDispatch();\r\n  const screens = useBreakpoint();\r\n  const navigate = useNavigate();\r\n  const c = createRef();\r\n  let newLeave;\r\n  const [dateRange, setDateRange] = useState({\r\n    fromDate: moment(),\r\n    toDate: moment(),\r\n  });\r\n  const [cal, setCal] = useState({});\r\n  const { calendar, isLoading, error } = useSelector((state) => state.leaves);\r\n  //https://stackoverflow.com/questions/61528054/react-full-calendar-change-view-api\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      if (screens.xs) {\r\n        c.current.getApi().changeView('listMonth');\r\n      } else {\r\n        c.current.getApi().changeView('dayGridMonth');\r\n      }\r\n    }\r\n  }, [screens]);\r\n\r\n  const handleEventsss = async (info, success, error) => {\r\n    const startDate = moment(info.start);\r\n    const endDate = moment(info.end);\r\n\r\n    if (\r\n      dateRange.fromDate.diff(startDate) != 0 &&\r\n      dateRange.toDate.diff(endDate) != 0\r\n    ) {\r\n      setDateRange({\r\n        fromDate: startDate,\r\n        toDate: endDate,\r\n      });\r\n      dispatch(\r\n        fetchLeaveByDateRange({\r\n          fromDate: startDate,\r\n          toDate: endDate,\r\n        })\r\n      );\r\n    }\r\n\r\n    success(calendar);\r\n  };\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    if (clickInfo.event.display != 'background') navigate(clickInfo.event.url);\r\n  };\r\n\r\n  const renderEventContent = (eventInfo) => {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.title}</i>\r\n        <i>{eventInfo.event.extendedProps.emp_id}</i>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className='demo-app'>\r\n        <div className='demo-app-main'>\r\n          <Spin spinning={isLoading}>\r\n            <FullCalendar\r\n              ref={c}\r\n              plugins={[\r\n                dayGridPlugin,\r\n                timeGridPlugin,\r\n                interactionPlugin,\r\n                listPlugin,\r\n              ]}\r\n              headerToolbar={{\r\n                left: 'prevYear,prev,next,nextYear',\r\n                center: 'title',\r\n                right: 'today dayGridMonth,listMonth',\r\n              }}\r\n              initialView='dayGridMonth'\r\n              dayMaxEvents={true}\r\n              weekends\r\n              businessHours={{ daysOfWeek: [1, 2, 3, 4, 5] }}\r\n              events={handleEventsss}\r\n              eventContent={renderEventContent}\r\n              eventClick={handleEventClick}\r\n            />\r\n          </Spin>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Calendar;\r\n","import { Route, Navigate } from 'react-router-dom';\r\nimport {\r\n  LEAVE_APPROVE,\r\n  LEAVE_VIEW_ALL,\r\n  ROLES_ASSIGN,\r\n} from './constants/permissions';\r\n\r\n//https://medium.com/@thanhbinh.tran93/private-route-public-route-and-restricted-route-with-react-router-d50b27c15f5e\r\n//https://stackoverflow.com/questions/69864165/error-privateroute-is-not-a-route-component-all-component-children-of-rou\r\nfunction PrivateRoute({\r\n  children,\r\n  user,\r\n  requiredPermissions = null,\r\n  matchAllPermissions = false,\r\n}) {\r\n  let hasAccess = true;\r\n  if (requiredPermissions) {\r\n    if (matchAllPermissions) {\r\n      hasAccess = requiredPermissions.every(\r\n        (ai) => [LEAVE_APPROVE, ROLES_ASSIGN, LEAVE_VIEW_ALL].indexOf(ai) !== -1\r\n      );\r\n    } else {\r\n      hasAccess = [LEAVE_APPROVE, ROLES_ASSIGN, LEAVE_VIEW_ALL].some(\r\n        (ai) => requiredPermissions.indexOf(ai) !== -1\r\n      );\r\n    }\r\n  }\r\n  return user && hasAccess ? children : <Navigate to='/auth' replace />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import React, { useRef, useState } from 'react';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Select,\r\n  ConfigProvider,\r\n  Space,\r\n  Tooltip,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n} from 'antd';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport moment from 'moment';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n//https://stackoverflow.com/a/59479818\r\nconst sorterA = (a, b) =>\r\n  isNaN(a) && isNaN(b) ? (a || '').localeCompare(b || '') : a - b;\r\n//https://stackoverflow.com/a/42948173\r\nconst sorterDate = (a, b) => moment(a).diff(moment(b));\r\nconst valueEnum = {\r\n  0: 'close',\r\n  1: 'running',\r\n  2: 'online',\r\n  3: 'error',\r\n};\r\nconst tableListDataSource = [];\r\nconst creators = ['付小小', '曲丽丽', '林东东', '陈帅帅', '兼某某'];\r\nfor (let i = 0; i < 100; i += 1) {\r\n  tableListDataSource.push({\r\n    key: i,\r\n    name: 'AppName',\r\n    containers: Math.floor(Math.random() * 20),\r\n    creator: creators[Math.floor(Math.random() * creators.length)],\r\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\r\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\r\n    money: Math.floor(Math.random() * 2000) * i,\r\n    progress: Math.ceil(Math.random() * 100) + 1,\r\n    memo:\r\n      i % 2 === 1\r\n        ? '很长很长很长很长很长很长很长的文字要展示但是要留下尾巴'\r\n        : '简短备注文案',\r\n  });\r\n}\r\nconst columns = [\r\n  {\r\n    title: '排序',\r\n    dataIndex: 'index',\r\n    valueType: 'indexBorder',\r\n    width: 48,\r\n  },\r\n  {\r\n    title: '应用名称',\r\n    dataIndex: 'name',\r\n    render: (_) => <a>{_}</a>,\r\n    // 自定义筛选项功能具体实现请参考 https://ant.design/components/table-cn/#components-table-demo-custom-filter-panel\r\n    filterDropdown: () => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input style={{ width: 188, marginBottom: 8, display: 'block' }} />\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\r\n    ),\r\n  },\r\n  {\r\n    title: '创建者',\r\n    dataIndex: 'creator',\r\n    valueEnum: {\r\n      all: { text: '全部' },\r\n      付小小: { text: '付小小' },\r\n      曲丽丽: { text: '曲丽丽' },\r\n      林东东: { text: '林东东' },\r\n      陈帅帅: { text: '陈帅帅' },\r\n      兼某某: { text: '兼某某' },\r\n    },\r\n  },\r\n  {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    initialValue: 'all',\r\n    filters: true,\r\n    onFilter: true,\r\n    valueEnum: {\r\n      all: { text: '全部', status: 'Default' },\r\n      close: { text: '关闭', status: 'Default' },\r\n      running: { text: '运行中', status: 'Processing' },\r\n      online: { text: '已上线', status: 'Success' },\r\n      error: { text: '异常', status: 'Error' },\r\n    },\r\n  },\r\n  {\r\n    title: (\r\n      <>\r\n        创建时间\r\n        <Tooltip placement='top' title='这是一段描述'>\r\n          <QuestionCircleOutlined style={{ marginLeft: 4 }} />\r\n        </Tooltip>\r\n      </>\r\n    ),\r\n    width: 140,\r\n    key: 'since',\r\n    dataIndex: 'createdAt',\r\n    valueType: 'date',\r\n    sorter: (a, b) => a.createdAt - b.createdAt,\r\n  },\r\n  {\r\n    title: '备注',\r\n    dataIndex: 'memo',\r\n    ellipsis: true,\r\n    copyable: true,\r\n  },\r\n  {\r\n    title: '操作',\r\n    width: 180,\r\n    key: 'option',\r\n    valueType: 'option',\r\n    render: () => [\r\n      <a key='link'>链路</a>,\r\n      <a key='link2'>报警</a>,\r\n      <a key='link3'>监控</a>,\r\n      <TableDropdown\r\n        key='actionGroup'\r\n        menus={[\r\n          { key: 'copy', name: '复制' },\r\n          { key: 'delete', name: '删除' },\r\n        ]}\r\n      />,\r\n    ],\r\n  },\r\n];\r\n\r\nconst columns2 = [\r\n  {\r\n    title: 'Index',\r\n    dataIndex: 'index',\r\n    valueType: 'indexBorder',\r\n    key: 'index',\r\n    width: 48,\r\n  },\r\n  {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n    render: (text, record) => `${record.title} ${record.leaveType}`,\r\n    sorter: (a, b) => sorterA(a.title, b.title),\r\n  },\r\n  {\r\n    title: 'Start Date',\r\n    dataIndex: 'fromDate',\r\n    key: 'fromDate',\r\n    valueType: 'date',\r\n    render: (text, record) => moment(text).format('y-MM-DD'),\r\n    sorter: (a, b) => sorterA(a.fromDate, b.fromDate),\r\n  },\r\n];\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key='1'>1st item</Menu.Item>\r\n    <Menu.Item key='2'>2nd item</Menu.Item>\r\n    <Menu.Item key='3'>3rd item</Menu.Item>\r\n  </Menu>\r\n);\r\nexport default () => {\r\n  const { leaves } = useSelector((state) => state.leaves);\r\n  const [data, setData] = useState(leaves);\r\n  const actionRef = useRef();\r\n  return (\r\n    <ConfigProvider locale={enUSIntl}>\r\n      <ProTable\r\n        columns={columns2}\r\n        actionRef={actionRef}\r\n        request={(params, sorter, filter) => {\r\n          // 表单搜索项会从 params 传入，传递给后端接口。\r\n          //https://www.codeshelper.com/article/27727.html\r\n          //https://github.com/ant-design/ant-design-pro/blob/master/mock/listTableList.ts\r\n          let dataSource = data;\r\n          //  console.log(dataSource);\r\n          //  console.log(params, sorter, filter);\r\n          /*\r\n          if (sorter) {\r\n            if (Object.keys(sorter).length > 0) {\r\n              dataSource = dataSource.sort((prev, next) => {\r\n                let sortNumber = 0;\r\n          \r\n                Object.keys(sorter).forEach((key) => {\r\n                  if (sorter[key] === 'descend') {\r\n                    if (key == 'frmDate')\r\n                      if (sorterA(prev[key], next[key]) > 0) {\r\n                        sortNumber += -1;\r\n                      } else {\r\n                        sortNumber += 1;\r\n                      }\r\n                    return;\r\n                  }\r\n                  if (sorterA(prev[key], next[key]) > 0) {\r\n                    sortNumber += 1;\r\n                  } else {\r\n                    sortNumber += -1;\r\n                  }\r\n                });\r\n                return sortNumber;\r\n              });\r\n            }\r\n          }\r\n          */\r\n          if (filter) {\r\n            if (Object.keys(filter).length > 0) {\r\n              dataSource = dataSource.filter((item) => {\r\n                return Object.keys(filter).some((key) => {\r\n                  if (!filter[key]) {\r\n                    return true;\r\n                  }\r\n                  if (filter[key].includes(`${item[key]}`)) {\r\n                    return true;\r\n                  }\r\n                  return false;\r\n                });\r\n              });\r\n            }\r\n          }\r\n\r\n          if (params) {\r\n            if (Object.keys(params).length > 0) {\r\n              dataSource = dataSource.filter((item) => {\r\n                return Object.keys(params).every((key) => {\r\n                  if (!params[key]) {\r\n                    return true;\r\n                  }\r\n\r\n                  if (key == 'pageSize' || key == 'current') {\r\n                    return true;\r\n                  }\r\n                  if (params[key] == 'all') {\r\n                    return true;\r\n                  }\r\n                  if (\r\n                    item[key].search(\r\n                      new RegExp('.*' + params[key] + '.*', 'gi')\r\n                    ) != -1\r\n                  ) {\r\n                    return true;\r\n                  }\r\n                  return false;\r\n                });\r\n              });\r\n            }\r\n          }\r\n\r\n          return Promise.resolve({\r\n            data: dataSource,\r\n            success: true,\r\n          });\r\n        }}\r\n        rowKey='key'\r\n        pagination={{\r\n          pageSize: 10,\r\n          showQuickJumper: true,\r\n        }}\r\n        search={{\r\n          layout: 'vertical',\r\n          defaultCollapsed: false,\r\n        }}\r\n        /*{\r\n          layout: 'vertical',\r\n          defaultCollapsed: false,\r\n        }*/\r\n        dateFormatter='string'\r\n        toolbar={{\r\n          title: '高级表格',\r\n          tooltip: '这是一个标题提示',\r\n        }}\r\n        toolBarRender={() => [\r\n          <Button key='danger' danger>\r\n            危险按钮\r\n          </Button>,\r\n          <Button key='show'>查看日志</Button>,\r\n          <Button type='primary' key='primary'>\r\n            <Link to='/leaves/create'>Apply Leave</Link>\r\n          </Button>,\r\n          <Dropdown key='menu' overlay={menu}>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>,\r\n        ]}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n};\r\n","import { Route, Navigate } from 'react-router-dom';\r\n\r\nfunction PublicRoute({ children, user }) {\r\n  return user ? <Navigate to='/home' replace /> : children;\r\n}\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Rate,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  UploadProps,\r\n} from 'antd';\r\nimport { UploadOutlined, InboxOutlined, StarOutlined } from '@ant-design/icons';\r\nimport './Test.css';\r\nconst { Option } = Select;\r\nconst Test = () => {\r\n  //console.log(calcWorkingDays('2021-10-01', '2021-10-11'));\r\n\r\n  const beforeUpload = () => {};\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  useEffect(() => {\r\n    notifyMe();\r\n  }, []);\r\n\r\n  function notifyMe() {\r\n    // Let's check if the browser supports notifications\r\n    if (!('Notification' in window)) {\r\n      alert('This browser does not support desktop notification');\r\n    }\r\n\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === 'granted') {\r\n      // If it's okay let's create a notification\r\n      var notification = new Notification('Hi there!');\r\n    }\r\n\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== 'denied') {\r\n      Notification.requestPermission().then(function (permission) {\r\n        // If the user accepts, let's create a notification\r\n        if (permission === 'granted') {\r\n          var notification = new Notification('Hi there!');\r\n        }\r\n      });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n  }\r\n  const onFinish = (values) => {\r\n    const files = values.dragger.filter((file) => !!file.originFileObj);\r\n    console.log(files);\r\n  };\r\n  const downloadFile = (downloadFile) => {\r\n    console.log('herer', downloadFile);\r\n  };\r\n  const fileList = [\r\n    {\r\n      uid: '-1',\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    },\r\n    {\r\n      uid: '-2',\r\n      name: 'yyy.png',\r\n      status: 'done',\r\n    },\r\n  ];\r\n  return <></>;\r\n};\r\n\r\nexport default Test;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  message,\r\n  Alert,\r\n  Typography,\r\n  Modal,\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPassword } from '../../actions/auth';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst ResetPasswordForm = () => {\r\n  const navigate = useNavigate();\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error } = useSelector((state) => state.auth);\r\n  const onFinish = async (values) => {\r\n    dispatch(resetPassword({ email: values.email })).then(() => {\r\n      Modal.success({\r\n        content: 'Email sent!',\r\n        onOk: () => {\r\n          navigate('/auth');\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Reset Password\r\n      </Typography.Title>\r\n      <Form\r\n        name='basic'\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Email'\r\n          name='email'\r\n          initialValue=''\r\n          rules={[\r\n            {\r\n              required: true,\r\n              type: 'email',\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter email' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Link to='/auth'>Back to Login</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n","import {\r\n  Typography,\r\n  DatePicker,\r\n  Button,\r\n  Table,\r\n  Empty,\r\n  Space,\r\n  Popconfirm,\r\n  Modal,\r\n} from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteHoliday, fetchHolidaysByYear } from '../../actions/holidays';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst HolidayHome = ({ socket, user }) => {\r\n  const navigate = useNavigate();\r\n  const { holidays, isLoading, success, error } = useSelector(\r\n    (state) => state.holidays\r\n  );\r\n  const today = moment();\r\n  const dispatch = useDispatch();\r\n  const [year, setYear] = useState(today.year().toString());\r\n  const onChange = (date, dateStr) => {\r\n    setYear(dateStr);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchHolidaysByYear(year));\r\n  }, [dispatch, year]);\r\n\r\n  const deleteHo = async (year, id) => {\r\n    dispatch(deleteHoliday(year, id));\r\n    Modal.success({\r\n      content: 'Holiday Deleted',\r\n    });\r\n  };\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={1}>Holidays</Typography.Title>\r\n      <DatePicker onChange={onChange} picker='year' defaultValue={today} />\r\n      <Button>\r\n        <Link to={`/holidays/create/${year}`}>Add New Holiday for {year}</Link>\r\n      </Button>\r\n      {holidays?.lists?.length ? (\r\n        <>\r\n          <Table\r\n            dataSource={holidays.lists}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Start Date'\r\n              dataIndex='startDate'\r\n              key='startDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='End Date'\r\n              dataIndex='endDate'\r\n              key='endDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              dataIndex='option'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Button\r\n                    type='primary'\r\n                    onClick={() =>\r\n                      navigate(`/holidays/edit/${year}/${record._id}`)\r\n                    }\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                  <Popconfirm\r\n                    title='Are you sure you want to delete this holiday?'\r\n                    onConfirm={() => deleteHo(year, record._id)}\r\n                    okText='Yes'\r\n                    cancelText='No'\r\n                  >\r\n                    <Button type='primary' danger>\r\n                      Delete\r\n                    </Button>\r\n                  </Popconfirm>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table>\r\n        </>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HolidayHome;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Typography,\r\n  DatePicker,\r\n  Modal,\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  createHoliday,\r\n  updateHoliday,\r\n  getHoliday,\r\n} from '../../actions/holidays';\r\n\r\nimport './HolidayForm.css';\r\nimport moment from 'moment';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst { Title } = Typography;\r\nconst DeptForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { year, id } = useParams();\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n  const { holiday, isLoading, success, error } = useSelector(\r\n    (state) => state.holidays\r\n  );\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      dispatch(getHoliday(year, id)).then((data) => {\r\n        setLoading(false);\r\n        const value = data[0];\r\n        form.setFieldsValue({\r\n          ...value,\r\n          'range-picker': [moment(value.startDate), moment(value.endDate)],\r\n        });\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  const onFinish = (values) => {\r\n    const rangeValue = values['range-picker'];\r\n    const startDate = rangeValue[0];\r\n    const endDate = rangeValue[1];\r\n    if (id) {\r\n      dispatch(\r\n        updateHoliday(year, id, {\r\n          title: values.title,\r\n          description: values.description,\r\n          startDate,\r\n          endDate,\r\n        })\r\n      );\r\n      Modal.success({\r\n        content: 'Holiday Updated',\r\n        onOk() {\r\n          navigate('/holidays');\r\n        },\r\n      });\r\n    } else {\r\n      dispatch(\r\n        createHoliday({\r\n          year: year,\r\n          holiday: {\r\n            title: values.title,\r\n            description: values.description,\r\n            startDate,\r\n            endDate,\r\n          },\r\n        })\r\n      );\r\n      Modal.success({\r\n        content: 'Holiday created',\r\n        onOk() {\r\n          navigate('/holidays');\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Holiday' : 'Create Holiday'}\r\n      </Title>\r\n      <Form\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        form={form}\r\n        name='basic'\r\n        onFinish={onFinish}\r\n      >\r\n        <Form.Item\r\n          label='Title'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter title' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Description'\r\n          name='description'\r\n          rules={[{ whitespace: true }]}\r\n        >\r\n          <Input.TextArea\r\n            rows={4}\r\n            placeholder='Please enter description (optional)'\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Date'\r\n          name='range-picker'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker.RangePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button onClick={() => navigate(-1)}>Back</Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchExtTraining,\r\n  fetchUpcomingTraining,\r\n} from '../../actions/training';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Alert,\r\n  Descriptions,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  PieChart,\r\n  Pie,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\n\r\nimport './TrainingHome.css';\r\nimport { set } from 'lodash';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\n\r\nconst TrainingHome = ({ socket, user }) => {\r\n  const screens = useBreakpoint();\r\n  const [loading, setLoading] = useState(true);\r\n  const { trainings, upcomingTraining, isLoading } = useSelector(\r\n    (state) => state.trainings\r\n  );\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  var count = 0;\r\n\r\n  var totalTraining = user.trainingHours,\r\n    completedTraining = user.completedHours;\r\n  var trainingNeeded = totalTraining - completedTraining;\r\n  var completionPercentage = completedTraining / totalTraining;\r\n  trainingNeeded = trainingNeeded < 0 ? '' : trainingNeeded;\r\n\r\n  const data = [\r\n    { name: 'Hours Completed', value: completedTraining },\r\n    { name: 'Hours Required', value: trainingNeeded },\r\n  ];\r\n  const COLORS = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUpcomingTraining(user._id));\r\n    if (user.roles.name != 'staff')\r\n      dispatch(\r\n        fetchExtTraining(user.roles.name, user._id, user.department.name)\r\n      );\r\n  }, [dispatch]);\r\n\r\n  for (var element of trainings) {\r\n    if (element.status == 'Pending') count++;\r\n  }\r\n\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Current Training Status</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} md={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              layout={screens.md ? 'horizontal' : 'vertical'}\r\n              column={{ sm: 2, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={2}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Total Training Hours Required' span={1}>\r\n                {user.trainingHours}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Training Hours Completed' span={1}>\r\n                {user.completedHours}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            <br />\r\n            {completionPercentage <= 0.25 ? (\r\n              <Alert\r\n                message='Low Training Hours Completed'\r\n                description='Please participate in more trainings in order to reach your quota!'\r\n                type='error'\r\n              />\r\n            ) : completionPercentage < 0.75 ? (\r\n              <Alert\r\n                message='Moderate Training Hours Completed'\r\n                description='Keep up the good work! Participate in more trainings to reach your quota.'\r\n                type='warning'\r\n              />\r\n            ) : completionPercentage < 1 ? (\r\n              <Alert\r\n                message='Great Training Hours Completed'\r\n                description='Almost there! Keep participating in trainings to reach your quota!'\r\n                type='success'\r\n              />\r\n            ) : (\r\n              <Alert\r\n                message='Training Quota Reached'\r\n                description='Congratulations! You have reached your training quota!'\r\n                type='success'\r\n              />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} md={12} lg={8}>\r\n          <Card bordered>\r\n            <ResponsiveContainer minWidth={200} minHeight={300}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={data}\r\n                  innerRadius={60}\r\n                  outerRadius={80}\r\n                  fill='#8884d8'\r\n                  paddingAngle={3}\r\n                  startAngle={-270}\r\n                  dataKey='value'\r\n                  isAnimationActive={false}\r\n                  label={renderCustomizedLabel}\r\n                  labelLine={false}\r\n                >\r\n                  {data.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Quick Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col\r\n          className='gutter-row'\r\n          xs={24}\r\n          sm={user.roles.name != 'staff' ? 12 : 24}\r\n        >\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round'>\r\n                <Link to='/training/history'>To Training History</Link>\r\n              </Button>\r\n            </div>\r\n            <b>Upcoming Trainings:</b>\r\n            {upcomingTraining &&\r\n              (!upcomingTraining.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={upcomingTraining} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Organizer'\r\n                      dataIndex='organizer'\r\n                      key='organizer'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Title'\r\n                      dataIndex='title'\r\n                      key='title'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Type'\r\n                      dataIndex='trainingType'\r\n                      key='trainingType'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Date'\r\n                      dataIndex='date'\r\n                      key='date'\r\n                      render={(text, record) =>\r\n                        `${moment(record.fromDate).format(\r\n                          'YYYY-MM-DD'\r\n                        )} - ${moment(record.toDate).format('YYYY-MM-DD')}`\r\n                      }\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`/training/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n        {user.roles.name != 'staff' && (\r\n          <Col className='gutter-row' xs={24} sm={12}>\r\n            <Card bordered>\r\n              <Space\r\n                wrap\r\n                align='baseline'\r\n                style={{ display: 'flex', justifyContent: 'space-between' }}\r\n              >\r\n                <Typography.Text strong>\r\n                  Pending External Training Requests:{` ${count}`}\r\n                </Typography.Text>\r\n\r\n                <Button type='primary' shape='round'>\r\n                  <Link to='/training/extList'>To Requests</Link>\r\n                </Button>\r\n              </Space>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingHome;\r\n","import {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  TimePicker,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\n\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { createTraining } from '../../actions/training';\r\nimport './TrainingForm.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n//const history = useHistory();\r\nconst TrainingForm = ({ socket, user }) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        }\r\n      }\r\n    }\r\n\r\n    const dateRange = values['date'];\r\n    const startDate = dateRange[0];\r\n    const endDate = dateRange[1];\r\n    const timeRange = values['time'];\r\n    const startTime = timeRange[0];\r\n    const endTime = timeRange[1];\r\n\r\n    const trainingData = {\r\n      user: user._id,\r\n      department: user.department._id,\r\n      organizer: values.organizer,\r\n      title: values.title,\r\n      description: values.description,\r\n      fromDate: startDate.format('YYYY-MM-DD'),\r\n      toDate: endDate.format('YYYY-MM-DD'),\r\n      fromTime: startTime.format('HH:mm'),\r\n      toTime: endTime.format('HH:mm'),\r\n      duration: (\r\n        moment.duration(endTime.diff(startTime)).as('hours') *\r\n        (moment.duration(endDate.diff(startDate)).as('days') + 1)\r\n      ).toFixed(2),\r\n      trainingType: 'Internal',\r\n    };\r\n    Object.entries(trainingData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    dispatch(createTraining(formData));\r\n    Modal.success({\r\n      content: 'Training successfully created.',\r\n      onOk() {\r\n        navigate('/training/home');\r\n      },\r\n    });\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n\r\n  //if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Create Internal Training\r\n      </Typography.Title>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Organizer'\r\n          name='organizer'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: 'Please enter an organizer!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter organizer' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Title'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: 'Please insert a title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter title' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Description'\r\n          name='description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your training description!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea rows={4} placeholder='Please enter training description' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker.RangePicker\r\n            style={{ width: '100%' }}\r\n            disabledDate={(current) => {\r\n              return current && current < moment().endOf('day');\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Time'\r\n          name='time'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your time!',\r\n            },\r\n          ]}\r\n        >\r\n          <TimePicker.RangePicker\r\n            style={{ width: '100%' }}\r\n            format='HH:mm'\r\n            minuteStep={15}\r\n            defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n          />\r\n        </Form.Item>\r\n        {/**https://github.com/ant-design/ant-design/tree/master/components/upload/UploadList */}\r\n        <Form.Item\r\n          name='upload'\r\n          label='Supporting Documents'\r\n          getValueFromEvent={normFile}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingForm;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllTrainings } from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst TrainingList = () => {\r\n  const { trainings, isLoading } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const navigate = useNavigate();\r\n  var deptFilters = [];\r\n\r\n  const createTraining = () => {\r\n    navigate('/training/create');\r\n  };\r\n  const createExtTraining = () => {\r\n    navigate('/training/submitExt');\r\n  };\r\n  const calcAttendance = (data) => {\r\n    var temp = data.filter(function (item) {\r\n      return item.status == 'Approved';\r\n    }).length;\r\n    return temp;\r\n  };\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchAllTrainings());\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'organizer',\r\n      key: 'organizer',\r\n      valueType: 'text',\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n      render: (text, record) => `${record.fromTime} - ${record.toTime}`,\r\n    },\r\n    {\r\n      title: 'Total Duration(hours)',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      render: (text, record) =>\r\n        moment\r\n          .utc(moment.duration(record.duration, 'hours').asMilliseconds())\r\n          .format('H [hours] mm [minutes]'),\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Attendants',\r\n      dataIndex: 'attendants',\r\n      key: 'attendants',\r\n      hideInSearch: true,\r\n      sorter: (a, b) =>\r\n        calcAttendance(a.attendants) - calcAttendance(b.attendants),\r\n      render: (text, record) => calcAttendance(record.attendants),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/training/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n  let temp = reverseArr(trainings);\r\n\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <h2>Internal Training List</h2>\r\n      {!trainings.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingList;\r\n\r\n/**\r\n<Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Department ID'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> */\r\n","import { StarOutlined } from '@ant-design/icons';\r\nimport { Badge, Button, Descriptions, List, Space, Upload } from 'antd';\r\n\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nimport moment from 'moment';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  fetchTrainingById,\r\n  leaveTraining,\r\n  updateTraining,\r\n  updateTrainingStatus,\r\n} from '../../actions/training';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport './TrainingDetails.css';\r\nconst TrainingDetails = ({ socket, user }) => {\r\n  const screens = useBreakpoint();\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  //const user = JSON.parse(localStorage.getItem('profile')).result;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(fetchTrainingById(id));\r\n  }, [id]);\r\n\r\n  const joinTraining = (user_id) => {\r\n    dispatch(\r\n      updateTraining(id, {\r\n        user_id,\r\n        user_name: `${user.first_name} ${user.last_name}`,\r\n      })\r\n    );\r\n  };\r\n\r\n  const cancelAttendance = (user_id) => {\r\n    dispatch(leaveTraining(id, { user_id }));\r\n  };\r\n\r\n  const setStatus = (status) => {\r\n    dispatch(\r\n      updateTrainingStatus(id, {\r\n        ...training,\r\n        status,\r\n        approver: user._id,\r\n        user_name: `${user.first_name} ${user.last_name}`,\r\n      })\r\n    );\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const formatDuration = (data) => {\r\n    if (moment.duration(data, 'hours').asDays() >= 1)\r\n      return (\r\n        Math.floor(data) +\r\n        moment\r\n          .utc(moment.duration(data, 'hours').asMilliseconds())\r\n          .format(' [hours] mm [minutes]')\r\n      );\r\n    else\r\n      return moment\r\n        .utc(moment.duration(data, 'hours').asMilliseconds())\r\n        .format('H [hours] mm [minutes]');\r\n  };\r\n\r\n  const setAttendanceStatus = (attendant_id, newStatus) => {\r\n    //console.log(attendant_id, newStatus);\r\n    const updatedAttendant = training.attendants.map((attendant) => {\r\n      if (attendant.user._id === attendant_id)\r\n        return { user: attendant_id, status: newStatus };\r\n      return attendant;\r\n    });\r\n\r\n    dispatch(\r\n      updateTrainingStatus(id, {\r\n        ...training,\r\n        approver: user._id,\r\n        user_name: `${user.first_name} ${user.last_name}`,\r\n        attendants: updatedAttendant,\r\n        extra: { user: attendant_id, status: newStatus },\r\n      })\r\n    );\r\n  };\r\n\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n\r\n  if (!training) return null;\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        style={{ marginBottom: 16 }}\r\n        title='Training Info'\r\n        bordered\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Training Type' span={3}>\r\n          {training.trainingType}\r\n        </Descriptions.Item>\r\n\r\n        {training.trainingType == 'External' ? (\r\n          <>\r\n            <Descriptions.Item label='Requester Name' span={3}>\r\n              {`${training.user.first_name} ${training.user.last_name}`}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Requester Department' span={3}>\r\n              {`${training.department.name}`}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Organizer' span={3}>\r\n              {training.organizer}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Course Name' span={3}>\r\n              {training.title}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Reason for Attending' span={3}>\r\n              {training.description}\r\n            </Descriptions.Item>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Descriptions.Item label='Organizer' span={3}>\r\n              {training.organizer}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Title' span={3}>\r\n              {training.title}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label='Description' span={3}>\r\n              {training.description}\r\n            </Descriptions.Item>\r\n          </>\r\n        )}\r\n\r\n        <Descriptions.Item label='Start Date' span={2}>\r\n          {moment(training.fromDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Date' span={2}>\r\n          {moment(training.toDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Time' span={3}>\r\n          {`${training.fromTime} - ${training.toTime}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Total Duration' span={3}>\r\n          {formatDuration(training.duration)}\r\n        </Descriptions.Item>\r\n        {training.trainingType == 'Internal' ? (\r\n          <Descriptions.Item label='Attendants' span={3}>\r\n            {training.attendants.length != 0 ? (\r\n              <>\r\n                <List\r\n                  size='small'\r\n                  split='true'\r\n                  dataSource={training.attendants}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <Space size='large'>\r\n                        {`${item.user.first_name} ${item.user.last_name}`}\r\n                        <Badge\r\n                          status={\r\n                            item.status == 'Pending'\r\n                              ? 'processing'\r\n                              : item.status == 'Approved'\r\n                              ? 'success'\r\n                              : 'error'\r\n                          }\r\n                          text={item.status}\r\n                        />\r\n                        {user.roles.name == 'admin' &&\r\n                          item.status == 'Pending' && (\r\n                            <>\r\n                              <Button\r\n                                className='btn-success'\r\n                                onClick={() =>\r\n                                  setAttendanceStatus(item.user._id, 'Approved')\r\n                                }\r\n                              >\r\n                                Approve\r\n                              </Button>\r\n                              <Button\r\n                                danger\r\n                                onClick={() =>\r\n                                  setAttendanceStatus(item.user._id, 'Rejected')\r\n                                }\r\n                              >\r\n                                Reject\r\n                              </Button>\r\n                            </>\r\n                          )}\r\n                      </Space>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div>No data</div>\r\n            )}\r\n          </Descriptions.Item>\r\n        ) : (\r\n          <Descriptions.Item label='Course Fee' span={3}>\r\n            {`RM ${training.fee}`}\r\n          </Descriptions.Item>\r\n        )}\r\n        <Descriptions.Item label='Supporting Documents' span={3}>\r\n          {training.attachments.length != 0 ? (\r\n            <>\r\n              <Upload\r\n                className='showFiles'\r\n                defaultFileList={defaultFile}\r\n                showUploadList={{\r\n                  showDownloadIcon: true,\r\n\r\n                  showRemoveIcon: false,\r\n                }}\r\n              ></Upload>\r\n            </>\r\n          ) : (\r\n            <div>None</div>\r\n          )}\r\n        </Descriptions.Item>\r\n        {training.trainingType == 'External' && (\r\n          <Descriptions.Item label='Status' span={3}>\r\n            <Badge\r\n              status={\r\n                training.status == 'Pending'\r\n                  ? 'processing'\r\n                  : training.status == 'Approved'\r\n                  ? 'success'\r\n                  : 'error'\r\n              }\r\n              text={training.status}\r\n            />\r\n          </Descriptions.Item>\r\n        )}\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Space>\r\n        <Button onClick={() => navigate(-1)}>Back</Button>\r\n        {!training.attendants.some((e) => e.user._id === user._id) &&\r\n        training.trainingType == 'Internal' &&\r\n        moment(training.fromDate) > moment() ? (\r\n          <>\r\n            <Button type='success' onClick={() => joinTraining(user._id)}>\r\n              Join Training\r\n            </Button>\r\n          </>\r\n        ) : training.trainingType == 'Internal' &&\r\n          moment(training.fromDate) > moment() ? (\r\n          <>\r\n            <Button\r\n              type='primary'\r\n              danger\r\n              onClick={() => cancelAttendance(user._id)}\r\n            >\r\n              Cancel Attendance\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          training.user._id != user._id &&\r\n          training.trainingType == 'External' &&\r\n          training.status == 'Pending' && (\r\n            <>\r\n              <Button type='success' onClick={() => setStatus('Approved')}>\r\n                Approve\r\n              </Button>\r\n              <Button\r\n                type='primary'\r\n                danger\r\n                onClick={() => setStatus('Rejected')}\r\n              >\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingDetails;\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  TimePicker,\r\n  InputNumber,\r\n  Typography,\r\n  Upload,\r\n  Modal,\r\n  Space,\r\n} from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTraining } from '../../actions/training';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst ExtTrainingForm = ({ user: curUser }) => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const onFinish = async (values) => {\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        }\r\n      }\r\n    }\r\n\r\n    const dateRange = values['date'];\r\n    const startDate = dateRange[0];\r\n    const endDate = dateRange[1];\r\n    const timeRange = values['time'];\r\n    const startTime = timeRange[0];\r\n    const endTime = timeRange[1];\r\n\r\n    const trainingData = {\r\n      user_name: `${curUser.first_name} ${curUser.last_name}`,\r\n      user: user._id,\r\n      department: user.department._id,\r\n      organizer: values.organizer,\r\n      title: values.title,\r\n      description: values.description,\r\n      fromDate: startDate.format('YYYY-MM-DD'),\r\n      toDate: endDate.format('YYYY-MM-DD'),\r\n      fromTime: startTime.format('HH:mm'),\r\n      toTime: endTime.format('HH:mm'),\r\n      duration: (\r\n        moment.duration(endTime.diff(startTime)).as('hours') *\r\n        (moment.duration(endDate.diff(startDate)).as('days') + 1)\r\n      ).toFixed(2),\r\n      trainingType: 'External',\r\n      status: 'Pending',\r\n      fee: values.fee,\r\n    };\r\n    Object.entries(trainingData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    await dispatch(createTraining(formData));\r\n    Modal.success({\r\n      content:\r\n        'Request successfully submitted. You can check request status at Training History.',\r\n      onOk() {\r\n        navigate('/training/home');\r\n      },\r\n    });\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        External Training Request\r\n      </Typography.Title>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Course Name'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter course name' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Organizer'\r\n          name='organizer'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Please enter organizer' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Reason for attending'\r\n          name='description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea rows={4} placeholder='Please enter reason for attending' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker.RangePicker\r\n            style={{ width: '100%' }}\r\n            disabledDate={(current) => {\r\n              return current && current < moment().endOf('day');\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Time'\r\n          name='time'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <TimePicker.RangePicker\r\n            style={{ width: '100%' }}\r\n            format='HH:mm'\r\n            minuteStep={15}\r\n            defaultValue={moment('00:00:00', 'HH:mm:ss')}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Course Fee(RM)'\r\n          name='fee'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber\r\n            min={0}\r\n            style={{ width: '100%' }}\r\n            placeholder='Please enter course fee'\r\n          />\r\n        </Form.Item>\r\n        {/**https://github.com/ant-design/ant-design/tree/master/components/upload/UploadList */}\r\n        <Form.Item\r\n          name='upload'\r\n          label='Supporting Documents'\r\n          getValueFromEvent={normFile}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please provide documents for workshop details!',\r\n            },\r\n          ]}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default ExtTrainingForm;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchExtTraining } from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst ExtTrainingList = () => {\r\n  const { trainings, isLoading } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchExtTraining(user.roles.name, user._id, user.department.name));\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'Pending' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const formatDuration = (data) => {\r\n    if (moment.duration(data, 'hours').asDays() >= 1)\r\n      return (\r\n        Math.floor(data) +\r\n        moment\r\n          .utc(moment.duration(data, 'hours').asMilliseconds())\r\n          .format(' [hours] mm [minutes]')\r\n      );\r\n    else\r\n      return moment\r\n        .utc(moment.duration(data, 'hours').asMilliseconds())\r\n        .format('H [hours] mm [minutes]');\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Requester Name',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Requester Department',\r\n      dataIndex: ['department', 'name'],\r\n      key: 'department',\r\n      hideInSearch: true,\r\n      filters: deptFilters,\r\n      onFilter: (value, record) => record.department.name.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'organizer',\r\n      key: 'organizer',\r\n      valueType: 'text',\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n      render: (text, record) => `${record.fromTime} - ${record.toTime}`,\r\n    },\r\n    {\r\n      title: 'Total Duration',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      render: (text, record) => formatDuration(record.duration),\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      hideInSearch: true,\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/training/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n  let temp = reverseArr(trainings);\r\n\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2>Received External Training Requests</h2>\r\n      {!trainings.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtTrainingList;\r\n\r\n/**<Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Requester Name'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Requester Department'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='organization'\r\n              key='organization'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Status'\r\n              dataIndex='status'\r\n              key='status'\r\n              render={(text, record) => (\r\n                <Badge\r\n                  status={\r\n                    record.status == 'pending'\r\n                      ? 'processing'\r\n                      : record.status == 'approve'\r\n                      ? 'success'\r\n                      : 'error'\r\n                  }\r\n                  text={record.status}\r\n                />\r\n              )}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> */\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchExtTrainingHistory,\r\n  fetchTrainingHistory,\r\n} from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst TrainingHistory = ({ socket, user }) => {\r\n  const { trainingHistory, extTrainings, isLoading } = useSelector(\r\n    (state) => state.trainings\r\n  );\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchExtTrainingHistory(user._id));\r\n    dispatch(fetchTrainingHistory(user._id));\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'Pending' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n  const calcAttendance = (data) => {\r\n    var temp = data.filter(function (item) {\r\n      return item.status == 'Approved';\r\n    }).length;\r\n    return temp;\r\n  };\r\n  const formatDuration = (data) => {\r\n    if (moment.duration(data, 'hours').asDays() >= 1)\r\n      return (\r\n        Math.floor(data) +\r\n        moment\r\n          .utc(moment.duration(data, 'hours').asMilliseconds())\r\n          .format(' [hours] mm [minutes]')\r\n      );\r\n    else\r\n      return moment\r\n        .utc(moment.duration(data, 'hours').asMilliseconds())\r\n        .format('H [hours] mm [minutes]');\r\n  };\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const columns1 = [\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'organizer',\r\n      key: 'organizer',\r\n      valueType: 'text',\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n      render: (text, record) => `${record.fromTime} - ${record.toTime}`,\r\n    },\r\n    {\r\n      title: 'Total Duration',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      render: (text, record) => formatDuration(record.duration),\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/training/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columns2 = [\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'organizer',\r\n      key: 'organizer',\r\n      valueType: 'text',\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n      render: (text, record) => `${record.fromTime} - ${record.toTime}`,\r\n    },\r\n    {\r\n      title: 'Total Duration',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      render: (text, record) => formatDuration(record.duration),\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Attendants',\r\n      dataIndex: 'attendants',\r\n      key: 'attendants',\r\n      hideInSearch: true,\r\n      sorter: (a, b) =>\r\n        calcAttendance(a.attendants) - calcAttendance(b.attendants),\r\n      render: (text, record) => calcAttendance(record.attendants),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/training/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n\r\n  let extReverse = reverseArr(extTrainings);\r\n  let historyReverse = reverseArr(trainingHistory);\r\n\r\n  if (isLoading || !trainingHistory || !extTrainings) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h3>My External Training Requests</h3>\r\n      {extTrainings &&\r\n        (!extTrainings.length ? (\r\n          <Empty></Empty>\r\n        ) : (\r\n          <>\r\n            <ConfigProvider locale={enUSIntl}>\r\n              <ProTable\r\n                columns={columns1}\r\n                actionRef={actionRef}\r\n                request={(params, sorter, filter) => {\r\n                  let dataSource = extReverse;\r\n                  if (params) {\r\n                    if (Object.keys(params).length > 0) {\r\n                      dataSource = dataSource.filter((item) => {\r\n                        return Object.keys(params).every((key) => {\r\n                          if (!params[key]) {\r\n                            return true;\r\n                          }\r\n                          if (key == 'pageSize' || key == 'current') {\r\n                            return true;\r\n                          }\r\n\r\n                          if (params[key] == 'all') {\r\n                            return true;\r\n                          }\r\n                          let val = item[key];\r\n                          if (key == 'user') {\r\n                            val = `${item.user.first_name} ${item.user.last_name}`;\r\n                          } else if (key == 'department') {\r\n                            val = `${item.department.name}`;\r\n                          } else if (key == 'startTime') {\r\n                            return (\r\n                              moment(item['fromDate']).diff(\r\n                                moment(params[key])\r\n                              ) >= 0\r\n                            );\r\n                          } else if (key == 'endTime') {\r\n                            return (\r\n                              moment(item['toDate']).diff(\r\n                                moment(params[key]),\r\n                                'days'\r\n                              ) <= 0\r\n                            );\r\n                          }\r\n                          if (!val) {\r\n                            return true;\r\n                          }\r\n                          if (\r\n                            val.search(\r\n                              new RegExp('.*' + params[key] + '.*', 'gi')\r\n                            ) != -1\r\n                          ) {\r\n                            return true;\r\n                          }\r\n                          return false;\r\n                        });\r\n                      });\r\n                    }\r\n                  }\r\n\r\n                  return Promise.resolve({\r\n                    data: dataSource,\r\n                    success: true,\r\n                  });\r\n                }}\r\n                rowKey='_id'\r\n                pagination={{\r\n                  pageSize: 5,\r\n                  showQuickJumper: true,\r\n                }}\r\n                search={{\r\n                  layout: 'vertical',\r\n                  defaultCollapsed: true,\r\n                  span: 6,\r\n                }}\r\n                dateFormatter='string'\r\n                toolbar={{\r\n                  title: 'Tips:',\r\n                  tooltip:\r\n                    'Use the search bar above or filter icons on the columns for easy record finding',\r\n                }}\r\n                toolBarRender={() => [\r\n                  <Space>\r\n                    <Button type='primary' shape='round'>\r\n                      <Link to='/training/submitExt'>\r\n                        To External Training Application\r\n                      </Link>\r\n                    </Button>\r\n                  </Space>,\r\n                ]}\r\n              />\r\n            </ConfigProvider>\r\n            <br />\r\n          </>\r\n        ))}\r\n\r\n      <h3>My Attending Internal Training</h3>\r\n      {!trainingHistory.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns2}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = historyReverse;\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 5,\r\n                showQuickJumper: true,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingHistory;\r\n\r\n/**<Table\r\n              dataSource={extTrainings}\r\n              rowKey='_id'\r\n              style={{ overflowX: 'scroll' }}\r\n            >\r\n              <Table.Column\r\n                title='Organizer'\r\n                dataIndex='organization'\r\n                key='organization'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Title'\r\n                dataIndex='title'\r\n                key='title'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Date'\r\n                dataIndex='date'\r\n                key='date'\r\n                render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Time'\r\n                dataIndex='time'\r\n                key='time'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Duration(hours)'\r\n                dataIndex='duration'\r\n                key='duration'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Status'\r\n                dataIndex='status'\r\n                key='status'\r\n                render={(text, record) => (\r\n                  <Badge\r\n                    status={\r\n                      record.status == 'pending'\r\n                        ? 'processing'\r\n                        : record.status == 'approve'\r\n                        ? 'success'\r\n                        : 'error'\r\n                    }\r\n                    text={record.status}\r\n                  />\r\n                )}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Action'\r\n                key='action'\r\n                render={(text, record) => (\r\n                  <Space size='middle' key={record._id}>\r\n                    <Link to={`view/${record._id}`}>View</Link>\r\n                  </Space>\r\n                )}\r\n              ></Table.Column>\r\n            </Table> \r\n            \r\n            \r\n            \r\n            <Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Department ID'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table>*/\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n  List,\r\n  Modal,\r\n  Statistic,\r\n} from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchLeaveCount } from '../../actions/leaves';\r\nimport { fetchTrainingCount } from '../../actions/training';\r\nimport { getUsers } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport RcResizeObserver from 'rc-resize-observer';\r\nimport { StatisticCard } from '@ant-design/pro-card';\r\nimport { FcDepartment } from 'react-icons/fc';\r\n\r\nimport { FiUsers } from 'react-icons/fi';\r\nimport './AdminHome.less';\r\nconst Home = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { leaves, isLoading, leaveCount } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { users } = useSelector((state) => state.users);\r\n  const { trainingCount } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  var max = 0;\r\n\r\n  const calcLeaveByMonth = (month, type) => {\r\n    var count = 0;\r\n    leaves.forEach((element) => {\r\n      var d = new Date(element.fromDate);\r\n      if (\r\n        element.status == 'Approved' &&\r\n        element.leaveType._id == type &&\r\n        d.getMonth() == moment().add(month, 'months').month()\r\n      ) {\r\n        max = Math.max(++count, max);\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  var empLeaveData = [];\r\n\r\n  for (var i = -2; i < 4; i++) {\r\n    var temp = { name: moment().add(i, 'months').format('MMMM') };\r\n    leaveTypes.forEach((element) => {\r\n      var leaveName = element.name;\r\n      var countTemp = {};\r\n      countTemp[leaveName] = calcLeaveByMonth(i, element._id);\r\n      temp = { ...temp, ...countTemp };\r\n    });\r\n    empLeaveData.push(temp);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTrainingCount());\r\n    dispatch(fetchLeaveCount());\r\n    dispatch(getUsers());\r\n    dispatch(getDepts());\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n  const { Divider } = StatisticCard;\r\n  const top3Users = users.slice(0, 3);\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (isLoading || !leaves || !leaveCount) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Admin Dashboard</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <Statistic\r\n              title='Users Count'\r\n              value={users.length}\r\n              prefix={<FiUsers />}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <Statistic\r\n              title='Departments Count'\r\n              value={depts.length}\r\n              prefix={<FcDepartment />}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={24}>\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round' style={{ margin: '10px' }}>\r\n                <Link to='/calendar'>View on Calendar</Link>\r\n              </Button>\r\n              <Button type='primary' shape='round' style={{ margin: '10px' }}>\r\n                <Link to='/leaves/list'>More Details...</Link>\r\n              </Button>\r\n            </div>\r\n            <h3>Leaves Taken by Month for All Employees</h3>\r\n            <ResponsiveContainer minHeight={300}>\r\n              <LineChart\r\n                width='100%'\r\n                height='100%'\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} allowDecimals={false} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                {leaveTypes.map((entry, index) => (\r\n                  <Line\r\n                    type='monotone'\r\n                    dataKey={entry.name}\r\n                    stroke={entry.color}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                ))}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Leaves Taken by Department:</b>\r\n            <Table dataSource={leaveCount} rowKey='_id'>\r\n              <Table.Column\r\n                title='Name'\r\n                dataIndex={['department', 'name']}\r\n                dataKey={['department', 'name']}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Leaves Taken'\r\n                dataIndex='count'\r\n                dataKey='count'\r\n                defaultSortOrder='descend'\r\n                sorter={(a, b) => a.count - b.count}\r\n              ></Table.Column>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>External Trainings Attended by Department:</b>\r\n            <Table dataSource={trainingCount} rowKey='_id'>\r\n              <Table.Column\r\n                title='Name'\r\n                dataIndex={['department', 'name']}\r\n                dataKey={['department', 'name']}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Trainings Organized'\r\n                dataIndex='count'\r\n                dataKey='count'\r\n                defaultSortOrder='descend'\r\n                sorter={(a, b) => a.count - b.count}\r\n              ></Table.Column>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n  List,\r\n  Modal,\r\n  Form,\r\n  Select,\r\n} from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchTodayLeaves } from '../../actions/leaves';\r\nimport { fetchDeptUsers } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\n\r\nconst Home = ({ user }) => {\r\n  const screens = useBreakpoint();\r\n\r\n  const { leaves, isLoading, todayLeaves } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { users } = useSelector((state) => state.users);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const { Option } = Select;\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [loading, setIsloading] = useState(true);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  var deptId;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTodayLeaves());\r\n    dispatch(getLeaveTypes());\r\n    dispatch(fetchDeptUsers(user.department._id)).then(() => {\r\n      setIsloading(false);\r\n    });\r\n\r\n    if (user.roles.name == 'admin') {\r\n      setIsModalVisible(true);\r\n      dispatch(getDepts());\r\n    }\r\n  }, [dispatch]);\r\n  const onFinish = (values) => {\r\n    dispatch(fetchDeptUsers(values.department));\r\n\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  if (!users.length) deptId = user.department._id;\r\n  else deptId = users[0].department._id;\r\n  const filterDept = todayLeaves.filter(\r\n    (todayLeaves) => todayLeaves.department._id == deptId\r\n  );\r\n\r\n  users.sort(function (a, b) {\r\n    return b.completedHours - a.completedHours;\r\n  });\r\n  const top3Users = users.slice(0, 3);\r\n\r\n  var supervisorNames = [];\r\n  users.map((element) => {\r\n    if (element.roles.name == 'supervisor')\r\n      supervisorNames.push(`${element.first_name} ${element.last_name}`);\r\n  });\r\n\r\n  var max = 0;\r\n\r\n  const calcLeaveByMonth = (month, type) => {\r\n    var count = 0;\r\n    leaves.forEach((element) => {\r\n      var d = new Date(element.fromDate);\r\n      if (\r\n        element.status == 'Approved' &&\r\n        element.department._id == deptId &&\r\n        element.leaveType._id == type &&\r\n        d.getMonth() == moment().add(month, 'months').month()\r\n      ) {\r\n        max = Math.max(++count, max);\r\n      }\r\n    });\r\n    return count;\r\n  };\r\n\r\n  var empLeaveData = [];\r\n\r\n  for (var i = -2; i < 4; i++) {\r\n    var temp = { name: moment().add(i, 'months').format('MMMM') };\r\n    leaveTypes.forEach((element) => {\r\n      var leaveName = element.name;\r\n      var countTemp = {};\r\n      countTemp[leaveName] = calcLeaveByMonth(i, element._id);\r\n      temp = { ...temp, ...countTemp };\r\n    });\r\n    empLeaveData.push(temp);\r\n  }\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Modal\r\n        title='Select Department to View'\r\n        visible={isModalVisible}\r\n        footer={[\r\n          <Button onClick={() => navigate(-1)}>Back</Button>,\r\n          <Button form='myForm' key='submit' htmlType='submit'>\r\n            Submit\r\n          </Button>,\r\n        ]}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Form id='myForm' onFinish={onFinish}>\r\n          <Form.Item\r\n            label='Departments'\r\n            name='department'\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Select placeholder='Please choose a department'>\r\n              {depts.map((depts) => (\r\n                <Option key={depts._id} value={depts._id}>\r\n                  {depts.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Typography.Title level={2}>Department Dashboard</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              layout={screens.md ? 'horizontal' : 'vertical'}\r\n              title='Department Details'\r\n              bordered\r\n              contentStyle={{ wordBreak: 'keep-all' }}\r\n              column={{ sm: 3, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={3}>\r\n                {users[0].department.name}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item label='Supervisors' span={3}>\r\n                <List\r\n                  dataSource={supervisorNames}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <Typography.Text mark></Typography.Text> {item}\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='No. of Staff' span={3}>\r\n                {users.length}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            {user.roles.name == 'admin' && (\r\n              <>\r\n                <br />\r\n                <Button type='primary' onClick={showModal}>\r\n                  Change Departments\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <div style={{ textAlign: 'right' }}>\r\n              <Button type='primary' shape='round'>\r\n                <Link to='/leaves/list'>To Leaves</Link>\r\n              </Button>\r\n            </div>\r\n            <h4>Leaves Taken by Month for Employees in Department</h4>\r\n            <ResponsiveContainer minHeight={300}>\r\n              <LineChart\r\n                width='100%'\r\n                height='100%'\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} allowDecimals={false} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                {leaveTypes.map((entry, index) => (\r\n                  <Line\r\n                    type='monotone'\r\n                    dataKey={entry.name}\r\n                    stroke={entry.color}\r\n                    activeDot={{ r: 8 }}\r\n                  />\r\n                ))}\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Department Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Currently on Leave in Department:</b>\r\n            {filterDept &&\r\n              (!filterDept.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={filterDept} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.user.first_name} ${record.user.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => (\r\n                        <Tag color={text.color}>\r\n                          {capitalizeFirstLetter(text.code)}\r\n                        </Tag>\r\n                      )}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`/leaves/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Top Training Hours Completed:</b>\r\n            {top3Users &&\r\n              (!top3Users.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={top3Users} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.first_name} ${record.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Hours Completed'\r\n                      dataIndex='completedHours'\r\n                      key='completedHours'\r\n                      sorter={(a, b) => a.completedHours - b.completedHours}\r\n                      defaultSortOrder='desc'\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n/**var pass2MonthC = 0,\r\n    pass2MonthM = 0,\r\n    pass1MonthC = 0,\r\n    pass1MonthM = 0,\r\n    currentMonthC = 0,\r\n    currentMonthM = 0,\r\n    next1MonthC = 0,\r\n    next1MonthM = 0,\r\n    next2MonthC = 0,\r\n    next2MonthM = 0,\r\n    next3MonthC = 0,\r\n    next3MonthM = 0,\r\n    max = 0; \r\n    \r\n    \r\n    leaves.map((element) => {\r\n    var d = new Date(element.fromDate);\r\n    if (element.status == 'approve' && element.department._id == deptId) {\r\n      if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthM, max);\r\n    }\r\n  });\r\n\r\n  const empLeaveData1 = [\r\n    {\r\n      name: moment().subtract(2, 'months').format('MMMM'),\r\n      Casual: pass2MonthC,\r\n      Medical: pass2MonthM,\r\n    },\r\n    {\r\n      name: moment().subtract(1, 'months').format('MMMM'),\r\n      Casual: pass1MonthC,\r\n      Medical: pass1MonthM,\r\n    },\r\n    {\r\n      name: moment().format('MMMM'),\r\n      Casual: currentMonthC,\r\n      Medical: currentMonthM,\r\n    },\r\n    {\r\n      name: moment().add(1, 'months').format('MMMM'),\r\n      Casual: next1MonthC,\r\n      Medical: next1MonthM,\r\n    },\r\n    {\r\n      name: moment().add(2, 'months').format('MMMM'),\r\n      Casual: next2MonthC,\r\n      Medical: next2MonthM,\r\n    },\r\n    {\r\n      name: moment().add(3, 'months').format('MMMM'),\r\n      Casual: next3MonthC,\r\n      Medical: next3MonthM,\r\n    },\r\n  ];*/\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  Select,\r\n  InputNumber,\r\n  Checkbox,\r\n  Tooltip,\r\n  Alert,\r\n  Typography,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n} from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPolicy, getPolicy, updatePolicy } from '../../actions/policy';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { add } from 'lodash';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { getDepts } from '../../actions/depts';\r\nconst { Option } = Select;\r\n\r\nconst calcEvery = (every, increase) => {\r\n  let today = moment();\r\n  let employmentDate = moment('2020-01-01');\r\n  let totalYears = today.diff(employmentDate, 'y');\r\n  let count = totalYears / every;\r\n  return count * increase;\r\n};\r\nconst calcAfter = (after, increase) => {\r\n  let today = moment();\r\n  let employmentDate = moment('2020-01-01');\r\n  let totalYears = today.diff(employmentDate, 'y');\r\n  if (totalYears > after) {\r\n    return increase;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst LeavePolicy = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n\r\n  const [form] = useForm();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { policy, isLoading } = useSelector((state) => state.policy);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  var filteredOptions = leaveTypes.filter(\r\n    (lt) => !selectedItems.includes(lt._id)\r\n  );\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    await dispatch(getDepts());\r\n    if (id) {\r\n      await dispatch(getLeaveTypes());\r\n      const d = await dispatch(getPolicy(id));\r\n      if (d) {\r\n        let leaveTypeArr = [];\r\n        const newD = {\r\n          ...d,\r\n          lists: d.lists.map((list) => {\r\n            const dlt = list.leavetype;\r\n            const newLt = dlt.map((lt) => {\r\n              const val = leaveTypes.find((alt) => alt._id == lt);\r\n              leaveTypeArr.push(lt);\r\n              return { key: val._id, value: val._id, label: val.name };\r\n            });\r\n            return { ...list, leavetype: newLt };\r\n          }),\r\n        };\r\n        setSelectedItems(leaveTypeArr);\r\n        form.setFieldsValue(newD);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const onFinish = (values) => {\r\n    const r = {\r\n      ...values,\r\n      lists: values.lists.map((t) => {\r\n        return { ...t, leavetype: t.leavetype.map((lt) => lt.key) };\r\n      }),\r\n    };\r\n\r\n    if (id) {\r\n      dispatch(updatePolicy(id, r));\r\n      Modal.success({\r\n        content: 'Policy updated',\r\n        onOk() {\r\n          navigate('/policy');\r\n        },\r\n      });\r\n    } else {\r\n      dispatch(createPolicy(r));\r\n      Modal.success({\r\n        content: 'Policy created',\r\n        onOk() {\r\n          navigate('/policy');\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSelectChange = () => {\r\n    const formValues = form.getFieldValue('lists');\r\n\r\n    const leavetypeArr = formValues.reduce(\r\n      (all, item) => all.concat(item.leavetype?.map((l) => l.key)),\r\n      []\r\n    );\r\n    setSelectedItems(leavetypeArr);\r\n  };\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        {id ? 'Edit Policy' : 'Create Policy'}\r\n      </Typography.Title>\r\n      <Row>\r\n        <Col sm={{ offset: 7, span: 10 }}>\r\n          <Form\r\n            style={{ width: '100%' }}\r\n            form={form}\r\n            name='dynamic_form_nest_item'\r\n            onFinish={onFinish}\r\n            autoComplete='off'\r\n          >\r\n            {/**https://github.com/ant-design/ant-design/issues/7481#issuecomment-802830547 */}\r\n            {/**https://stackoverflow.com/questions/61622292/antd-v4-how-to-add-nesting-in-form-list */}\r\n            {/**https://stackoverflow.com/questions/62995077/how-to-make-ant-designs-form-list-required */}\r\n            <Form.Item\r\n              label='Name'\r\n              name='name'\r\n              rules={[\r\n                { required: true },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (\r\n                      getFieldValue('lists') &&\r\n                      getFieldValue('lists').length\r\n                    ) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject('Please add Policy');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input placeholder='Please enter policy name' />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Departments'\r\n              name='departments'\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Select\r\n                allowClear\r\n                placeholder='Choose department'\r\n                mode='multiple'\r\n                rules={[{ required: true }]}\r\n              >\r\n                {depts?.map((dept) => (\r\n                  <Option key={dept._id} value={dept._id}>\r\n                    {dept.name}\r\n                  </Option>\r\n                ))}\r\n              </Select>\r\n            </Form.Item>\r\n\r\n            <Form.List name='lists'>\r\n              {(fields1, { add: add1, remove: remove1 }) => (\r\n                <>\r\n                  {fields1.map((field1) => (\r\n                    <div key={field1.key}>\r\n                      <Form.Item\r\n                        {...field1}\r\n                        label='Leave Types'\r\n                        name={[field1.name, 'leavetype']}\r\n                        fieldKey={[field1.fieldKey, 'leavetype']}\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: 'Please choose leave type',\r\n                          },\r\n                          ({ getFieldValue }) => ({\r\n                            validator(rule, value) {\r\n                              if (\r\n                                getFieldValue([\r\n                                  'lists',\r\n                                  field1.name,\r\n                                  'policy',\r\n                                ]) &&\r\n                                getFieldValue(['lists', field1.name, 'policy'])\r\n                                  .length\r\n                              ) {\r\n                                return Promise.resolve();\r\n                              }\r\n                              return Promise.reject('Please add Condition');\r\n                            },\r\n                          }),\r\n                        ]}\r\n                      >\r\n                        <Select\r\n                          allowClear\r\n                          placeholder='Choose leave type'\r\n                          mode='multiple'\r\n                          onChange={onSelectChange}\r\n                          labelInValue\r\n                          optionLabelProp='label'\r\n                          rules={[{ required: true }]}\r\n                        >\r\n                          {filteredOptions?.map((lt) => (\r\n                            <Option key={lt._id} value={lt._id} label={lt.name}>\r\n                              {lt.name}\r\n                            </Option>\r\n                          ))}\r\n                        </Select>\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        name={[field1.name, 'stacked']}\r\n                        valuePropName='checked'\r\n                        initialValue={false}\r\n                      >\r\n                        <Checkbox>Stacked</Checkbox>\r\n                      </Form.Item>\r\n\r\n                      <Alert\r\n                        style={{ marginBottom: '50px' }}\r\n                        description={`If stacked is selected, all 'After' conditions will apply cumulatively. If stacked is not selected, only the highest 'After' condition will apply`}\r\n                        type='info'\r\n                        showIcon\r\n                      />\r\n                      <Form.List name={[field1.name, 'policy']}>\r\n                        {(policyFields, { add, remove }) => (\r\n                          <>\r\n                            {policyFields.map((policyField) => (\r\n                              <Space\r\n                                key={'policy' + policyField.key}\r\n                                style={{\r\n                                  display: 'flex',\r\n                                  flexWrap: 'wrap',\r\n                                  marginBottom: 8,\r\n                                }}\r\n                                align='baseline'\r\n                              >\r\n                                <Form.Item\r\n                                  {...policyField}\r\n                                  name={[policyField.name, 'condition1']}\r\n                                  fieldKey={[\r\n                                    policyField.fieldKey,\r\n                                    'condition1',\r\n                                  ]}\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: 'Please choose a condition',\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <Select\r\n                                    allowClear\r\n                                    placeholder='Choose a condition'\r\n                                  >\r\n                                    <Option value='after'>After</Option>\r\n                                    <Option value='every'>Every</Option>\r\n                                  </Select>\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                  {...policyField}\r\n                                  name={[policyField.name, 'year']}\r\n                                  fieldKey={[policyField.fieldKey, 'year']}\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: 'Please enter year',\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <InputNumber\r\n                                    min={1}\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder='Please enter years'\r\n                                  />\r\n                                </Form.Item>\r\n                                <>years, increase by </>\r\n                                <Form.Item\r\n                                  {...policyField}\r\n                                  name={[policyField.name, 'increase']}\r\n                                  fieldKey={[policyField.fieldKey, 'increase']}\r\n                                  rules={[\r\n                                    {\r\n                                      required: true,\r\n                                      message: 'Please enter a number',\r\n                                    },\r\n                                  ]}\r\n                                >\r\n                                  <InputNumber\r\n                                    min={1}\r\n                                    style={{ width: '100%' }}\r\n                                    placeholder='Enter increase count'\r\n                                  />\r\n                                </Form.Item>\r\n                                <MinusCircleOutlined\r\n                                  onClick={() => remove(policyField.name)}\r\n                                />\r\n                              </Space>\r\n                            ))}\r\n                            <Form.Item>\r\n                              <Button\r\n                                type='dashed'\r\n                                onClick={() => add()}\r\n                                icon={<PlusOutlined />}\r\n                              >\r\n                                Add Condition\r\n                              </Button>\r\n                            </Form.Item>\r\n                          </>\r\n                        )}\r\n                      </Form.List>\r\n                      <Form.Item>\r\n                        <Button\r\n                          type='dashed'\r\n                          onClick={() => remove1(field1.name)}\r\n                          block\r\n                          icon={<MinusCircleOutlined />}\r\n                        >\r\n                          Remove Policy\r\n                        </Button>\r\n                      </Form.Item>\r\n                    </div>\r\n                  ))}\r\n                  <Form.Item>\r\n                    <Button\r\n                      type='dashed'\r\n                      onClick={() => add1()}\r\n                      block\r\n                      icon={<PlusOutlined />}\r\n                    >\r\n                      Add Policy\r\n                    </Button>\r\n                  </Form.Item>\r\n                </>\r\n              )}\r\n            </Form.List>\r\n            <Form.Item\r\n              wrapperCol={{\r\n                sm: { offset: 8 },\r\n              }}\r\n            >\r\n              <Button type='primary' htmlType='submit'>\r\n                Submit\r\n              </Button>\r\n              <Button\r\n                type='secondary'\r\n                htmlType='button'\r\n                onClick={() => navigate(-1)}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeavePolicy;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { getPolicies } from '../../actions/policy';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { Column } = Table;\r\nconst RoleHome = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { policies } = useSelector((state) => state.policy);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    await dispatch(getPolicies());\r\n    setLoading(false);\r\n  };\r\n\r\n  const createPolicy = () => {\r\n    navigate('/policy/create');\r\n  };\r\n  if (loading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createPolicy}>Add Policy</Button>\r\n      </Space>\r\n      <br />\r\n\r\n      <>\r\n        <Table dataSource={policies} rowKey='_id'>\r\n          <Column title='Name' dataIndex='name' key='name' />\r\n          <Column\r\n            title='Departments'\r\n            dataIndex='departments'\r\n            key='departments'\r\n            render={(text, record) =>\r\n              text.map((dept, i) => <p key={dept._id}>{dept.name}</p>)\r\n            }\r\n          />\r\n          <Column\r\n            title='Policy'\r\n            dataIndex='lists'\r\n            key='lists'\r\n            render={(text, record) =>\r\n              text.map((list, i) => (\r\n                <>\r\n                  <b>{list.leavetype.map((lt) => `${lt.name}, `)}</b>\r\n                  {list.stacked ? <p>Stacked</p> : <></>}\r\n                  {list.policy.map((p, i) => (\r\n                    <p\r\n                      key={i}\r\n                    >{`${p.condition1} ${p.year} years, increase by ${p.increase}`}</p>\r\n                  ))}\r\n                </>\r\n              ))\r\n            }\r\n          />\r\n          <Column\r\n            title='Action'\r\n            key='action'\r\n            render={(text, record) => (\r\n              <Space size='middle'>\r\n                <Button>\r\n                  <Link to={`/policy/edit/${record._id}`}>Edit</Link>\r\n                </Button>\r\n              </Space>\r\n            )}\r\n          />\r\n        </Table>\r\n      </>\r\n\r\n      <Button>\r\n        <Link to='/'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleHome;\r\n","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Error404 = () => {\r\n  const navigate = useNavigate();\r\n  const toHome = () => {\r\n    navigate('/');\r\n  };\r\n  return (\r\n    <Result\r\n      status='404'\r\n      title='404'\r\n      subTitle='Sorry, the page you visited does not exist.'\r\n      extra={\r\n        <Button onClick={toHome} type='primary'>\r\n          Back Home\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n","import React, { useEffect, useState, createRef } from 'react';\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Spin } from 'antd';\r\n\r\nimport './CalendarPersonal.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchLeaveByDateRangePersonal } from '../../actions/leaves';\r\nimport moment from 'moment';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { useBreakpoint } = Grid;\r\n\r\n//https://github.com/scaredofseagles/Producky/blob/master/client/src/views/CalendarMain.js\r\n//https://github.com/fullcalendar/fullcalendar-example-projects/blob/master/react/src/DemoApp.jsx\r\nconst CalendarPersonal = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const screens = useBreakpoint();\r\n  const navigate = useNavigate();\r\n  const c = createRef();\r\n  let newLeave;\r\n  const [dateRange, setDateRange] = useState({\r\n    fromDate: moment(),\r\n    toDate: moment(),\r\n  });\r\n  const [cal, setCal] = useState({});\r\n  const { calendar, isLoading, error } = useSelector((state) => state.leaves);\r\n  //https://stackoverflow.com/questions/61528054/react-full-calendar-change-view-api\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      if (screens.xs) {\r\n        c.current.getApi().changeView('listMonth');\r\n      } else {\r\n        c.current.getApi().changeView('dayGridMonth');\r\n      }\r\n    }\r\n  }, [screens]);\r\n\r\n  const handleEventsss = async (info, success, error) => {\r\n    const startDate = moment(info.start);\r\n    const endDate = moment(info.end);\r\n\r\n    if (\r\n      dateRange.fromDate.diff(startDate) != 0 &&\r\n      dateRange.toDate.diff(endDate) != 0\r\n    ) {\r\n      setDateRange({\r\n        fromDate: startDate,\r\n        toDate: endDate,\r\n      });\r\n      dispatch(\r\n        fetchLeaveByDateRangePersonal({\r\n          id: user._id,\r\n          fromDate: startDate,\r\n          toDate: endDate,\r\n        })\r\n      );\r\n    }\r\n\r\n    success(calendar);\r\n  };\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    if (clickInfo.event.display != 'background') navigate(clickInfo.event.url);\r\n  };\r\n\r\n  const renderEventContent = (eventInfo) => {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.title}</i>\r\n        <i>{eventInfo.event.extendedProps.emp_id}</i>\r\n      </>\r\n    );\r\n  };\r\n  // if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <div className='demo-app'>\r\n        <div className='demo-app-main'>\r\n          <Spin spinning={isLoading}>\r\n            <FullCalendar\r\n              ref={c}\r\n              plugins={[\r\n                dayGridPlugin,\r\n                timeGridPlugin,\r\n                interactionPlugin,\r\n                listPlugin,\r\n              ]}\r\n              headerToolbar={{\r\n                left: 'prevYear,prev,next,nextYear',\r\n                center: 'title',\r\n                right: 'today dayGridMonth,listMonth',\r\n              }}\r\n              initialView='dayGridMonth'\r\n              dayMaxEvents={true}\r\n              weekends\r\n              businessHours={{ daysOfWeek: [1, 2, 3, 4, 5] }}\r\n              events={handleEventsss}\r\n              eventContent={renderEventContent}\r\n              eventClick={handleEventClick}\r\n            />\r\n          </Spin>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default CalendarPersonal;\r\n","import { message } from 'antd';\r\nimport * as api from '../api/index.js';\r\nimport {\r\n  CREATE_TRAININGPROGRESS,\r\n  FETCH_ALL_TRAININGPROGRESS,\r\n  FETCH_ONE_TRAININGPROGRESS,\r\n  UPDATE_TRAININGPROGRESS,\r\n  TRAININGPROGRESS_END_LOADING,\r\n  TRAININGPROGRESS_ERROR,\r\n  TRAININGPROGRESS_START_LOADING,\r\n  FETCH_USER_TRAININGPROGRESS,\r\n  FETCH_DEPT_TRAININGPROGRESS,\r\n} from '../constants/actionTypes';\r\n\r\nexport const getTrainingProgresses = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n    const { data } = await api.getTrainingProgresses();\r\n    dispatch({ type: FETCH_ALL_TRAININGPROGRESS, payload: data });\r\n    dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n  }\r\n};\r\nexport const getTrainingProgress = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n    const { data } = await api.getTrainingProgress(id);\r\n    dispatch({ type: FETCH_ONE_TRAININGPROGRESS, payload: data });\r\n    dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const getTrainingProgressUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n    const { data } = await api.getTrainingProgressUser(id);\r\n    dispatch({ type: FETCH_USER_TRAININGPROGRESS, payload: data });\r\n    dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const getTrainingProgressDept = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n    const { data } = await api.getTrainingProgressDept(id);\r\n    dispatch({ type: FETCH_DEPT_TRAININGPROGRESS, payload: data });\r\n    dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n  }\r\n};\r\n\r\nexport const updateTrainingProgress =\r\n  (id, trainingProgress) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n      const { data } = await api.updateTrainingProgress(id, trainingProgress);\r\n      dispatch({ type: UPDATE_TRAININGPROGRESS, payload: data });\r\n      dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n    }\r\n  };\r\n\r\n/* \r\nexport const createTrainingProgress = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAININGPROGRESS_START_LOADING });\r\n    const { data } = await api.createTrainingProgress(formData);\r\n    dispatch({ type: CREATE_TRAININGPROGRESS, payload: data });\r\n    dispatch({ type: TRAININGPROGRESS_END_LOADING });\r\n  } catch (error) {\r\n  dispatch({ type: TRAININGPROGRESS_ERROR, error });\r\n  }\r\n};*/\r\n","import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Typography,\r\n  Upload,\r\n  Modal,\r\n  Descriptions,\r\n  Row,\r\n  Col,\r\n  Space,\r\n} from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createLeave, fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport {\r\n  getTrainingProgress,\r\n  updateTrainingProgress,\r\n} from '../../actions/trainingProgress';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst TrainingProgressForm = ({ user }) => {\r\n  const screens = useBreakpoint();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const { trainingProgress } = useSelector((state) => state.trainingProgress);\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n    return workingDays;\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const onFinish = (values) => {\r\n    let existedFile = [];\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        } else {\r\n          existedFile.push(\r\n            trainingProgress.attachments.find((a) => a.fileId == file.uid)\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      if (id) {\r\n        existedFile = trainingProgress.attachments;\r\n      }\r\n    }\r\n    formData.append('status', 'Pending Approval');\r\n    formData.append('attachments', JSON.stringify(existedFile));\r\n\r\n    dispatch(updateTrainingProgress(id, formData));\r\n    Modal.success({\r\n      content: 'Changes saved.',\r\n      onOk() {\r\n        navigate('/trainingProgress/history');\r\n      },\r\n    });\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      trainingProgress?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n      dispatch(getTrainingProgress(id)).then(() => {\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  const preventUpload = (file) => {\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Training Progress Certification Upload\r\n      </Typography.Title>\r\n\r\n      <Descriptions\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n      >\r\n        <Descriptions.Item label='Name' span={3}>\r\n          {`${trainingProgress.user.first_name} ${trainingProgress.user.last_name}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Course Name' span={3}>\r\n          {trainingProgress.training.title}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Reason for Attending' span={3}>\r\n          {trainingProgress.training.description}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Training Type' span={3}>\r\n          {trainingProgress.training.trainingType}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n\r\n      <Form\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        form={form}\r\n        name='basic'\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          name='upload'\r\n          label='Certifications'\r\n          getValueFromEvent={normFile}\r\n          rules={[\r\n            () => ({\r\n              validator(_, value) {\r\n                if (\r\n                  trainingProgress?.attachments.length != 0 ||\r\n                  value.length != 0\r\n                ) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error('Upload cannot be empty'));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type='secondary'\r\n            htmlType='button'\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default TrainingProgressForm;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Descriptions, Badge, Button, Space, Spin, Tag, Upload } from 'antd';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { updateUser, getUser } from '../../actions/users';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport _ from 'lodash';\r\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\r\nimport {\r\n  getTrainingProgress,\r\n  updateTrainingProgress,\r\n} from '../../actions/trainingProgress';\r\n\r\nimport './TrainingProgressDetails.css';\r\nconst TrainingProgressDetail = ({ user: curUser }) => {\r\n  const screens = useBreakpoint();\r\n  const { trainingProgress, isLoading } = useSelector(\r\n    (state) => state.trainingProgress\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [loading, setIsloading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(getTrainingProgress(id)).then(() => setIsloading(false));\r\n  }, [dispatch, id]);\r\n  const setStatus = (status) => {\r\n    dispatch(updateTrainingProgress(id, { status }));\r\n    if (status == 'Approved') {\r\n      dispatch(getUser(trainingProgress.user._id)).then((user) => {\r\n        dispatch(\r\n          updateUser(user._id, {\r\n            completedHours:\r\n              parseFloat(user.completedHours) +\r\n              parseFloat(trainingProgress.training.duration),\r\n          })\r\n        );\r\n      });\r\n    }\r\n  };\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n  const normFile = (e) => {\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n\r\n    return (\r\n      trainingProgress?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: file.filePath,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n\r\n  if (loading || isLoading) return <PageLoading />;\r\n  //if (leaveIsloading || userIsloading) return null;\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='Leave Info'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n        layout={screens.md ? 'horizontal' : 'vertical'}\r\n      >\r\n        <Descriptions.Item label='Name' span={3}>\r\n          {`${trainingProgress.user.first_name} ${trainingProgress.user.last_name}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Course Name' span={3}>\r\n          {trainingProgress.training.title}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Reason for Attending' span={3}>\r\n          {trainingProgress.training.description}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Training Type' span={3}>\r\n          {trainingProgress.training.trainingType}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Training Total Duration' span={3}>\r\n          {trainingProgress.training.duration} hours\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label='Supporting Documents' span={3}>\r\n          {trainingProgress.attachments.length != 0 ? (\r\n            <>\r\n              <Upload\r\n                className='showFiles'\r\n                defaultFileList={defaultFile}\r\n                showUploadList={{\r\n                  showDownloadIcon: true,\r\n                  showRemoveIcon: false,\r\n                }}\r\n              ></Upload>\r\n            </>\r\n          ) : (\r\n            <div>None</div>\r\n          )}\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge\r\n            status={\r\n              trainingProgress.status == 'Pending Approval' ||\r\n              trainingProgress.status == 'Waiting Completion'\r\n                ? 'processing'\r\n                : trainingProgress.status == 'Approved'\r\n                ? 'success'\r\n                : 'error'\r\n            }\r\n            text={trainingProgress.status}\r\n          />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <Space size='middle'>\r\n        <Button onClick={() => navigate(-1)}>Back</Button>\r\n\r\n        {trainingProgress.user._id != curUser._id &&\r\n          trainingProgress.status == 'Pending Approval' && (\r\n            <>\r\n              <Button type='success' onClick={() => setStatus('Approved')}>\r\n                Approve\r\n              </Button>\r\n            </>\r\n          )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingProgressDetail;\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchLeaveHistory,\r\n  getTrainingProgressUser,\r\n} from '../../actions/trainingProgress';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst TrainingProgressHistory = ({ user }) => {\r\n  const { trainingProgresses, isLoading } = useSelector(\r\n    (state) => state.trainingProgress\r\n  );\r\n  //  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const statusFilter = [\r\n    { text: 'Waiting Completion', value: 'Waiting Completion' },\r\n    { text: 'Pending Approval', value: 'Pending Approval' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n  var typeFilter = [];\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrainingProgressUser(user._id));\r\n  }, [dispatch]);\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    return string.charAt(0).toUpperCase() + string.slice(1);\r\n  };\r\n\r\n  const actionRef = useRef();\r\n\r\n  const columns = [\r\n    { title: 'Title', dataIndex: ['training', 'title'], key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: ['training', 'fromDate'],\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) =>\r\n        moment(a.training.fromDate) - moment(b.training.fromDate),\r\n      render: (text, record) =>\r\n        moment(record.training.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: ['training', 'toDate'],\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.training.toDate) - moment(b.training.toDate),\r\n      render: (text, record) =>\r\n        moment(record.training.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      hideInSearch: true,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending Approval' ||\r\n            record.status == 'Waiting Completion'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/trainingProgress/view/${record._id}`}>View</Link>\r\n          {(record.status == 'Pending Approval' ||\r\n            record.status == 'Waiting Completion') && (\r\n            <Link to={`/trainingProgress/edit/${record._id}`}>Edit</Link>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n\r\n  let temp = reverseArr(trainingProgresses);\r\n\r\n  if (isLoading || !trainingProgresses) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2>My Training Progress</h2>\r\n      {!trainingProgresses.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              search={{\r\n                span: 24,\r\n              }}\r\n              rowKey='id'\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['training']['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['training']['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingProgressHistory;\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveRequests } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Typography,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport _ from 'lodash';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport { ProFormDateRangePicker } from '@ant-design/pro-form';\r\nimport {\r\n  getTrainingProgressDept,\r\n  getTrainingProgresses,\r\n} from '../../actions/trainingProgress';\r\nconst { Text } = Typography;\r\n\r\nconst TrainingProgressList = ({ user }) => {\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { trainingProgresses, isLoading } = useSelector(\r\n    (state) => state.trainingProgress\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  // const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Wating Completion', value: 'Waiting Completion' },\r\n    { text: 'Pending Approval', value: 'Pending Approval' },\r\n    { text: 'Approved', value: 'Approved' },\r\n    { text: 'Rejected', value: 'Rejected' },\r\n  ];\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    dispatch(getDepts());\r\n    if (user.roles.name == 'admin') {\r\n      dispatch(getTrainingProgresses()).then(() => setLoading(false));\r\n    } else {\r\n      dispatch(getTrainingProgressDept(user.department._id)).then(() =>\r\n        setLoading(false)\r\n      );\r\n    }\r\n  }, [dispatch]);\r\n  if (user.roles.name == 'admin')\r\n    depts.map((element) => {\r\n      deptFilters.push({ text: element.name, value: element.name });\r\n    });\r\n\r\n  const capitalizeFirstLetter = (string) => {\r\n    if (string) return string.charAt(0).toUpperCase() + string.slice(1);\r\n    return string;\r\n  };\r\n\r\n  const filterResult = trainingProgresses.filter(\r\n    (trainingProgresses) => trainingProgresses.user._id != user._id\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Employee Name',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Department',\r\n      dataIndex: ['user', 'department', 'name'],\r\n      key: 'department',\r\n      hideInSearch: true,\r\n      filters: deptFilters,\r\n      onFilter: (value, record) =>\r\n        record.user.department.name.indexOf(value) === 0,\r\n      //  render: (text, record) => `${record.department.name}`,\r\n    },\r\n    {\r\n      title: 'Training Type',\r\n      dataIndex: ['training', 'trainingType'],\r\n      key: 'trainingType',\r\n      filters: [\r\n        { text: 'Internal', value: 'Internal' },\r\n        { text: 'External', value: 'External' },\r\n      ],\r\n      hideInSearch: true,\r\n      onFilter: (value, record) =>\r\n        record.training.trainingType.indexOf(value) === 0,\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: ['training', 'fromDate'],\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) =>\r\n        moment(a.training.fromDate) - moment(b.training.fromDate),\r\n      render: (text, record) =>\r\n        moment(record.training.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: ['training', 'toDate'],\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.training.toDate) - moment(b.training.toDate),\r\n      render: (text, record) =>\r\n        moment(record.training.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      hideInSearch: true,\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'Pending Approval' ||\r\n            record.status == 'Waiting Completion'\r\n              ? 'processing'\r\n              : record.status == 'Approved'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/trainingProgress/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  const reverseArr = (input) => {\r\n    var ret = new Array();\r\n    if (input)\r\n      for (var i = input.length - 1; i >= 0; i--) {\r\n        ret.push(input[i]);\r\n      }\r\n    return ret;\r\n  };\r\n  let temp = reverseArr(filterResult);\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <h2>Employee Training Completion</h2>\r\n      {!filterResult.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = temp;\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          return (\r\n                            moment(item['training']['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['training']['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                labelWidth: 'auto',\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingProgressList;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changePassword, resetPassword } from '../../actions/auth';\r\nimport { Typography, Form, Input, Button } from 'antd';\r\nconst ChangePasswordForm = ({ user }) => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error } = useSelector((state) => state.users);\r\n  const onFinish = async (values) => {\r\n    dispatch(changePassword(user._id, { password: values.password }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Change Password\r\n      </Typography.Title>\r\n      <Form\r\n        name='basic'\r\n        labelCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        wrapperCol={{\r\n          sm: { span: 8 },\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          name='password'\r\n          label='Password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n            {\r\n              pattern:\r\n                '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$',\r\n              message:\r\n                'Minimum eight characters, at least one upper case English letter, one lower case English letter, one number and one special character',\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password autoFocus placeholder='Please enter new password' />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name='confirm'\r\n          label='Confirm Password'\r\n          dependencies={['password']}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n            {\r\n              pattern:\r\n                '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$ %^&*-]).{8,}$',\r\n              message:\r\n                'Minimum eight characters, at least one upper case English letter, one lower case English letter, one number and one special character',\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue('password') === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(\r\n                  new Error('The two passwords that you entered do not match!')\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password placeholder='Please enter password again' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            sm: { offset: 8 },\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Descriptions,\r\n  Result,\r\n  Space,\r\n  Statistic,\r\n  Layout,\r\n  Image,\r\n  message,\r\n  notification,\r\n  Modal,\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  CloseCircleOutlined,\r\n  InfoCircleOutlined,\r\n  LikeOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport ProLayout, {\r\n  PageContainer,\r\n  SettingDrawer,\r\n} from '@ant-design/pro-layout';\r\nimport defaultProps from './_defaultProps';\r\nimport supervisorProps from './_supervisorProps';\r\nimport adminProps from './_adminProps';\r\nimport NoticeIcon from './components/NoticeIcon';\r\nimport Avatar from './components/AvatarDropdown/AvatarDropdown';\r\nimport './App.less';\r\n\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\nimport Auth from './components/Auth/Auth';\r\nimport Home from './components/Home/Home';\r\nimport LeaveForm from './components/LeaveForm/LeaveForm';\r\nimport LeaveDetail from './components/LeaveDetail/LeaveDetail';\r\nimport LeaveList from './components/LeaveList/LeaveList';\r\nimport LeaveHistory from './components/LeaveHistory/LeaveHistory';\r\nimport StaffForm from './components/StaffForm/StaffForm';\r\nimport DeptHome from './components/DeptHome/DeptHome';\r\nimport DeptForm from './components/DeptForm/DeptForm';\r\nimport StaffHome from './components/StaffHome/StaffHome';\r\nimport StaffDetail from './components/StaffDetails/StaffDetail';\r\nimport LeaveTypeForm from './components/LeaveTypeForm/LeaveTypeForm';\r\nimport LeaveTypeHome from './components/LeaveTypeHome/LeaveTypeHome';\r\nimport RoleHome from './components/RoleHome/RoleHome';\r\nimport RoleForm from './components/RoleForm/RoleForm';\r\nimport Profile from './components/Profile/Profile';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport Test from './components/Test/Test';\r\nimport ResetPasswordForm from './components/ResetPasswordForm/ResetPasswordForm';\r\nimport HolidayHome from './components/HolidayHome/HolidayHome';\r\nimport HolidayForm from './components/HolidayForm/HolidayForm';\r\nimport Test2 from './components/Test2/Test2';\r\nimport TrainingHome from './components/TrainingHome/TrainingHome';\r\nimport TrainingForm from './components/TrainingForm/TrainingForm';\r\nimport TrainingList from './components/TrainingList/TrainingList';\r\nimport TrainingDetails from './components/TrainingDetails/TrainingDetails';\r\nimport ExtTrainingForm from './components/ExtTrainingForm/ExtTrainingForm';\r\nimport ExtTrainingList from './components/ExtTrainingList/ExtTrainingList';\r\nimport TrainingHistory from './components/TrainingHistory/TrainingHistory';\r\nimport AdminHome from './components/AdminHome/AdminHome';\r\nimport SupervisorHome from './components/SupervisorHome/SupervisorHome';\r\nimport LeavePolicyForm from './components/LeavePolicyForm/LeavePolicyForm';\r\nimport LeavePolicyHome from './components/LeavePolicyHome/LeavePolicyHome';\r\nimport Error404 from './components/Error/Error404';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n  Navigate,\r\n} from 'react-router-dom';\r\nimport { LOGOUT } from './constants/actionTypes';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { io } from 'socket.io-client';\r\nimport { getNotificationsById } from './actions/notification';\r\nimport CalendarPersonal from './components/CalendarPersonal/CalendarPersonal';\r\nimport TrainingProgressForm from './components/TrainingProgressForm/TrainingProgressForm';\r\nimport TrainingProgressDetail from './components/TrainingProgressDetails/TrainingProgressDetails';\r\nimport TrainingProgressHistory from './components/TrainingProgressHistory/TrainingProgressHistory';\r\nimport TrainingProgressList from './components/TrainingProgressList/TrainingProgressList';\r\nimport ChangePasswordForm from './components/ChangePasswordForm/ChangePasswordForm';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const [showLogo, setShowLogo] = useState(true);\r\n  const [settings, setSetting] = useState({\r\n    fixSiderbar: true,\r\n    navTheme: 'light',\r\n    primaryColor: '#1890ff',\r\n    layout: 'side',\r\n    contentWidth: 'Fluid',\r\n    splitMenus: false,\r\n  });\r\n  const [pathname, setPathname] = useState('/');\r\n  const [socket, setSocket] = useState(null);\r\n  const { authData } = useSelector((state) => state.auth);\r\n  const user = authData?.result;\r\n\r\n  const location = useLocation();\r\n  var temp = defaultProps;\r\n  const navigate = useNavigate();\r\n  const logout = () => {\r\n    socket?.emit('removeUser');\r\n    dispatch({ type: LOGOUT });\r\n    navigate('/auth');\r\n  };\r\n  useEffect(() => {\r\n    setPathname(location.pathname);\r\n    const token = user?.token;\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n        message.error('Session expired. Please login again');\r\n        logout();\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setSocket(io('https://intihrms.herokuapp.com'));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket) {\r\n      if (user) {\r\n        socket?.emit('newUser', user);\r\n        socket?.emit('listUser');\r\n        /** \r\n      beamsClient\r\n        .start()\r\n        .then((beamsClient) => beamsClient.getDeviceId())\r\n        .then((deviceId) =>\r\n          console.log(\r\n            'Successfully registered with Beams. Device ID:',\r\n            deviceId\r\n          )\r\n        )\r\n        .then(() => beamsClient.addDeviceInterest('hello'));\r\n*/\r\n        socket?.on('newNotification', (data) => {\r\n          let title = 'Notification';\r\n          let url = '';\r\n          let icon = <InfoCircleOutlined />;\r\n          if (data.content.type == 'leave') {\r\n            url += '/leaves/view';\r\n            if (data.content.status == 'Pending') {\r\n              title = 'Leave Request';\r\n            } else if (data.content.status == 'Approved') {\r\n              title = 'Leave Approval';\r\n              icon = <CheckCircleOutlined />;\r\n            } else if (data.content.status == 'Rejected') {\r\n              title = 'Leave Approval';\r\n              icon = <CloseCircleOutlined />;\r\n            }\r\n          } else if (data.content.type == 'training') {\r\n            url += '/training/view';\r\n            if (data.content.status == 'Pending') {\r\n              title = 'Training Request';\r\n            } else if (data.content.status == 'Approved') {\r\n              title = 'Training Approval';\r\n              icon = <CheckCircleOutlined />;\r\n            } else if (data.content.status == 'Rejected') {\r\n              title = 'Training Approval';\r\n              icon = <CloseCircleOutlined />;\r\n            }\r\n          }\r\n\r\n          notification.open({\r\n            message: title,\r\n            description: `${data.sender} ${data.content.message}`,\r\n            icon: icon,\r\n            placement: 'bottomRight',\r\n            duration: 300,\r\n            onClick: () => {\r\n              navigate(`${url}/${data.content.id}`);\r\n\r\n              notification.destroy();\r\n            },\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return () => {\r\n      socket?.off('newNotification');\r\n      socket?.disconnect();\r\n    };\r\n  }, [socket, user]);\r\n\r\n  if (user?.roles?.name == 'supervisor') temp = supervisorProps;\r\n  else if (user?.roles?.name == 'admin') temp = adminProps;\r\n  else temp = defaultProps;\r\n  return (\r\n    <div\r\n      id='test-pro-layout'\r\n      style={{\r\n        height: '100vh',\r\n        background: 'black',\r\n      }}\r\n    >\r\n      <ProLayout\r\n        title={false}\r\n        logo={() =>\r\n          showLogo ? (\r\n            <Image className='logo' src='/INTI_Logo.png' preview={false} />\r\n          ) : (\r\n            false\r\n          )\r\n        }\r\n        onCollapse={(collapsed) => setShowLogo(!collapsed)}\r\n        {...temp}\r\n        location={{\r\n          pathname,\r\n        }}\r\n        menuRender={(props, defaultDom) => {\r\n          return user ? defaultDom : false;\r\n        }}\r\n        menuItemRender={(item, dom) => {\r\n          // let path = item.path.split('/./')[0];\r\n          return <Link to={item.path || '/'}>{dom}</Link>;\r\n        }}\r\n        rightContentRender={() => (\r\n          <Space size='large'>\r\n            {user && <NoticeIcon user={user} socket={socket} />}\r\n            <Avatar user={user} logout={logout} />\r\n          </Space>\r\n        )}\r\n        locale='en-US'\r\n        {...settings}\r\n      >\r\n        <div className='site-layout-background'>\r\n          <Routes>\r\n            {/**dashboard */}\r\n            <Route\r\n              path='/home'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <Home socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/supervisor'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <SupervisorHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <AdminHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/home'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**leave */}\r\n            <Route\r\n              path='/leaves/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/view/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveDetail socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/list'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/history'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveHistory socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**leave type */}\r\n            <Route\r\n              path='/leaveTypes'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveTypeHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaveTypes/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveTypeForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaveTypes/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeaveTypeForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**department */}\r\n            <Route\r\n              path='/depts'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <DeptHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/depts/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <DeptForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/depts/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <DeptForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**user */}\r\n            <Route\r\n              path='/profile'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <Profile socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/profile/changePassword'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <ChangePasswordForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <StaffHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/dept'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <StaffHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <StaffForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <StaffForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/view/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <StaffDetail socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**role */}\r\n            <Route\r\n              path='/roles'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <RoleHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/roles/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <RoleForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/roles/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <RoleForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**calendar */}\r\n            <Route\r\n              path='/calendar'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <Calendar socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/calendar/personal'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <CalendarPersonal socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**holiday */}\r\n            <Route\r\n              path='/holidays'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <HolidayHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/holidays/create/:year'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <HolidayForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/holidays/edit/:year/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <HolidayForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**training */}\r\n            <Route\r\n              path='/training/home'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/list'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/view/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingDetails socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/submitExt'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <ExtTrainingForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/extList'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <ExtTrainingList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/history'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingHistory socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**training progress */}\r\n            <Route\r\n              path='/trainingProgress/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingProgressForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/trainingProgress/view/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingProgressDetail socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/trainingProgress/history'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingProgressHistory socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/trainingProgress/list'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <TrainingProgressList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**policy */}\r\n            <Route\r\n              path='/policy'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeavePolicyHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/policy/create'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeavePolicyForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/policy/edit/:id'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <LeavePolicyForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            {/**auth */}\r\n            <Route\r\n              path='/auth'\r\n              element={\r\n                <PublicRoute user={user}>\r\n                  <Auth socket={socket} user={user} />\r\n                </PublicRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/resetPassword'\r\n              element={<ResetPasswordForm socket={socket} user={user} />}\r\n            />\r\n            {/**other */}\r\n            <Route\r\n              path='/test'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <Test socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/test2'\r\n              element={\r\n                <PrivateRoute user={user}>\r\n                  <Test2 socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route path='/' element={<Navigate to='/auth' replace />} />\r\n            <Route path='*' element={<Error404 />} />\r\n          </Routes>\r\n        </div>\r\n        {/**   <div\r\n            style={{\r\n              height: '120vh',\r\n            }}\r\n          >\r\n            <Result\r\n              status='404'\r\n              style={{\r\n                height: '100%',\r\n                background: '#fff',\r\n              }}\r\n              title='Hello World'\r\n              subTitle='Sorry, you are not authorized to access this page.'\r\n              extra={<Button type='primary'>Back Home</Button>}\r\n            />\r\n          </div>*/}\r\n      </ProLayout>\r\n      {/**\r\n      <SettingDrawer\r\n        pathname={pathname}\r\n        getContainer={() => document.getElementById('test-pro-layout')}\r\n        settings={settings}\r\n        onSettingChange={(changeSetting) => {\r\n          setSetting(changeSetting);\r\n        }}\r\n        disableUrlParams\r\n      />\r\n       */}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n\r\n/**\r\n * \r\n *    content={content}\r\n            tabList={[\r\n              {\r\n                tab: '基本信息',\r\n                key: 'base',\r\n              },\r\n              {\r\n                tab: '详细信息',\r\n                key: 'info',\r\n              },\r\n            ]}\r\n            extraContent={\r\n              <Space size={24}>\r\n                <Statistic\r\n                  title='Feedback'\r\n                  value={1128}\r\n                  prefix={<LikeOutlined />}\r\n                />\r\n                <Statistic title='Unmerged' value={93} suffix='/ 100' />\r\n              </Space>\r\n            }\r\n            extra={[\r\n              <Button key='3'>操作</Button>,\r\n              <Button key='2'>操作</Button>,\r\n              <Button key='1' type='primary'>\r\n                主操作\r\n              </Button>,\r\n            ]}\r\n            footer={[\r\n              <Button key='3'>重置</Button>,\r\n              <Button key='2' type='primary'>\r\n                提交\r\n              </Button>,\r\n            ]}\r\n */\r\n","import { message } from 'antd';\r\n\r\nexport const handleError = (error) => {\r\n  try {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      return error.response.data.message.toString();\r\n      //  message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      return error.request.toString();\r\n      // message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      return error.message.toString();\r\n      // message.error(error.message.toString());\r\n    }\r\n  } catch (e) {\r\n    return error;\r\n  }\r\n};\r\n","import {\r\n  AUTH,\r\n  LOGOUT,\r\n  AUTH_END_LOADING,\r\n  AUTH_START_LOADING,\r\n  AUTH_ERROR,\r\n  AUTH_SUCCESS,\r\n  RESET_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  UPDATE_AUTH,\r\n  UPDATE_SETTINGS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nconst authReducer = (\r\n  state = { error: null, isLoading: true, authData: null, success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case AUTH_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case AUTH_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case AUTH_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case AUTH_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n      return { ...state, authData: action?.data };\r\n    case UPDATE_AUTH:\r\n      return {\r\n        ...state,\r\n        authData: { ...state.authData, result: action.payload },\r\n      };\r\n    case UPDATE_SETTINGS:\r\n      return {\r\n        ...state,\r\n        authData: {\r\n          ...state.authData,\r\n          result: {\r\n            ...state.authData.result,\r\n            settings: action.payload.settings,\r\n          },\r\n        },\r\n      };\r\n    case LOGOUT:\r\n      localStorage.clear();\r\n      return { ...state, authData: null };\r\n    case CHANGE_PASSWORD:\r\n    case RESET_PASSWORD:\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport leaves from './leaves';\r\nimport auth from './auth';\r\nimport depts from './depts';\r\nimport users from './users';\r\nimport leaveTypes from './leaveTypes';\r\nimport roles from './roles';\r\nimport holidays from './holidays';\r\nimport trainings from './training';\r\nimport trainingProgress from './trainingProgress';\r\nimport policy from './policy';\r\nimport notifications from './notification';\r\nimport { LOGOUT } from '../constants/actionTypes';\r\n\r\nconst appReducers = combineReducers({\r\n  leaves,\r\n  auth,\r\n  depts,\r\n  users,\r\n  leaveTypes,\r\n  roles,\r\n  holidays,\r\n  trainings,\r\n  trainingProgress,\r\n  policy,\r\n  notifications,\r\n});\r\n//https://stackoverflow.com/a/35641992\r\nexport const reducers = (state, action) => {\r\n  // when a logout action is dispatched it will reset redux state\r\n  if (action.type === LOGOUT) {\r\n    state = undefined;\r\n  }\r\n\r\n  return appReducers(state, action);\r\n};\r\n","import {\r\n  CREATE_LEAVE,\r\n  FETCH_ALL_LEAVE,\r\n  FETCH_LEAVE_BY_DATERANGE,\r\n  FETCH_ONE_LEAVE,\r\n  LEAVE_END_LOADING,\r\n  LEAVE_ERROR,\r\n  LEAVE_START_LOADING,\r\n  UPDATE_LEAVE,\r\n  FETCH_LEAVE_REQUESTS,\r\n  FETCH_UPCOMING_LEAVE,\r\n  FETCH_LEAVE_HISTORY,\r\n  FETCH_TODAY_LEAVE,\r\n  FETCH_LEAVE_COUNT,\r\n  LEAVE_SUCCESS,\r\n  FETCH_LEAVE_BY_DATERANGE_PERSONAL,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = {\r\n    error: null,\r\n    isLoading: true,\r\n    leaves: [],\r\n    calendar: [],\r\n    leave: null,\r\n    success: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LEAVE_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case LEAVE_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case LEAVE_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case LEAVE_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case UPDATE_LEAVE:\r\n      return {\r\n        ...state,\r\n        leaves: state.leaves.map((leave) =>\r\n          leave._id === action.payload._id ? action.payload : leave\r\n        ),\r\n        leave: action.payload,\r\n      };\r\n    case FETCH_ONE_LEAVE:\r\n      return { ...state, leave: action.payload };\r\n\r\n    case FETCH_LEAVE_BY_DATERANGE: {\r\n      const calLeaves =\r\n        action.payload.data.leaves.map((leave) => {\r\n          const leaveType = leave.leaveType;\r\n\r\n          return {\r\n            id: leave._id,\r\n            title: `${leave.user.first_name} ${leave.user.last_name} (${leaveType.code})`,\r\n            start: leave.fromDate,\r\n            url: `/leaves/view/${leave._id}`,\r\n            end: leave.toDate,\r\n            extendedProps: {\r\n              emp_id: leave.emp_id,\r\n            },\r\n            allDay: true,\r\n            color: leaveType.color,\r\n          };\r\n        }) || [];\r\n      const calHolidays =\r\n        action.payload.data.holidays.map((holiday) => {\r\n          return {\r\n            id: holiday._id,\r\n            title: holiday.title,\r\n            start: holiday.startDate,\r\n            end: holiday.endDate,\r\n            allDay: true,\r\n            display: 'background',\r\n          };\r\n        }) || [];\r\n      return {\r\n        ...state,\r\n        calendar: [...calHolidays, ...calLeaves],\r\n      };\r\n    }\r\n    case FETCH_LEAVE_BY_DATERANGE_PERSONAL: {\r\n      const calLeaves =\r\n        action.payload.data.leaves.map((leave) => {\r\n          const leaveType = leave.leaveType;\r\n\r\n          return {\r\n            id: leave._id,\r\n            title: `${leave.user.first_name} ${leave.user.last_name} (${leaveType.code}) [${leave.status}]`,\r\n            start: leave.fromDate,\r\n            url: `/leaves/view/${leave._id}`,\r\n            end: leave.toDate,\r\n            extendedProps: {\r\n              emp_id: leave.emp_id,\r\n            },\r\n            allDay: true,\r\n            color: leaveType.color,\r\n          };\r\n        }) || [];\r\n      const calHolidays =\r\n        action.payload.data.holidays.map((holiday) => {\r\n          return {\r\n            id: holiday._id,\r\n            title: holiday.title,\r\n            start: holiday.startDate,\r\n            end: holiday.endDate,\r\n            allDay: true,\r\n            display: 'background',\r\n          };\r\n        }) || [];\r\n      return {\r\n        ...state,\r\n        calendar: [...calHolidays, ...calLeaves],\r\n      };\r\n    }\r\n    case FETCH_ALL_LEAVE:\r\n      return { ...state, leaves: action.payload };\r\n    case CREATE_LEAVE:\r\n      return { ...state, leaves: [...state.leaves, action.payload] };\r\n\r\n    case FETCH_LEAVE_REQUESTS:\r\n      return { ...state, leaves: action.payload };\r\n\r\n    case FETCH_UPCOMING_LEAVE:\r\n      return { ...state, upcomingLeave: action.payload };\r\n\r\n    case FETCH_LEAVE_HISTORY:\r\n      return { ...state, leaveHistory: action.payload };\r\n\r\n    case FETCH_TODAY_LEAVE:\r\n      return { ...state, todayLeaves: action.payload };\r\n\r\n    case FETCH_LEAVE_COUNT:\r\n      return { ...state, leaveCount: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_DEPT,\r\n  DELETE_DEPT,\r\n  FETCH_ALL_DEPT,\r\n  UPDATE_DEPT,\r\n  DEPT_END_LOADING,\r\n  DEPT_ERROR,\r\n  DEPT_START_LOADING,\r\n  DEPT_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, depts: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case DEPT_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case DEPT_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case DEPT_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case DEPT_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n\r\n    case UPDATE_DEPT:\r\n      return {\r\n        ...state,\r\n        depts: state.depts.map((dept) =>\r\n          dept._id === action.payload._id ? action.payload : dept\r\n        ),\r\n      };\r\n    case FETCH_ALL_DEPT:\r\n      return { ...state, depts: action.payload };\r\n    case CREATE_DEPT:\r\n      return { ...state, depts: [...state.depts, action.payload] };\r\n    case DELETE_DEPT:\r\n      return {\r\n        ...state,\r\n        depts: state.depts.filter((dept) => dept._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_USER,\r\n  FETCH_ALL_USER,\r\n  FETCH_ONE_USER,\r\n  UPDATE_USER,\r\n  USER_END_LOADING,\r\n  USER_ERROR,\r\n  USER_START_LOADING,\r\n  FETCH_DEPT_USER,\r\n  USER_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (state = { users: [], user: null, success: null }, action) => {\r\n  switch (action.type) {\r\n    case USER_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case USER_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case USER_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case USER_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload._id ? action.payload : user\r\n        ),\r\n      };\r\n    case FETCH_ONE_USER:\r\n      return { ...state, user: action.payload };\r\n    case FETCH_ALL_USER:\r\n      return { ...state, users: action.payload };\r\n    case CREATE_USER:\r\n      return { ...state, users: [...state.users, action.payload] };\r\n\r\n    case FETCH_DEPT_USER:\r\n      return { ...state, users: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_LEAVETYPE,\r\n  FETCH_ALL_LEAVETYPE,\r\n  FETCH_ONE_LEAVETYPE,\r\n  UPDATE_LEAVETYPE,\r\n  LEAVETYPE_END_LOADING,\r\n  LEAVETYPE_ERROR,\r\n  LEAVETYPE_START_LOADING,\r\n  LEAVETYPE_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, leaveTypes: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LEAVETYPE_START_LOADING: {\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    }\r\n    case LEAVETYPE_END_LOADING: {\r\n      return { ...state, isLoading: false };\r\n    }\r\n    case LEAVETYPE_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case LEAVETYPE_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n\r\n    case UPDATE_LEAVETYPE:\r\n      return {\r\n        ...state,\r\n        leaveTypes: state.leaveTypes.map((leaveType) =>\r\n          leaveType._id === action.payload._id ? action.payload : leaveType\r\n        ),\r\n      };\r\n    case FETCH_ONE_LEAVETYPE:\r\n      return { ...state, leaveType: action.payload, isLoading: false };\r\n    case FETCH_ALL_LEAVETYPE:\r\n      return { ...state, leaveTypes: action.payload };\r\n    case CREATE_LEAVETYPE:\r\n      return { ...state, leaveTypes: [...state.leaveTypes, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_ROLE,\r\n  FETCH_ALL_ROLE,\r\n  FETCH_ONE_ROLE,\r\n  UPDATE_ROLE,\r\n  ROLE_END_LOADING,\r\n  ROLE_ERROR,\r\n  ROLE_START_LOADING,\r\n  ROLE_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, roles: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ROLE_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case ROLE_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case ROLE_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case ROLE_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case UPDATE_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: state.roles.map((role) =>\r\n          role._id === action.payload._id ? action.payload : role\r\n        ),\r\n      };\r\n    case FETCH_ONE_ROLE:\r\n      return { ...state, role: action.payload };\r\n    case FETCH_ALL_ROLE:\r\n      return { ...state, roles: action.payload };\r\n    case CREATE_ROLE:\r\n      return { ...state, roles: [...state.roles, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  FETCH_ALL_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  HOLIDAY_END_LOADING,\r\n  HOLIDAY_ERROR,\r\n  HOLIDAY_START_LOADING,\r\n  FETCH_HOLIDAY_BY_YEAR,\r\n  FETCH_ONE_HOLIDAY,\r\n  HOLIDAY_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, holidays: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case HOLIDAY_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case HOLIDAY_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case HOLIDAY_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case HOLIDAY_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case UPDATE_HOLIDAY:\r\n      return {\r\n        ...state,\r\n        holidays: {\r\n          ...state.holidays,\r\n          lists: state.holidays.lists.map((holiday) =>\r\n            holiday._id === action.payload._id ? action.payload : holiday\r\n          ),\r\n        },\r\n      };\r\n    case FETCH_HOLIDAY_BY_YEAR:\r\n    case FETCH_ALL_HOLIDAY:\r\n      return { ...state, holidays: action.payload };\r\n    case FETCH_ONE_HOLIDAY:\r\n      return { ...state, holiday: action.payload };\r\n    case CREATE_HOLIDAY:\r\n      return {\r\n        ...state,\r\n        holidays: {\r\n          ...state.holidays,\r\n          lists: [...state.holidays.lists, action.payload],\r\n        },\r\n      };\r\n    case DELETE_HOLIDAY:\r\n      return { ...state, holidays: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_TRAINING,\r\n  FETCH_ALL_TRAINING,\r\n  FETCH_ONE_TRAINING,\r\n  TRAINING_START_LOADING,\r\n  TRAINING_END_LOADING,\r\n  TRAINING_ERROR,\r\n  UPDATE_TRAINING,\r\n  LEAVE_TRAINING,\r\n  FETCH_EXT_TRAINING,\r\n  UPDATE_TRAINING_STATUS,\r\n  FETCH_EXT_TRAINING_HISTORY,\r\n  FETCH_TRAINING_HISTORY,\r\n  FETCH_UPCOMING_TRAINING,\r\n  FETCH_TODAY_TRAINING,\r\n  FETCH_TRAINING_COUNT,\r\n  TRAINING_SUCCESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, trainings: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TRAINING_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case TRAINING_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case TRAINING_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case TRAINING_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case FETCH_ONE_TRAINING:\r\n      return { ...state, training: action.payload };\r\n    case FETCH_ALL_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n    case CREATE_TRAINING:\r\n      return { ...state, trainings: [...state.trainings, action.payload] };\r\n\r\n    case UPDATE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case LEAVE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case UPDATE_TRAINING_STATUS:\r\n      return {\r\n        ...state,\r\n        trainings: state.trainings.map((training) =>\r\n          training._id === action.payload._id ? action.payload : training\r\n        ),\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING_HISTORY:\r\n      return { ...state, extTrainings: action.payload };\r\n\r\n    case FETCH_TRAINING_HISTORY:\r\n      return { ...state, trainingHistory: action.payload };\r\n\r\n    case FETCH_UPCOMING_TRAINING:\r\n      return { ...state, upcomingTraining: action.payload };\r\n\r\n    case FETCH_TODAY_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case FETCH_TRAINING_COUNT:\r\n      return { ...state, trainingCount: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_TRAININGPROGRESS,\r\n  FETCH_ALL_TRAININGPROGRESS,\r\n  FETCH_ONE_TRAININGPROGRESS,\r\n  TRAININGPROGRESS_START_LOADING,\r\n  TRAININGPROGRESS_END_LOADING,\r\n  TRAININGPROGRESS_ERROR,\r\n  UPDATE_TRAININGPROGRESS,\r\n  LEAVE_TRAININGPROGRESS,\r\n  FETCH_EXT_TRAININGPROGRESS,\r\n  UPDATE_TRAININGPROGRESS_STATUS,\r\n  FETCH_EXT_TRAININGPROGRESS_HISTORY,\r\n  FETCH_TRAININGPROGRESS_HISTORY,\r\n  FETCH_UPCOMING_TRAININGPROGRESS,\r\n  FETCH_TODAY_TRAININGPROGRESS,\r\n  TRAININGPROGRESS_SUCCESS,\r\n  FETCH_DEPT_TRAININGPROGRESS,\r\n  FETCH_USER_TRAININGPROGRESS,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = {\r\n    error: null,\r\n    isLoading: true,\r\n    trainingProgresses: [],\r\n    success: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TRAININGPROGRESS_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case TRAININGPROGRESS_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case TRAININGPROGRESS_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n\r\n    case FETCH_ONE_TRAININGPROGRESS:\r\n      return { ...state, trainingProgress: action.payload };\r\n\r\n    case FETCH_ALL_TRAININGPROGRESS:\r\n      return { ...state, trainingProgresses: action.payload };\r\n    case FETCH_DEPT_TRAININGPROGRESS:\r\n      return { ...state, trainingProgresses: action.payload };\r\n    case FETCH_USER_TRAININGPROGRESS:\r\n      return { ...state, trainingProgresses: action.payload };\r\n    case CREATE_TRAININGPROGRESS:\r\n      return {\r\n        ...state,\r\n        trainingProgresses: [...state.trainingProgress, action.payload],\r\n      };\r\n    case TRAININGPROGRESS_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n    case UPDATE_TRAININGPROGRESS:\r\n      return {\r\n        ...state,\r\n        trainingProgress: action.payload,\r\n      };\r\n\r\n    case LEAVE_TRAININGPROGRESS:\r\n      return {\r\n        ...state,\r\n        trainingProgress: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAININGPROGRESS:\r\n      return { ...state, trainingProgresses: action.payload };\r\n\r\n    case UPDATE_TRAININGPROGRESS_STATUS:\r\n      return {\r\n        ...state,\r\n        trainingProgresses: state.trainingProgress.map((trainingProgress) =>\r\n          trainingProgress._id === action.payload._id\r\n            ? action.payload\r\n            : trainingProgress\r\n        ),\r\n        trainingProgress: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAININGPROGRESS_HISTORY:\r\n      return { ...state, extTrainingProgress: action.payload };\r\n\r\n    case FETCH_TRAININGPROGRESS_HISTORY:\r\n      return { ...state, trainingProgresses: action.payload };\r\n\r\n    case FETCH_UPCOMING_TRAININGPROGRESS:\r\n      return { ...state, upcomingTrainingProgress: action.payload };\r\n\r\n    case FETCH_TODAY_TRAININGPROGRESS:\r\n      return { ...state, trainingProgresses: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_POLICY,\r\n  FETCH_ALL_POLICY,\r\n  FETCH_ONE_POLICY,\r\n  UPDATE_POLICY,\r\n  POLICY_END_LOADING,\r\n  POLICY_ERROR,\r\n  POLICY_START_LOADING,\r\n  POLICY_SUCCESS,\r\n  FETCH_POLICY_BY_DEPT,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, policies: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case POLICY_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case POLICY_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case POLICY_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case POLICY_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n\r\n    case UPDATE_POLICY:\r\n      return {\r\n        ...state,\r\n        policies: state.policies.map((policy) =>\r\n          policy._id === action.payload._id ? action.payload : policy\r\n        ),\r\n      };\r\n    case FETCH_ONE_POLICY:\r\n      return { ...state, policy: action.payload };\r\n    case FETCH_ALL_POLICY:\r\n    case FETCH_POLICY_BY_DEPT:\r\n      return { ...state, policies: action.payload };\r\n    case CREATE_POLICY:\r\n      return { ...state, policies: [...state.policies, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CLEAR_NOTIFICATION_BY_TYPE,\r\n  FETCH_ALL_NOTIFICATION,\r\n  NOTIFICATION_END_LOADING,\r\n  NOTIFICATION_ERROR,\r\n  NOTIFICATION_START_LOADING,\r\n  NOTIFICATION_SUCCESS,\r\n  SET_NOTIFICATION_READ,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\nexport default (\r\n  state = { error: null, isLoading: true, notifications: [], success: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case NOTIFICATION_START_LOADING:\r\n      return { ...state, isLoading: true, error: null, success: null };\r\n    case NOTIFICATION_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case NOTIFICATION_ERROR: {\r\n      return {\r\n        ...state,\r\n        error: handleError(action.error) || '',\r\n        isLoading: false,\r\n      };\r\n    }\r\n    case NOTIFICATION_SUCCESS: {\r\n      return { ...state, success: action.payload.success };\r\n    }\r\n\r\n    case FETCH_ALL_NOTIFICATION:\r\n      return { ...state, notifications: action.payload };\r\n    case CLEAR_NOTIFICATION_BY_TYPE:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.filter(\r\n          (noti) => noti.content.type != action.payload.type\r\n        ),\r\n      };\r\n    case SET_NOTIFICATION_READ:\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map((noti) =>\r\n          noti._id == action.payload._id ? { ...noti, read: true } : noti\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { ConfigProvider } from 'antd';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport { reducers } from './reducers';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\n///uncomment to reset store data\r\n//persistor.purge();\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <ConfigProvider locale={enUSIntl}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ConfigProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}