{
  "version": 3,
  "sources": [
    "constants/actionTypes.js",
    "components/HeaderDropdown/index.js",
    "components/GlobalHeader/AvatarDropdown.js",
    "components/NoticeIcon/NoticeList.js",
    "components/NoticeIcon/index.js",
    "api/index.js",
    "actions/error.js",
    "actions/leaves.js",
    "actions/training.js",
    "components/PageLoading/PageLoading.js",
    "components/Home/Home.js",
    "components/LeaveHome/LeaveHome.js",
    "_defaultProps.js",
    "_supervisorProps.js",
    "_adminProps.js",
    "components/backup/NoticeIcon/NoticeList.js",
    "components/backup/HeaderDropdown/HeaderDropdown.js",
    "components/backup/NoticeIcon/NoticeIcon.js",
    "components/backup/NoticeIcon/index.js",
    "components/Navbar/Navbar.js",
    "actions/auth.js",
    "components/Auth/Auth.js",
    "actions/leaveTypes.js",
    "components/LeaveForm/LeaveForm.js",
    "actions/users.js",
    "components/LeaveDetail/LeaveDetail.js",
    "actions/depts.js",
    "components/LeaveList/LeaveList.js",
    "components/LeaveHistory/LeaveHistory.js",
    "actions/roles.js",
    "actions/policy.js",
    "components/StaffForm/StaffForm.js",
    "components/DeptHome/DeptHome.js",
    "components/DeptForm/DeptForm.js",
    "components/StaffHome/StaffHome.js",
    "components/StaffDetails/StaffDetail.js",
    "components/LeaveTypeForm/LeaveTypeForm.js",
    "components/LeaveTypeHome/LeaveTypeHome.js",
    "components/RoleHome/RoleHome.js",
    "constants/permissions.js",
    "components/RoleForm/RoleForm.js",
    "components/Profile/Profile.js",
    "components/Calendar/events-utils.js",
    "components/Calendar/Calendar.js",
    "PrivateRoute.js",
    "components/Test2/Test2.js",
    "PublicRoute.js",
    "components/Test/Test.js",
    "components/ResetPasswordForm/ResetPasswordForm.js",
    "components/HolidayHome/HolidayHome.js",
    "actions/holidays.js",
    "components/HolidayForm/HolidayForm.js",
    "components/TrainingHome/TrainingHome.js",
    "components/TrainingForm/TrainingForm.js",
    "components/TrainingList/TrainingList.js",
    "components/TrainingDetails/TrainingDetails.js",
    "components/ExtTrainingForm/ExtTrainingForm.js",
    "components/ExtTrainingList/ExtTrainingList.js",
    "components/TrainingHistory/TrainingHistory.js",
    "components/AdminHome/AdminHome.js",
    "components/SupervisorHome/SupervisorHome.js",
    "components/LeavePolicyForm/LeavePolicyForm.js",
    "components/LeavePolicyHome/LeavePolicyHome.js",
    "components/Error/Error404.js",
    "App.js",
    "reducers/auth.js",
    "reducers/index.js",
    "reducers/leaves.js",
    "reducers/depts.js",
    "reducers/users.js",
    "reducers/leaveTypes.js",
    "reducers/roles.js",
    "reducers/holidays.js",
    "reducers/training.js",
    "reducers/trainingRequest.js",
    "reducers/policy.js",
    "serviceWorkerRegistration.js",
    "reportWebVitals.js",
    "index.js"
  ],
  "names": [
    "CREATE_LEAVE",
    "UPDATE_LEAVE",
    "FETCH_ALL_LEAVE",
    "FETCH_ONE_LEAVE",
    "FETCH_LEAVE_BY_DATERANGE",
    "LEAVE_START_LOADING",
    "LEAVE_END_LOADING",
    "LEAVE_ERROR",
    "FETCH_LEAVE_REQUESTS",
    "FETCH_UPCOMING_LEAVE",
    "FETCH_LEAVE_HISTORY",
    "FETCH_TODAY_LEAVE",
    "AUTH",
    "LOGOUT",
    "AUTH_START_LOADING",
    "AUTH_END_LOADING",
    "AUTH_ERROR",
    "CREATE_USER",
    "UPDATE_USER",
    "FETCH_ALL_USER",
    "FETCH_ONE_USER",
    "USER_START_LOADING",
    "USER_END_LOADING",
    "USER_ERROR",
    "FETCH_DEPT_USER",
    "CREATE_DEPT",
    "UPDATE_DEPT",
    "DELETE_DEPT",
    "FETCH_ALL_DEPT",
    "DEPT_START_LOADING",
    "DEPT_END_LOADING",
    "DEPT_ERROR",
    "CREATE_LEAVETYPE",
    "UPDATE_LEAVETYPE",
    "FETCH_ALL_LEAVETYPE",
    "FETCH_ONE_LEAVETYPE",
    "LEAVETYPE_START_LOADING",
    "LEAVETYPE_END_LOADING",
    "LEAVETYPE_ERROR",
    "FETCH_LEAVE_COUNT",
    "CREATE_ROLE",
    "UPDATE_ROLE",
    "FETCH_ALL_ROLE",
    "FETCH_ONE_ROLE",
    "ROLE_START_LOADING",
    "ROLE_END_LOADING",
    "ROLE_ERROR",
    "CREATE_HOLIDAY",
    "UPDATE_HOLIDAY",
    "DELETE_HOLIDAY",
    "FETCH_ALL_HOLIDAY",
    "HOLIDAY_START_LOADING",
    "HOLIDAY_END_LOADING",
    "HOLIDAY_ERROR",
    "FETCH_HOLIDAY_BY_YEAR",
    "CREATE_TRAINING",
    "FETCH_ALL_TRAINING",
    "FETCH_ONE_TRAINING",
    "TRAINING_START_LOADING",
    "TRAINING_END_LOADING",
    "TRAINING_ERROR",
    "UPDATE_TRAINING",
    "LEAVE_TRAINING",
    "FETCH_EXT_TRAINING",
    "UPDATE_TRAINING_STATUS",
    "FETCH_EXT_TRAINING_HISTORY",
    "FETCH_TRAINING_HISTORY",
    "FETCH_UPCOMING_TRAINING",
    "FETCH_TODAY_TRAINING",
    "FETCH_TRAINING_COUNT",
    "CREATE_POLICY",
    "UPDATE_POLICY",
    "FETCH_ALL_POLICY",
    "FETCH_ONE_POLICY",
    "POLICY_START_LOADING",
    "POLICY_END_LOADING",
    "POLICY_ERROR",
    "HeaderDropdown",
    "cls",
    "overlayClassName",
    "restProps",
    "classNames",
    "styles",
    "container",
    "AvatarDropdown",
    "user",
    "dispatch",
    "useDispatch",
    "navigate",
    "useNavigate",
    "menuHeaderDropdown",
    "useLocation",
    "className",
    "menu",
    "Item",
    "to",
    "onClick",
    "type",
    "LogoutOutlined",
    "overlay",
    "action",
    "account",
    "size",
    "avatar",
    "src",
    "alt",
    "name",
    "first_name",
    "last_name",
    "NoticeList",
    "data",
    "onClear",
    "title",
    "onViewMore",
    "emptyText",
    "showClear",
    "clearText",
    "viewMoreText",
    "showViewMore",
    "length",
    "list",
    "dataSource",
    "renderItem",
    "item",
    "i",
    "itemCls",
    "read",
    "leftIcon",
    "iconElement",
    "Meta",
    "meta",
    "extra",
    "description",
    "datetime",
    "key",
    "bottomBar",
    "e",
    "notFound",
    "TabPane",
    "Tabs",
    "NoticeIcon",
    "props",
    "count",
    "bell",
    "useMergedState",
    "value",
    "popupVisible",
    "onChange",
    "onPopupVisibleChange",
    "visible",
    "setVisible",
    "noticeButtonClass",
    "noticeButton",
    "notificationBox",
    "children",
    "loading",
    "onTabChange",
    "onItemClick",
    "panes",
    "React",
    "Children",
    "forEach",
    "child",
    "tabKey",
    "len",
    "msgCount",
    "tabTitle",
    "push",
    "tab",
    "event",
    "spinning",
    "delay",
    "tabs",
    "getNotificationBox",
    "NoticeBellIcon",
    "BellOutlined",
    "icon",
    "trigger",
    "opened",
    "style",
    "boxShadow",
    "badge",
    "placement",
    "popover",
    "onVisibleChange",
    "defaultProps",
    "emptyImage",
    "Tab",
    "API",
    "axios",
    "create",
    "baseURL",
    "interceptors",
    "request",
    "use",
    "req",
    "localStorage",
    "getItem",
    "headers",
    "authorization",
    "JSON",
    "parse",
    "token",
    "fetchLeaveById",
    "id",
    "get",
    "fetchLeaveByDateRange",
    "dateRange",
    "post",
    "updateLeave",
    "updatedLeave",
    "patch",
    "fetchLeaveRequests",
    "role",
    "department",
    "fetchUpcomingLeaves",
    "fetchLeaveHistory",
    "signIn",
    "formData",
    "resetPassword",
    "email",
    "createUser",
    "getUser",
    "updateUser",
    "updatedUser",
    "fetchDeptUsers",
    "createLeaveType",
    "getLeaveType",
    "updateLeaveType",
    "updatedLeaveType",
    "getRole",
    "updateRole",
    "updatedRole",
    "fetchHolidaysByYear",
    "year",
    "createHoliday",
    "fetchTrainingById",
    "updateTraining",
    "updatedTraining",
    "leaveTraining",
    "fetchExtTraining",
    "updateTrainingStatus",
    "fetchExtTrainingHistory",
    "fetchTrainingHistory",
    "fetchUpcomingTraining",
    "getPolicy",
    "updatePolicy",
    "updatedPolicy",
    "handleError",
    "error",
    "payloadtype",
    "a",
    "response",
    "message",
    "toString",
    "fetchAllLeaves",
    "payload",
    "console",
    "log",
    "api",
    "leave",
    "fetchTodayLeaves",
    "createTraining",
    "training",
    "newTraining",
    "PageLoading",
    "paddingTop",
    "paddingBottom",
    "textAlign",
    "tip",
    "Home",
    "result",
    "useSelector",
    "state",
    "leaves",
    "isLoading",
    "todayLeaves",
    "trainings",
    "pass2MonthC",
    "pass2MonthM",
    "pass1MonthC",
    "pass1MonthM",
    "currentMonthC",
    "currentMonthM",
    "next1MonthC",
    "next1MonthM",
    "next2MonthC",
    "next2MonthM",
    "next3MonthC",
    "next3MonthM",
    "max",
    "useEffect",
    "leaveData",
    "leaveCount",
    "casual",
    "medical",
    "trainingNeeded",
    "totalTraining",
    "trainingData",
    "map",
    "element",
    "d",
    "Date",
    "fromDate",
    "status",
    "leaveType",
    "getMonth",
    "moment",
    "subtract",
    "month",
    "Math",
    "add",
    "format",
    "COLORS1",
    "COLORS2",
    "Title",
    "level",
    "gutter",
    "xs",
    "sm",
    "md",
    "lg",
    "bordered",
    "column",
    "label",
    "span",
    "ResponsiveContainer",
    "minHeight",
    "BarChart",
    "margin",
    "top",
    "right",
    "left",
    "bottom",
    "Bar",
    "fill",
    "dataKey",
    "entry",
    "index",
    "Cell",
    "YAxis",
    "XAxis",
    "Tooltip",
    "minWidth",
    "PieChart",
    "Pie",
    "innerRadius",
    "outerRadius",
    "paddingAngle",
    "startAngle",
    "isAnimationActive",
    "x",
    "y",
    "textAnchor",
    "alignmentBaseline",
    "labelLine",
    "Legend",
    "rowKey",
    "Column",
    "dataIndex",
    "render",
    "text",
    "record",
    "color",
    "_id",
    "Text",
    "Typography",
    "LeaveHome",
    "useState",
    "upcomingLeave",
    "COLORS",
    "roles",
    "ellipsis",
    "route",
    "path",
    "routes",
    "UserOutlined",
    "exact",
    "ScheduleOutlined",
    "SolutionOutlined",
    "HomeOutlined",
    "UnorderedListOutlined",
    "HistoryOutlined",
    "FormOutlined",
    "location",
    "pathname",
    "BarChartOutlined",
    "ApartmentOutlined",
    "CalendarOutlined",
    "ExclamationCircleOutlined",
    "LaptopOutlined",
    "UsergroupAddOutlined",
    "centered",
    "NoticeIconView",
    "notices",
    "setNotices",
    "clickClose",
    "noticeData",
    "Array",
    "isArray",
    "newNotices",
    "notice",
    "newNotice",
    "fromNow",
    "todo",
    "processing",
    "urgent",
    "doing",
    "marginRight",
    "groupBy",
    "getNoticeData",
    "unreadMsg",
    "Object",
    "keys",
    "filter",
    "getUnreadData",
    "success",
    "clearReadState",
    "info",
    "clearClose",
    "notification",
    "Auth",
    "padding",
    "labelCol",
    "wrapperCol",
    "initialValues",
    "password",
    "onFinish",
    "values",
    "onFinishFailed",
    "errorInfo",
    "autoComplete",
    "rules",
    "required",
    "autoFocus",
    "Password",
    "offset",
    "htmlType",
    "getLeaveTypes",
    "TextArea",
    "Input",
    "RangePicker",
    "DatePicker",
    "Option",
    "Select",
    "LeaveForm",
    "useParams",
    "leaveTypes",
    "Form",
    "useForm",
    "form",
    "setError",
    "then",
    "setFieldsValue",
    "toDate",
    "remember",
    "FormData",
    "upload",
    "file",
    "originFileObj",
    "append",
    "rangeValue",
    "startDate",
    "endDate",
    "remainLeave",
    "dateDiff",
    "day",
    "workingDays",
    "isSameOrBefore",
    "includes",
    "calcWorkingDays",
    "reason",
    "entries",
    "newLeave",
    "createLeave",
    "code",
    "rows",
    "valuePropName",
    "getValueFromEvent",
    "fileList",
    "Dragger",
    "listType",
    "beforeUpload",
    "customRequest",
    "onSuccess",
    "setTimeout",
    "defaultFileList",
    "attachments",
    "uid",
    "fileId",
    "fileName",
    "url",
    "filePath",
    "showUploadList",
    "showDownloadIcon",
    "downloadIcon",
    "DownloadOutlined",
    "showRemoveIcon",
    "removeIcon",
    "DeleteOutlined",
    "UploadOutlined",
    "getUsers",
    "LeaveDetail",
    "leaveIsloading",
    "setIsloading",
    "setStatus",
    "minDate",
    "duration",
    "diff",
    "asDays",
    "xxl",
    "xl",
    "danger",
    "getDepts",
    "LeaveList",
    "depts",
    "deptFilters",
    "typeFilter",
    "columns",
    "valueType",
    "filters",
    "onFilter",
    "indexOf",
    "hideInSearch",
    "sorter",
    "b",
    "hideInTable",
    "search",
    "transform",
    "startTime",
    "endTime",
    "actionRef",
    "useRef",
    "locale",
    "enUSIntl",
    "params",
    "reverse",
    "every",
    "val",
    "RegExp",
    "Promise",
    "resolve",
    "pagination",
    "pageSize",
    "showQuickJumper",
    "layout",
    "defaultCollapsed",
    "dateFormatter",
    "toolbar",
    "tooltip",
    "toolBarRender",
    "LeaveHistory",
    "marginBottom",
    "some",
    "getRoles",
    "StaffForm",
    "emp_id",
    "employment_date",
    "policy",
    "initialValue",
    "placeholder",
    "stacked",
    "today",
    "employmentDate",
    "totalYears",
    "totalIncrease",
    "policyAfter",
    "p",
    "condition1",
    "policyEvery",
    "highestAfter",
    "increase",
    "dept",
    "Table",
    "DeptHome",
    "DeptForm",
    "newDept",
    "useBreakpoint",
    "Grid",
    "StaffHome",
    "users",
    "screens",
    "itemLayout",
    "actions",
    "StaffDetail",
    "LeaveTypeForm",
    "setLoading",
    "colorState",
    "setColorState",
    "onValuesChange",
    "changedFields",
    "allFields",
    "formKey",
    "submitter",
    "resetButtonProps",
    "display",
    "doms",
    "width",
    "LeaveTypeHome",
    "RoleHome",
    "LEAVE_VIEW_ALL",
    "LEAVE_APPROVE",
    "ROLES_ASSIGN",
    "PERMISSIONS",
    "modules",
    "permissions",
    "RoleForm",
    "fields",
    "module",
    "lists",
    "concat",
    "createRole",
    "options",
    "permission",
    "Group",
    "defaultValue",
    "Profile",
    "imageUrl",
    "imageState",
    "setFileList",
    "reader",
    "FileReader",
    "readAsDataURL",
    "onload",
    "onPreview",
    "image",
    "Image",
    "window",
    "open",
    "document",
    "write",
    "outerHTML",
    "LoadingOutlined",
    "PlusOutlined",
    "ImageCrop",
    "rotate",
    "fontSize",
    "eventGuid",
    "todayStr",
    "toISOString",
    "replace",
    "date1",
    "date2",
    "createEventId",
    "String",
    "Calendar",
    "c",
    "createRef",
    "setDateRange",
    "current",
    "getApi",
    "changeView",
    "handleEventsss",
    "start",
    "end",
    "ref",
    "plugins",
    "dayGridPlugin",
    "timeGridPlugin",
    "interactionPlugin",
    "listPlugin",
    "headerToolbar",
    "center",
    "initialView",
    "dayMaxEvents",
    "weekends",
    "businessHours",
    "daysOfWeek",
    "events",
    "eventContent",
    "eventInfo",
    "timeText",
    "extendedProps",
    "eventClick",
    "clickInfo",
    "PrivateRoute",
    "requiredPermissions",
    "matchAllPermissions",
    "hasAccess",
    "ai",
    "PublicRoute",
    "Test",
    "Notification",
    "requestPermission",
    "alert",
    "notifyMe",
    "ResetPasswordForm",
    "submitted",
    "setSubmitted",
    "HolidayHome",
    "socket",
    "holidays",
    "setYear",
    "date",
    "dateStr",
    "picker",
    "emit",
    "senderName",
    "receiverName",
    "content",
    "holiday",
    "decription",
    "sorterA",
    "isNaN",
    "localeCompare",
    "valueEnum",
    "tableListDataSource",
    "creators",
    "containers",
    "floor",
    "random",
    "creator",
    "createdAt",
    "now",
    "money",
    "progress",
    "ceil",
    "memo",
    "QuestionCircleOutlined",
    "columns2",
    "EllipsisOutlined",
    "TrainingHome",
    "upcomingTraining",
    "trainingType",
    "organization",
    "TrainingForm",
    "timeRange",
    "organizer",
    "fromTime",
    "toTime",
    "as",
    "disabledDate",
    "endOf",
    "minuteStep",
    "Modal",
    "onOk",
    "TrainingList",
    "calcAttendance",
    "utc",
    "asMilliseconds",
    "attendants",
    "TrainingDetails",
    "joinTraining",
    "user_id",
    "cancelAttendance",
    "setAttendanceStatus",
    "attendant_id",
    "newStatus",
    "updatedAttendant",
    "attendant",
    "split",
    "StarOutlined",
    "ExtTrainingForm",
    "time",
    "min",
    "ExtTrainingList",
    "TrainingHistory",
    "extTrainings",
    "columns1",
    "trainingCount",
    "responsive",
    "setResponsive",
    "Divider",
    "StatisticCard",
    "slice",
    "empLeaveData",
    "Casual",
    "Medical",
    "onResize",
    "direction",
    "statistic",
    "precision",
    "suffix",
    "chart",
    "LineChart",
    "height",
    "domain",
    "allowDecimals",
    "wrapperStyle",
    "Line",
    "stroke",
    "activeDot",
    "r",
    "defaultSortOrder",
    "deptId",
    "isModalVisible",
    "setIsModalVisible",
    "filterDept",
    "top3Users",
    "supervisorNames",
    "footer",
    "contentStyle",
    "wordBreak",
    "mark",
    "LeavePolicy",
    "onFieldsChange",
    "align",
    "InfoCircleOutlined",
    "showIcon",
    "List",
    "remove",
    "fieldKey",
    "restField",
    "flexWrap",
    "allowClear",
    "MinusCircleOutlined",
    "block",
    "policies",
    "t",
    "Error404",
    "subTitle",
    "Content",
    "Layout",
    "Header",
    "Footer",
    "Sider",
    "App",
    "fixSiderbar",
    "navTheme",
    "primaryColor",
    "contentWidth",
    "splitMenus",
    "settings",
    "setPathname",
    "setSocket",
    "authData",
    "auth",
    "temp",
    "jwtDecode",
    "exp",
    "getTime",
    "io",
    "on",
    "CheckCircleOutlined",
    "supervisorProps",
    "adminProps",
    "logo",
    "preview",
    "menuFooterRender",
    "menuRender",
    "defaultDom",
    "onMenuHeaderClick",
    "menuItemRender",
    "dom",
    "rightContentRender",
    "SupervisorHome",
    "AdminHome",
    "Test2",
    "LeavePolicyHome",
    "LeavePolicyForm",
    "authReducer",
    "setItem",
    "stringify",
    "clear",
    "appReducers",
    "combineReducers",
    "calendar",
    "calLeaves",
    "allDay",
    "calHolidays",
    "trainingRequest",
    "Boolean",
    "hostname",
    "match",
    "persistConfig",
    "storage",
    "persistedReducer",
    "persistReducer",
    "undefined",
    "store",
    "createStore",
    "composeWithDevTools",
    "applyMiddleware",
    "thunk",
    "persistor",
    "persistStore",
    "ReactDOM",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "catch"
  ],
  "mappings": "2UAAaA,EAAe,eACfC,EAAe,eAEfC,EAAkB,kBAClBC,EAAkB,kBAClBC,EAA2B,2BAC3BC,EAAsB,sBACtBC,EAAoB,oBACpBC,EAAc,cACdC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAsB,sBACtBC,EAAoB,oBAEpBC,EAAO,OACPC,EAAS,SACTC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAa,aAEbC,EAAc,cACdC,EAAc,cAEdC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAqB,qBACrBC,EAAmB,mBACnBC,EAAa,aACbC,EAAkB,kBAElBC,GAAc,cACdC,GAAc,cACdC,GAAc,cACdC,GAAiB,iBAEjBC,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAa,aAEbC,GAAmB,mBACnBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAA0B,0BAC1BC,GAAwB,wBACxBC,GAAkB,cAClBC,GAAoB,oBAEpBC,GAAc,cACdC,GAAc,cAEdC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAqB,qBACrBC,GAAmB,mBACnBC,GAAa,aAEbC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAiB,iBACjBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAsB,sBACtBC,GAAgB,gBAChBC,GAAwB,wBAExBC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAyB,yBACzBC,GAAuB,uBACvBC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAiB,iBACjBC,GAAqB,qBACrBC,GAAyB,yBACzBC,GAA6B,6BAC7BC,GAAyB,yBACzBC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAuB,uBAkBvBC,GAAgB,gBAChBC,GAAgB,gBAEhBC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAuB,uBACvBC,GAAqB,qBACrBC,GAAe,e,4FClGbC,GAJQ,SAAC,GAAD,IAAqBC,EAArB,EAAGC,iBAA0BC,EAA7B,0BACrB,eAAC,KAAD,aAAUD,iBAAkBE,KAAWC,KAAOC,UAAWL,IAAUE,K,qBCwDtDI,GAjDQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClBC,EAAWC,cACXC,EAAWC,cAiBXC,GAhBWC,cAiBf,gBAAC,IAAD,CAAMC,UAAWV,KAAOW,KAAxB,UACE,eAAC,IAAKC,KAAN,UACE,eAAC,IAAD,CAAMC,GAAG,WAAT,sBADa,WAGf,gBAAC,IAAKD,KAAN,CAAwBE,QApBb,WACbV,EAAS,CAAEW,KAAMpF,IAEjB2E,EAAS,UAiBP,UACE,eAACU,EAAA,EAAD,IADF,WAAe,cAMnB,OAAOb,EACL,eAAC,GAAD,CAAgBc,QAAST,EAAzB,SACE,wBAAME,UAAS,UAAKV,KAAOkB,OAAZ,YAAsBlB,KAAOmB,SAA5C,UACE,eAAC,IAAD,CACEC,KAAK,QACLV,UAAWV,KAAOqB,OAClBC,IAAI,sEACJC,IAAI,WAEN,uBACEb,UAAS,UAAKV,KAAOwB,KAAZ,YADX,mBAEKrB,EAAKsB,WAFV,YAEwBtB,EAAKuB,kBAIjC,eAAC,IAAD,CAAMb,GAAG,QAAT,oB,sKCsCWc,GA3FI,SAAC,GAWb,IAAD,IAVJC,YAUI,MAVG,GAUH,EATJd,EASI,EATJA,QACAe,EAQI,EARJA,QACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,WACAC,EAKI,EALJA,UAKI,IAJJC,iBAII,SAHJC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aAEI,IADJC,oBACI,SACJ,OAAKR,GAAwB,IAAhBA,EAAKS,OAahB,iCACE,eAAC,KAAD,CACE3B,UAAWV,KAAOsC,KAClBC,WAAYX,EACZY,WAAY,SAACC,EAAMC,GACjB,IAAMC,EAAU5C,KAAWC,KAAOyC,KAAR,gBACvBzC,KAAO4C,KAAOH,EAAKG,OAGhBC,EAAWJ,EAAKpB,OACG,kBAAhBoB,EAAKpB,OACV,eAAC,IAAD,CAAQX,UAAWV,KAAOqB,OAAQC,IAAKmB,EAAKpB,SAE5C,uBAAMX,UAAWV,KAAO8C,YAAxB,SAAsCL,EAAKpB,SAE3C,KACJ,OACE,eAAC,KAAKT,KAAN,CACEF,UAAWiC,EAEX7B,QAAS,WACA,OAAPA,QAAO,IAAPA,KAAU2B,IAJd,SAOE,eAAC,KAAK7B,KAAKmC,KAAX,CACErC,UAAWV,KAAOgD,KAClB3B,OAAQwB,EACRf,MACE,uBAAKpB,UAAWV,KAAO8B,MAAvB,UACGW,EAAKX,MACN,sBAAKpB,UAAWV,KAAOiD,MAAvB,SAA+BR,EAAKQ,WAGxCC,YACE,iCACE,sBAAKxC,UAAWV,KAAOkD,YAAvB,SAAqCT,EAAKS,cAC1C,sBAAKxC,UAAWV,KAAOmD,SAAvB,SAAkCV,EAAKU,iBAjBxCV,EAAKW,KAAOV,MAyBzB,uBAAKhC,UAAWV,KAAOqD,UAAvB,UACGpB,EACC,uBAAKnB,QAASe,EAAd,UACGK,EADH,IACeJ,KAEb,KACHM,EACC,sBACEtB,QAAS,SAACwC,GACJvB,GACFA,EAAWuB,IAHjB,SAOGnB,IAED,WAvEN,uBAAKzB,UAAWV,KAAOuD,SAAvB,UACE,sBACEjC,IAAI,sEACJC,IAAI,cAEN,+BAAMS,Q,qBCfNwB,GAAYC,KAAZD,QAEFE,GAAa,SAACC,GAClB,IA0DQjD,EAA2BiD,EAA3BjD,UAAWkD,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAC1B,EAA8BC,cAAe,EAAO,CAClDC,MAAOJ,EAAMK,aACbC,SAAUN,EAAMO,uBAFlB,mBAAOC,EAAP,KAAgBC,EAAhB,KAIMC,EAAoBtE,KAAWW,EAAWV,KAAOsE,cACjDC,EAhEqB,WACzB,IACEC,EAQEb,EARFa,SACAC,EAOEd,EAPFc,QACA5C,EAME8B,EANF9B,QACA6C,EAKEf,EALFe,YACAC,EAIEhB,EAJFgB,YACA5C,EAGE4B,EAHF5B,WACAG,EAEEyB,EAFFzB,UACAC,EACEwB,EADFxB,aAGF,IAAKqC,EACH,OAAO,KAGT,IAAMI,EAAQ,GAiCd,OAhCAC,IAAMC,SAASC,QAAQP,GAAU,SAACQ,GAChC,GAAKA,EAAL,CAIA,MAAgEA,EAAMrB,MAA9DrB,EAAR,EAAQA,KAAMR,EAAd,EAAcA,MAAO8B,EAArB,EAAqBA,MAAOqB,EAA5B,EAA4BA,OAAQhD,EAApC,EAAoCA,UAAWG,EAA/C,EAA+CA,aACzC8C,EAAM5C,GAAQA,EAAKD,OAASC,EAAKD,OAAS,EAC1C8C,EAAWvB,GAAmB,IAAVA,EAAcA,EAAQsB,EAC1CE,EAAWD,EAAW,EAAX,UAAkBrD,EAAlB,aAA4BqD,EAA5B,KAA0CrD,EAC3D8C,EAAMS,KACJ,eAAC7B,GAAD,CAAS8B,IAAKF,EAAd,SACE,eAAC,GAAD,2BACMJ,EAAMrB,OADZ,IAEEzB,UAAWA,EACXC,aAAcA,EACdP,KAAMU,EACNT,QAAS,WACA,OAAPA,QAAO,IAAPA,KAAUC,EAAOmD,IAEnBnE,QAAS,SAAC2B,GACG,OAAXkC,QAAW,IAAXA,KAAclC,EAAMuC,EAAMrB,QAE5B5B,WAAY,SAACwD,GACD,OAAVxD,QAAU,IAAVA,KAAaiD,EAAMrB,MAAO4B,IAE5BtD,UAAWA,EACXG,aAAcA,EACdN,MAAOA,MAjBkBmD,QAuB/B,eAAC,KAAD,CAAMO,SAAUf,EAASgB,MAAO,IAAhC,SACE,eAAC,KAAD,CAAM/E,UAAWV,KAAO0F,KAAMzB,SAAUS,EAAxC,SACGE,MAYee,GAClBC,EAAiB/B,GAAQ,eAACgC,GAAA,EAAD,CAAcnF,UAAWV,KAAO8F,OACzDC,EACJ,uBACErF,UAAWX,KAAWsE,EAAmB,CACvC2B,OAAQ7B,IAFZ,SAKE,eAAC,KAAD,CACEP,MAAOA,EACPqC,MAAO,CACLC,UAAW,QAEbxF,UAAWV,KAAOmG,MALpB,SAOGP,MAKP,OAAKrB,EAKH,eAAC,GAAD,CACE6B,UAAU,cACVnF,QAASsD,EACT1E,iBAAkBG,KAAOqG,QACzBN,QAAS,CAAC,SACV5B,QAASA,EACTmC,gBAAiBlC,EANnB,SAQG2B,IAZIA,GAiBXrC,GAAW6C,aAAe,CACxBC,WAAY,uEAEd9C,GAAW+C,IAAM9E,GACF+B,I,uNCnHTgD,G,QAAMC,EAAMC,OAAO,CAAEC,QAAS,mCACpCH,GAAII,aAAaC,QAAQC,KAAI,SAACC,GAO5B,OANIC,aAAaC,QAAQ,aACvBF,EAAIG,QAAQC,cAAZ,iBACEC,KAAKC,MAAML,aAAaC,QAAQ,YAAYK,QAIzCP,KAET,IAMaQ,GAAiB,SAACC,GAAD,OAAQhB,GAAIiB,IAAJ,kBAAmBD,KAC5CE,GAAwB,SAACC,GAAD,OACnCnB,GAAIoB,KAAJ,gBAA0BD,IAEfE,GAAc,SAACL,EAAIM,GAAL,OACzBtB,GAAIuB,MAAJ,kBAAqBP,GAAMM,IAChBE,GAAqB,SAACC,EAAMhI,EAAMiI,GAAb,OAChC1B,GAAIiB,IAAJ,kBAAmBQ,EAAnB,YAA2BhI,EAA3B,YAAmCiI,KACxBC,GAAsB,SAACX,GAAD,OAAQhB,GAAIiB,IAAJ,2BAA4BD,KAC1DY,GAAoB,SAACZ,GAAD,OAAQhB,GAAIiB,IAAJ,0BAA2BD,KAIvDa,GAAS,SAACC,GAAD,OAAc9B,GAAIoB,KAAK,gBAAiBU,IAEjDC,GAAgB,SAACC,GAAD,OAAWhC,GAAIoB,KAAK,uBAAwBY,IAO5DC,GAAa,SAACH,GAAD,OAAc9B,GAAIoB,KAAK,SAAUU,IAE9CI,GAAU,SAAClB,GAAD,OAAQhB,GAAIiB,IAAJ,gBAAiBD,KACnCmB,GAAa,SAACnB,EAAIoB,GAAL,OACxBpC,GAAIuB,MAAJ,iBAAoBP,GAAMoB,IACfC,GAAiB,SAACX,GAAD,OAC5B1B,GAAIiB,IAAJ,qBAAsBS,KAEXY,GAAkB,SAACR,GAAD,OAAc9B,GAAIoB,KAAK,cAAeU,IAExDS,GAAe,SAACvB,GAAD,OAAQhB,GAAIiB,IAAJ,sBAAuBD,KAC9CwB,GAAkB,SAACxB,EAAIyB,GAAL,OAC7BzC,GAAIuB,MAAJ,sBAAyBP,GAAMyB,IAIpBC,GAAU,SAAC1B,GAAD,OAAQhB,GAAIiB,IAAJ,iBAAkBD,KACpC2B,GAAa,SAAC3B,EAAI4B,GAAL,OACxB5C,GAAIuB,MAAJ,iBAAoBP,GAAM4B,IAGfC,GAAsB,SAACC,GAAD,OAAU9C,GAAIiB,IAAJ,oBAAqB6B,KACrDC,GAAgB,SAACjB,GAAD,OAAc9B,GAAIoB,KAAK,YAAaU,IAOpDkB,GAAoB,SAAChC,GAAD,OAAQhB,GAAIiB,IAAJ,oBAAqBD,KACjDiC,GAAiB,SAACjC,EAAIkC,GAAL,OAC5BlD,GAAIoB,KAAJ,oBAAsBJ,GAAMkC,IACjBC,GAAgB,SAACnC,EAAIkC,GAAL,OAC3BlD,GAAIuB,MAAJ,oBAAuBP,GAAMkC,IAClBE,GAAmB,SAAC3B,EAAMhI,EAAMiI,GAAb,OAC9B1B,GAAIiB,IAAJ,wBAAyBQ,EAAzB,YAAiChI,EAAjC,YAAyCiI,KAC9B2B,GAAuB,SAACrC,EAAIkC,GAAL,OAClClD,GAAIoB,KAAJ,wBAA0BJ,GAAMkC,IACrBI,GAA0B,SAACtC,GAAD,OACrChB,GAAIiB,IAAJ,gCAAiCD,KACtBuC,GAAuB,SAACvC,GAAD,OAAQhB,GAAIiB,IAAJ,4BAA6BD,KAC5DwC,GAAwB,SAACxC,GAAD,OACnChB,GAAIiB,IAAJ,6BAA8BD,KAMnByC,GAAY,SAACzC,GAAD,OAAQhB,GAAIiB,IAAJ,kBAAmBD,KACvC0C,GAAe,SAAC1C,EAAI2C,GAAL,OAC1B3D,GAAIuB,MAAJ,kBAAqBP,GAAM2C,ICzFhBC,GAAc,SAACC,EAAOC,GAAR,gDAAwB,WAAOpK,GAAP,UAAAqK,EAAA,sDAC7CF,EAAMG,UAERtK,EAAS,CACPW,KAAMyJ,EACND,MAAOA,EAAMG,SAAS9I,KAAK+I,UAE7BA,IAAQJ,MAAMA,EAAMG,SAAS9I,KAAK+I,QAAQC,aACjCL,EAAMxD,SAEf3G,EAAS,CACPW,KAAMyJ,EACND,MAAOA,EAAMxD,UAEf4D,IAAQJ,MAAMA,EAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAMyJ,EACND,MAAOA,EAAMI,UAEfA,IAAQJ,MAAMA,EAAMI,QAAQC,aArBmB,2CAAxB,uDCiBdC,GAAiB,2DAAM,WAAOzK,GAAP,kBAAAqK,EAAA,sEAEhCrK,EAAS,CAAEW,KAAM5F,IAFe,SFDAuL,GAAIiB,IAAI,WECR,gBAGxB/F,EAHwB,EAGxBA,KACRxB,EAAS,CAAEW,KAAM/F,EAAiB8P,QAASlJ,IAC3CxB,EAAS,CAAEW,KAAM3F,IALe,kDAOhCkP,GAAY,EAAD,GAAQjP,GAPa,0DAAN,uDAUjBoM,GAAiB,SAACC,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAElCM,QAAQC,IAAI,QACZ5K,EAAS,CAAEW,KAAM5F,IAHiB,SAIX8P,GAAmBvD,GAJR,uBAI1B9F,EAJ0B,EAI1BA,KACRxB,EAAS,CAAEW,KAAM9F,EAAiB6P,QAASlJ,IAC3CxB,EAAS,CAAEW,KAAM3F,IANiB,kBAQ3BwG,GAR2B,kCAUlC0I,GAAY,EAAD,GAAQjP,GAVe,0DAAR,uDAwBjB0M,GAAc,SAACL,EAAIwD,GAAL,gDAAe,WAAO9K,GAAP,kBAAAqK,EAAA,sEAEtCrK,EAAS,CAAEW,KAAM5F,IAFqB,SAGf8P,GAAgBvD,EAAIwD,GAHL,gBAG9BtJ,EAH8B,EAG9BA,KACRxB,EAAS,CAAEW,KAAMhG,EAAc+P,QAASlJ,IACxCxB,EAAS,CAAEW,KAAM3F,IALqB,kDAOtCkP,GAAY,EAAD,GAAQjP,GAPmB,0DAAf,uDAUduM,GAAwB,SAACC,GAAD,gDAAe,WAAOzH,GAAP,gBAAAqK,EAAA,sEAEhDrK,EAAS,CAAEW,KAAM5F,IAF+B,SAG7B8P,GAA0BpD,GAHG,OAG1CjG,EAH0C,OAIhDmJ,QAAQC,IAAIpJ,GACZxB,EAAS,CAAEW,KAAM7F,EAA0B4P,QAASlJ,IACpDxB,EAAS,CAAEW,KAAM3F,IAN+B,kDAQhDkP,GAAY,EAAD,GAAQjP,GAR6B,0DAAf,uDAWxB6M,GACX,SAACC,EAAMhI,EAAMiI,GAAb,gDAA4B,WAAOhI,GAAP,kBAAAqK,EAAA,sEAExBrK,EAAS,CAAEW,KAAM5F,IAFO,SAGD8P,GAAuB9C,EAAMhI,EAAMiI,GAHlC,gBAGhBxG,EAHgB,EAGhBA,KACRxB,EAAS,CAAEW,KAAMzF,EAAsBwP,QAASlJ,IAChDxB,EAAS,CAAEW,KAAM3F,IALO,kDAOxBkP,GAAY,EAAD,GAAQjP,GAPK,0DAA5B,uDA8BW8P,GAAmB,2DAAM,WAAO/K,GAAP,kBAAAqK,EAAA,sEAElCrK,EAAS,CAAEW,KAAM5F,IAFiB,SF5EAuL,GAAIiB,IAAI,sBE4ER,gBAG1B/F,EAH0B,EAG1BA,KACRxB,EAAS,CAAEW,KAAMtF,EAAmBqP,QAASlJ,IAC7CxB,EAAS,CAAEW,KAAM3F,IALiB,kDAOlCkP,GAAY,EAAD,GAAQjP,GAPe,0DAAN,uDCtBnB+P,GAAiB,SAACC,GAAD,gDAAc,WAAOjL,GAAP,kBAAAqK,EAAA,sEAExCrK,EAAS,CAAEW,KAAMvC,KAFuB,SHhBb8M,EGmBeD,EHlB5C3E,GAAIoB,KAAK,YAAawD,GGeoB,gBAGhC1J,EAHgC,EAGhCA,KACRxB,EAAS,CAAEW,KAAM1C,GAAiByM,QAASlJ,IAC3CxB,EAAS,CAAEW,KAAMtC,KALuB,kDAOpC,KAAMiM,UAERtK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMG,SAAS9I,KAAK+I,UAE7BI,QAAQC,IAAI,KAAMN,SAAS9I,KAAK+I,SAChCI,QAAQC,IAAR,MACAL,IAAQJ,MAAM,KAAMG,SAAS9I,KAAK+I,QAAQC,aACjC,KAAM7D,SAEf3G,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMxD,UAEf4D,IAAQJ,MAAM,KAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMI,UAEfA,IAAQJ,MAAM,KAAMI,QAAQC,aA7BU,kCHhBd,IAACU,IGgBa,qBAAd,uDA4EjBxB,GACX,SAAC3B,EAAMhI,EAAMiI,GAAb,gDAA4B,WAAOhI,GAAP,kBAAAqK,EAAA,sEAExBrK,EAAS,CAAEW,KAAMvC,KAFO,SAGDyM,GAAqB9C,EAAMhI,EAAMiI,GAHhC,gBAGhBxG,EAHgB,EAGhBA,KACRxB,EAAS,CAAEW,KAAMlC,GAAoBiM,QAASlJ,IAC9CxB,EAAS,CAAEW,KAAMtC,KALO,kDAOxB6L,GAAY,EAAD,GAAQ5L,IAPK,0DAA5B,uDAUWqL,GAAuB,SAACrC,EAAI2D,GAAL,gDAAkB,WAAOjL,GAAP,kBAAAqK,EAAA,sEAElDrK,EAAS,CAAEW,KAAMvC,KAFiC,SAG3ByM,GAAyBvD,EAAI2D,GAHF,gBAG1CzJ,EAH0C,EAG1CA,KACRxB,EAAS,CAAEW,KAAMjC,GAAwBgM,QAASlJ,IAClDxB,EAAS,CAAEW,KAAMtC,KALiC,kDAOlD6L,GAAY,EAAD,GAAQ5L,IAP+B,0DAAlB,uD,uGC5JrB6M,I,aAXK,SAAC,GAAe,IAAb5H,EAAY,EAAZA,MACrB,OACE,sBACEsC,MAAO,CAAEuF,WAAY,IAAKC,cAAe,IAAKC,UAAW,UACzDhL,UAAU,qBAFZ,SAIE,eAAC,KAAD,aAAMU,KAAK,QAAQuK,IAAI,cAAiBhI,QC6Y/BiI,GA/WF,WACX,IAAMzL,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACzD,EAA2CC,aACzC,SAACC,GAAD,OAAWA,EAAMC,UADXA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,YAGnBC,EAAcL,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAA3CA,UACF/L,EAAWC,cACb+L,EAAc,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAgB,EAChBC,EAAgB,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAM,EAERC,qBAAU,WACR7M,EAASyK,MACTzK,EAAS+K,MACT/K,EFmJ+B,yCAAM,WAAOA,GAAP,kBAAAqK,EAAA,sEAErCrK,EAAS,CAAEW,KAAMvC,KAFoB,SH9HAkI,GAAIiB,IAAI,wBG8HR,gBAG7B/F,EAH6B,EAG7BA,KACRxB,EAAS,CAAEW,KAAM7B,GAAsB4L,QAASlJ,IAChDxB,EAAS,CAAEW,KAAMtC,KALoB,kDAOrC6L,GAAY,EAAD,GAAQ5L,IAPkB,0DAAN,yDElJ9B,CAAC0B,IAEJ2K,QAAQC,IAAImB,GAEZ,IAAMe,EAAY,CAChB,CAAE1L,KAAM,SAAUuC,MAAO5D,EAAKgN,WAAWC,QACzC,CAAE5L,KAAM,UAAWuC,MAAO5D,EAAKgN,WAAWE,UAMxCC,EAAiBC,EAIfC,EAAe,CAEnB,CAAEhM,KAAM,kBAAmBuC,MAPP,IAQpB,CAAEvC,KAAM,iBAAkBuC,MAL5BuJ,EAAiBA,EAAiB,EAAI,EAAIA,IAQ1CtB,EAAOyB,KAAI,SAACC,GACV,IAAIC,EAAI,IAAIC,KAAKF,EAAQG,UAEL,WAAlBH,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMZ,EAAaY,GAEZ,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMX,EAAaW,GAEZ,WAAlBU,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMV,EAAaU,GAEZ,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMT,EAAaS,GAEZ,WAAlBU,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMR,EAAeQ,GAEd,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMP,EAAeO,GAEd,WAAlBU,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMN,EAAaM,GAEZ,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAML,EAAaK,GAEZ,WAAlBU,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMJ,EAAaI,GAEZ,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMH,EAAaG,GAEZ,WAAlBU,EAAQI,QACa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMF,EAAaE,GAEZ,WAAlBU,EAAQI,QACa,WAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,UAE1CnB,EAAMoB,KAAKpB,MAAMD,EAAaC,OAKxBiB,OAASC,SAAS,EAAG,UAAUI,OAAO,QAKtCL,OAASC,SAAS,EAAG,UAAUI,OAAO,QAKtCL,OAASK,OAAO,QAKhBL,OAASI,IAAI,EAAG,UAAUC,OAAO,QAKjCL,OAASI,IAAI,EAAG,UAAUC,OAAO,QAKjCL,OAASI,IAAI,EAAG,UAAUC,OAAO,QA3B3C,IAiCMC,EAAU,CAAC,UAAW,WACtBC,EAAU,CAAC,UAAW,WAS5B,OAAIvC,GAAcD,GAAWE,GAAgBC,EAI3C,uCACE,eAAC,KAAWsC,MAAZ,CAAkBC,MAAO,EAAzB,gCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAIE,GAAI,GAAhD,SACE,gBAAC,KAAD,CAAMC,UAAQ,EAAd,UACE,gBAAC,KAAD,CACElN,MAAM,kBACNkN,UAAQ,EACRC,OAAQ,CAAEJ,GAAI,EAAGD,GAAI,GAHvB,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,mBACMhP,EAAKsB,WADX,YACyBtB,EAAKuB,aAE9B,eAAC,KAAad,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGhP,EAAKiI,WAAW5G,OAEnB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,gBAAgBC,KAAM,EAA/C,SACGhP,EAAKgN,WAAWC,SAEnB,eAAC,KAAaxM,KAAd,CAAmBsO,MAAM,gCAAgCC,KAAM,EAA/D,SA1JQ,KA6JR,eAAC,KAAavO,KAAd,CAAmBsO,MAAM,iBAAiBC,KAAM,EAAhD,SACGhP,EAAKgN,WAAWE,UAEnB,eAAC,KAAazM,KAAd,CAAmBsO,MAAM,2BAA2BC,KAAM,EAA1D,SA/JU,QAmKZ,wBAcE,eAAC,KAAD,CACExE,QAAQ,iCACRzH,YAAY,qEACZnC,KAAK,iBAWb,eAAC,KAAD,CAAKL,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAIE,GAAI,EAAhD,SACE,gBAAC,KAAD,CAAMC,UAAQ,EAAd,UACE,wDACA,eAACI,GAAA,EAAD,CAAqBC,UAAW,IAAhC,SACE,gBAACC,GAAA,EAAD,CACE1N,KAAMsL,EACNqC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GANZ,UASE,eAACC,GAAA,EAAD,CAAKC,KAAK,UAAUC,QAAQ,QAA5B,SACG5C,EAAUO,KAAI,SAACsC,EAAOC,GAAR,OACb,eAACC,GAAA,EAAD,CAEEJ,KAAMtB,EAAQyB,EAAQzB,EAAQlM,SAFhC,eACe2N,SAKnB,eAACE,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAOL,QAAQ,SACf,eAACM,GAAA,EAAD,SAGJ,sDACA,eAAChB,GAAA,EAAD,CAAqBiB,SAAU,IAAKhB,UAAW,IAA/C,SACE,gBAACiB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACE3O,KAAM4L,EACNgD,YAAa,GACbC,YAAa,GACbZ,KAAK,UACLa,aAAc,EACdC,YAAa,IACbb,QAAQ,QACRc,mBAAmB,EACnB1B,MA1Gc,SAAC,GAAqB,IAAnB2B,EAAkB,EAAlBA,EAAGC,EAAe,EAAfA,EAAG/M,EAAY,EAAZA,MACrC,OACE,uBAAM8M,EAAGA,EAAGC,EAAGA,EAAGjB,KAAK,QAAQkB,WAAW,MAAMC,kBAAkB,OAAlE,SACGjN,KAwGSkN,WAAW,EAVb,SAYGzD,EAAaC,KAAI,SAACsC,EAAOC,GAAR,OAChB,eAACC,GAAA,EAAD,CAEEJ,KAAMrB,EAAQwB,EAAQxB,EAAQnM,SAFhC,eACe2N,SAKnB,eAACI,GAAA,EAAD,IACA,eAACc,GAAA,EAAD,iBAMV,wBACA,eAAC,KAAWzC,MAAZ,CAAkBC,MAAO,EAAzB,iCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,qDACC9C,IACGA,EAAY7J,OAGZ,qCACE,gBAAC,KAAD,CAAOE,WAAY2J,EAAaiF,OAAO,MAAvC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,OACNuP,UAAU,OACVC,OAAQ,SAACC,EAAMC,GACb,MAAM,GAAN,OAAUA,EAAOrR,KAAKsB,WAAtB,YAAoC+P,EAAOrR,KAAKuB,cAGpD,eAAC,KAAM0P,OAAP,CACEtP,MAAM,aACNuP,UAAU,YAEVC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAAC,KAAD,CAAKC,MAAM,MAAX,SAAkBF,MADxC,aAGN,eAAC,KAAMH,OAAP,CACEtP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,sBAAiB2Q,EAAOE,KAAhC,mBADwBF,EAAOE,OAF/B,eAnBV,eAAC,KAAD,KA6BJ,eAAC,KAAD,CAAQ3Q,KAAK,SAAb,SACE,eAAC,IAAD,CAAMF,GAAG,UAAT,qCAIN,eAAC,KAAD,CAAKH,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,2DACC7C,IACGA,EAAU9J,OAGV,qCACE,gBAAC,KAAD,CAAOE,WAAY4J,EAAWgF,OAAO,MAArC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,YACNuP,UAAU,OACVC,OAAQ,SAACC,EAAMC,GACb,MAAM,GAAN,OAAUA,EAAOrR,KAAKsB,WAAtB,YAAoC+P,EAAOrR,KAAKuB,cAGpD,eAAC,KAAM0P,OAAP,CACEtP,MAAM,OACNuP,UAAU,SACN,SAEN,eAAC,KAAMD,OAAP,CACEtP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,wBAAmB2Q,EAAOE,KAAlC,mBADwBF,EAAOE,OAF/B,eAlBV,eAAC,KAAD,KA4BJ,eAAC,KAAD,CAAQ3Q,KAAK,SAAb,SACE,eAAC,IAAD,CAAMF,GAAG,YAAT,6CA/LH,eAAC,GAAD,K,4BC3KH8Q,GAASC,KAATD,KAsJOE,GApJG,WAChB,MAA8BC,oBAAS,GAAvC,mBACA,GADA,UAC6ChG,aAC3C,SAACC,GAAD,OAAWA,EAAMC,WADXA,EAAR,EAAQA,OAAQ+F,EAAhB,EAAgBA,cAAe9F,EAA/B,EAA+BA,UAGzB9L,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAEnDzL,GADWG,cACAF,eACbuD,EAAQ,EAENhC,EAAO,CACX,CAAEJ,KAAM,SAAUuC,MAAO5D,EAAKgN,WAAWC,QACzC,CAAE5L,KAAM,UAAWuC,MAAO5D,EAAKgN,WAAWE,UAEtC2E,EAAS,CAAC,UAAW,WAE3B/E,qBAAU,WJgCuB,IAACvF,EI/BhCtH,GJ+BgCsH,EI/BHvH,EAAKuR,IJ+BH,yCAAQ,WAAOtR,GAAP,kBAAAqK,EAAA,sEAEvCrK,EAAS,CAAEW,KAAM5F,IAFsB,SAGhB8P,GAAwBvD,GAHR,gBAG/B9F,EAH+B,EAG/BA,KACRxB,EAAS,CAAEW,KAAMxF,EAAsBuP,QAASlJ,IAChDxB,EAAS,CAAEW,KAAM3F,IALsB,kDAOvCkP,GAAY,EAAD,GAAQjP,GAPoB,0DAAR,wDI9BR,SAAnB8E,EAAK8R,MAAMzQ,MACbpB,EACE8H,GAAmB/H,EAAK8R,MAAMzQ,KAAMrB,EAAKuR,IAAKvR,EAAKiI,WAAW5G,OAGlEuJ,QAAQC,IAAI7K,KACX,CAACC,IAxBkB,qBA0BF4L,GA1BE,IA0BtB,2BAA4B,CACJ,WADI,QACd8B,QAAqBlK,KA3Bb,8BA8BtB,OAAIqI,EAAkB,eAAC,GAAD,IAEpB,uCACE,eAAC,KAAWwC,MAAZ,CAAkBC,MAAO,EAAzB,kCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAhD,SACE,eAAC,KAAD,CAAMC,UAAQ,EAAd,SACE,gBAAC,KAAD,CACElN,MAAM,kBACNkN,UAAQ,EACRC,OAAQ,CAAEJ,GAAI,EAAGD,GAAI,GAHvB,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,mBACMhP,EAAKsB,WADX,YACyBtB,EAAKuB,aAE9B,eAAC,KAAad,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGhP,EAAKiI,WAAW5G,OAEnB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,gBAAgBC,KAAM,EAA/C,SACGhP,EAAKgN,WAAWC,SAEnB,eAAC,KAAaxM,KAAd,CAAmBsO,MAAM,iBAAiBC,KAAM,EAAhD,SACGhP,EAAKgN,WAAWE,iBAKzB,eAAC,KAAD,CAAK3M,UAAU,aAAakO,GAAI,GAAIE,GAAI,GAAIC,GAAI,EAAhD,SACE,eAAC,KAAD,CAAMC,UAAQ,EAAd,SACE,eAACI,GAAA,EAAD,CAAqBC,UAAW,IAAhC,SACE,gBAACC,GAAA,EAAD,CACE1N,KAAMA,EACN2N,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GANZ,UASE,eAACC,GAAA,EAAD,CAAKC,KAAK,UAAUC,QAAQ,QAA5B,SACGlO,EAAK6L,KAAI,SAACsC,EAAOC,GAAR,OACR,eAACC,GAAA,EAAD,CAEEJ,KAAMmC,EAAOhC,EAAQgC,EAAO3P,SAF9B,eACe2N,SAKnB,eAACE,GAAA,EAAD,IACA,eAACC,GAAA,EAAD,CAAOL,QAAQ,SACf,eAACM,GAAA,EAAD,gBAMV,wBACA,eAAC,KAAW3B,MAAZ,CAAkBC,MAAO,EAAzB,4BACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,kDACC+C,IACGA,EAAc1P,OAGd,qCACE,gBAAC,KAAD,CAAOE,WAAYwP,EAAeZ,OAAO,MAAzC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,aACNuP,UAAU,YAEVC,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,CAAKC,MAAOF,EAAKE,MAAjB,SAAyBF,EAAK/P,SAF5B,aAKN,eAAC,KAAM4P,OAAP,CACEtP,MAAM,SACNuP,UAAU,SAEVC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAACG,GAAD,CAAMO,UAAQ,EAAd,SAAgBX,MADtC,UAGN,eAAC,KAAMH,OAAP,CACEtP,MAAM,OACNuP,UAAU,OAEVC,OAAQ,SAACC,EAAMC,GAAP,OACNvD,KAAOsD,GAAMjD,OAAO,gBAFlB,aArBV,eAAC,KAAD,KA6BJ,wBACA,gBAAC,IAAD,WACE,eAAC,KAAD,CAAQvN,KAAK,SAAb,SACE,eAAC,IAAD,CAAMF,GAAG,iBAAT,2BAEF,eAAC,KAAD,CAAQE,KAAK,SAAb,SACE,eAAC,IAAD,CAAMF,GAAG,kBAAT,qCAKY,SAAnBV,EAAK8R,MAAMzQ,MACV,eAAC,KAAD,CAAKd,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,+CAC8BpL,GAC5B,eAAC,KAAD,CAAQlD,UAAU,eAAeK,KAAK,SAAtC,SACE,eAAC,IAAD,CAAMF,GAAG,eAAT,uCC7JD,IACbsR,MAAO,CACLC,KAAM,IACNC,OAAQ,CACN,CACED,KAAM,IACN5Q,KAAM,qBACNsE,KAAM,eAACwM,GAAA,EAAD,IACNC,OAAO,GAET,CACEH,KAAM,UACN5Q,KAAM,SACNsE,KAAM,eAAC0M,GAAA,EAAD,IACND,OAAO,GAET,CACEH,KAAM,YACN5Q,KAAM,WACNsE,KAAM,eAAC2M,GAAA,EAAD,IACNJ,OAAQ,CACN,CACED,KAAM,KACN5Q,KAAM,gBACNsE,KAAM,eAAC4M,GAAA,EAAD,IACNH,OAAO,GAET,CACEH,KAAM,OACN5Q,KAAM,gBACNsE,KAAM,eAAC6M,GAAA,EAAD,KAER,CACEP,KAAM,UACN5Q,KAAM,UACNsE,KAAM,eAAC8M,GAAA,EAAD,KAER,CACER,KAAM,sBACN5Q,KAAM,iBACNsE,KAAM,eAAC+M,GAAA,EAAD,SAMhBC,SAAU,CACRC,SAAU,M,0CC3CC,IACbZ,MAAO,CACLC,KAAM,IACNC,OAAQ,CACN,CACED,KAAM,IACN5Q,KAAM,YACNsE,KAAM,eAACkN,GAAA,EAAD,IACNX,OAAQ,CACN,CACED,KAAM,IACN5Q,KAAM,WACNsE,KAAM,eAACwM,GAAA,EAAD,IACNC,OAAO,GAET,CACEH,KAAM,cACN5Q,KAAM,aACNsE,KAAM,eAACmN,GAAA,EAAD,IACNV,OAAO,KAIb,CACEH,KAAM,YACN5Q,KAAM,WACNsE,KAAM,eAACoN,GAAA,EAAD,IACNX,OAAO,GAET,CACEH,KAAM,UACN5Q,KAAM,SACNsE,KAAM,eAAC0M,GAAA,EAAD,IACND,OAAO,GAET,CACEH,KAAM,YACN5Q,KAAM,WACNsE,KAAM,eAAC2M,GAAA,EAAD,IACNJ,OAAQ,CACN,CACED,KAAM,KACN5Q,KAAM,gBACNsE,KAAM,eAAC4M,GAAA,EAAD,IACNH,OAAO,GAET,CACEH,KAAM,OACN5Q,KAAM,gBACNsE,KAAM,eAAC6M,GAAA,EAAD,KAER,CACEP,KAAM,UACN5Q,KAAM,UACNsE,KAAM,eAAC8M,GAAA,EAAD,KAER,CACER,KAAM,YACN5Q,KAAM,iBACNsE,KAAM,eAAC+M,GAAA,EAAD,KAER,CACET,KAAM,UACN5Q,KAAM,oBACNsE,KAAM,eAACqN,GAAA,EAAD,OAIZ,CACEf,KAAM,GACN5Q,KAAM,WACNsE,KAAM,eAACkN,GAAA,EAAD,IACNX,OAAQ,CACN,CACED,KAAM,eACN5Q,KAAM,gBACNsE,KAAM,eAACqN,GAAA,EAAD,IACNZ,OAAO,OAMjBO,SAAU,CACRC,SAAU,M,sBCnFC,IACbZ,MAAO,CACLC,KAAM,IACNC,OAAQ,CACN,CACED,KAAM,IACN5Q,KAAM,YACNsE,KAAM,eAACkN,GAAA,EAAD,IACNX,OAAQ,CACN,CACED,KAAM,IACN5Q,KAAM,WACNsE,KAAM,eAACwM,GAAA,EAAD,IACNC,OAAO,GAET,CACEH,KAAM,cACN5Q,KAAM,aACNsE,KAAM,eAACmN,GAAA,EAAD,IACNV,OAAO,GAET,CACEH,KAAM,SACN5Q,KAAM,QACNsE,KAAM,eAACsN,GAAA,EAAD,IACNb,OAAO,KAIb,CACEH,KAAM,YACN5Q,KAAM,WACNsE,KAAM,eAACoN,GAAA,EAAD,IACNX,OAAO,GAET,CACEH,KAAM,UACN5Q,KAAM,SACNsE,KAAM,eAAC0M,GAAA,EAAD,IACND,OAAO,GAET,CACEH,KAAM,YACN5Q,KAAM,WACNsE,KAAM,eAAC2M,GAAA,EAAD,IACNJ,OAAQ,CACN,CACED,KAAM,KACN5Q,KAAM,gBACNsE,KAAM,eAAC4M,GAAA,EAAD,IACNH,OAAO,GAET,CACEH,KAAM,SACN5Q,KAAM,2BACNsE,KAAM,eAACuN,GAAA,EAAD,KAER,CACEjB,KAAM,OACN5Q,KAAM,yBACNsE,KAAM,eAAC6M,GAAA,EAAD,KAER,CACEP,KAAM,UACN5Q,KAAM,mBACNsE,KAAM,eAAC8M,GAAA,EAAD,KAER,CACER,KAAM,YACN5Q,KAAM,4BACNsE,KAAM,eAAC+M,GAAA,EAAD,KAER,CACET,KAAM,UACN5Q,KAAM,4BACNsE,KAAM,eAACqN,GAAA,EAAD,OAIZ,CACEf,KAAM,KACN5Q,KAAM,WACNsE,KAAM,eAACkN,GAAA,EAAD,IACNX,OAAQ,CACN,CACED,KAAM,eACN5Q,KAAM,gBACNsE,KAAM,eAACqN,GAAA,EAAD,IACNZ,OAAO,OAMjBO,SAAU,CACRC,SAAU,MCrBCpR,I,OA3FI,SAAC,GAWb,IAAD,IAVJW,YAUI,MAVG,GAUH,EATJxB,EASI,EATJA,QACAe,EAQI,EARJA,QACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,WACAC,EAKI,EALJA,UAKI,IAJJC,iBAII,SAHJC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aAEI,IADJC,oBACI,SACJ,OAAKE,GAAwB,IAAhBA,EAAKD,OAYhB,iCACE,eAAC,KAAD,CACE3B,UAAS,OACT6B,WAAYD,EACZE,WAAY,SAACC,EAAMC,GACjB,IAAMC,EAAU5C,KAAW,OAAD,uBACd0C,EAAKG,OAGXC,EAAWJ,EAAKpB,OACG,kBAAhBoB,EAAKpB,OACV,eAAC,IAAD,CAAQX,UAAS,SAAYY,IAAKmB,EAAKpB,SAEvC,uBAAMX,UAAS,cAAf,SAAiC+B,EAAKpB,SAEtC,KAEJ,OACE,eAAC,KAAKT,KAAN,CACEF,UAAWiC,EAEX7B,QAAS,WACA,OAAPA,QAAO,IAAPA,KAAU2B,IAJd,SAOE,eAAC,KAAK7B,KAAKmC,KAAX,CACErC,UAAS,OACTW,OAAQwB,EACRf,MACE,uBAAKpB,UAAS,QAAd,UACG+B,EAAKX,MACN,sBAAKpB,UAAS,QAAd,SAA0B+B,EAAKQ,WAGnCC,YACE,iCACE,sBAAKxC,UAAS,cAAd,SAAgC+B,EAAKS,cACrC,sBAAKxC,UAAS,WAAd,SAA6B+B,EAAKU,iBAjBnCV,EAAKW,KAAOV,MAyBzB,uBAAKhC,UAAS,YAAd,UACGuB,EACC,uBAAKnB,QAASe,EAAd,UACGK,EADH,IACeJ,KAEb,KACHM,EACC,sBACEtB,QAAS,SAACwC,GACJvB,GACFA,EAAWuB,IAHjB,SAOGnB,IAED,WAvEN,uBAAKzB,UAAS,WAAd,UACE,sBACEY,IAAI,sEACJC,IAAI,cAEN,+BAAMS,S,iCCjBCrC,GAJQ,SAAC,GAAD,IAAqBC,EAArB,EAAGC,iBAA0BC,EAA7B,0BACrB,eAAC,KAAD,aAAUD,iBAAgB,oBAAeD,IAAWE,KCI9C0D,I,OAAYC,KAAZD,SAEFE,GAAa,SAACC,GAClB,IAoDQjD,EAA2BiD,EAA3BjD,UAAWkD,EAAgBD,EAAhBC,MAAOC,EAASF,EAATE,KAE1B,EAA8BC,cAAe,EAAO,CAClDC,MAAOJ,EAAMK,aACbC,SAAUN,EAAMO,uBAFlB,mBAAOC,EAAP,KAAgBC,EAAhB,KAIMC,EAAoBtE,KAAWW,EAAD,gBAC9B6D,EA3DqB,WACzB,IACEC,EAQEb,EARFa,SACAC,EAOEd,EAPFc,QACA5C,EAME8B,EANF9B,QACA6C,EAKEf,EALFe,YACAC,EAIEhB,EAJFgB,YACA5C,EAGE4B,EAHF5B,WACAG,EAEEyB,EAFFzB,UACAC,EACEwB,EADFxB,aAEF,IAAKqC,EACH,OAAO,KAET,IAAMI,EAAQ,GA2Bd,OA1BAC,IAAMC,SAASC,QAAQP,GAAU,SAACQ,GAChC,GAAKA,EAAL,CAGA,MACEA,EAAMrB,MADArB,EAAR,EAAQA,KAAMR,EAAd,EAAcA,MAAO8B,EAArB,EAAqBA,MAAOqB,EAA5B,EAA4BA,OAAQhD,EAApC,EAAoCA,UAAWG,EAA/C,EAA+CA,aAEzC8C,EAAM5C,GAAQA,EAAKD,OAASC,EAAKD,OAAS,EAC1C8C,EAAWvB,GAAmB,IAAVA,EAAcA,EAAQsB,EAC1CE,EAAWD,EAAW,EAAX,UAAkBrD,EAAlB,aAA4BqD,EAA5B,KAA0CrD,EAC3D8C,EAAMS,KACJ,eAAC,GAAD,CAASC,IAAKF,EAAd,SACE,eAAC,GAAD,CACElD,UAAWA,EACXC,aAAcA,EACdG,KAAMA,EACN2C,OAAQA,EACRpD,QAAS,kBAAMA,GAAWA,EAAQC,EAAOmD,IACzCnE,QAAS,SAAC2B,GAAD,OAAUkC,GAAeA,EAAYlC,EAAMuC,EAAMrB,QAC1D5B,WAAY,SAACwD,GAAD,OAAWxD,GAAcA,EAAWiD,EAAMrB,MAAO4B,IAC7DtD,UAAWA,EACXG,aAAcA,EACdN,MAAOA,KAXkBmD,QAiB/B,qCACE,eAAC,KAAD,CAAMO,SAAUf,EAASgB,MAAO,IAAhC,SACE,eAAC,KAAD,CAAM/E,UAAS,OAAUuD,SAAUS,EAAa4O,UAAQ,EAAxD,SACG1O,QAcae,GAClBC,EAAiB/B,GAAQ,eAACgC,GAAA,EAAD,CAAcnF,UAAS,SAChDqF,EACJ,uBAAMrF,UAAWX,KAAWsE,EAAmB,CAAE2B,OAAQ7B,IAAzD,SACE,eAAC,KAAD,CAAOP,MAAOA,EAAOqC,MAAO,CAAEC,UAAW,QAAUxF,UAAS,QAA5D,SACGkF,MAIP,OAAKrB,EAKH,eAAC,GAAD,CACE6B,UAAU,cACVnF,QAASsD,EACT1E,iBAAgB,UAChBkG,QAAS,CAAC,SACV5B,QAASA,EACTmC,gBAAiBlC,EANnB,SAQG2B,IAZIA,GAiBXrC,GAAW6C,aAAe,CACxBC,WACE,uEAGJ9C,GAAW+C,IAAM9E,GAEF+B,UCsJA6P,GAjFQ,WAGrB,MAA8BzB,mBAAS,IAAvC,mBAAO0B,EAAP,KAAgBC,EAAhB,KAEAxG,qBAAU,WAERwG,EA5KM,CACJ,CACE/L,GAAI,YACJrG,OACE,sEACFS,MAAO,uDACPqB,SAAU,aACVpC,KAAM,gBAER,CACE2G,GAAI,YACJrG,OACE,sEACFS,MAAO,+FACPqB,SAAU,aACVpC,KAAM,gBAER,CACE2G,GAAI,YACJrG,OACE,sEACFS,MAAO,uFACPqB,SAAU,aACVP,MAAM,EACN7B,KAAM,gBAER,CACE2G,GAAI,YACJrG,OACE,sEACFS,MAAO,iFACPqB,SAAU,aACVpC,KAAM,gBAER,CACE2G,GAAI,YACJrG,OACE,sEACFS,MAAO,yGACPqB,SAAU,aACVpC,KAAM,gBAER,CACE2G,GAAI,YACJrG,OACE,uEACFS,MAAO,8CACPoB,YAAa,2EACbC,SAAU,aACVpC,KAAM,eACN2S,YAAY,GAEd,CACEhM,GAAI,YACJrG,OACE,uEACFS,MAAO,8CACPoB,YAAa,+JACbC,SAAU,aACVpC,KAAM,eACN2S,YAAY,GAEd,CACEhM,GAAI,YACJrG,OACE,uEACFS,MAAO,eACPoB,YAAa,+JACbC,SAAU,aACVpC,KAAM,eACN2S,YAAY,GAEd,CACEhM,GAAI,YACJ5F,MAAO,2BACPoB,YAAa,qEACbD,MAAO,qBACP6K,OAAQ,OACR/M,KAAM,gBAER,CACE2G,GAAI,YACJ5F,MAAO,yDACPoB,YACE,gIACFD,MAAO,2BACP6K,OAAQ,SACR/M,KAAM,gBAER,CACE2G,GAAI,YACJ5F,MAAO,uCACPoB,YAAa,6FACbD,MAAO,8BACP6K,OAAQ,QACR/M,KAAM,gBAER,CACE2G,GAAI,YACJ5F,MAAO,gCACPoB,YACE,gIACFD,MAAO,qBACP6K,OAAQ,aACR/M,KAAM,kBAoEsB,MAC/B,IAEH,IAAM4S,EAlEc,SAACH,GACrB,IAAKA,GAA8B,IAAnBA,EAAQnR,SAAiBuR,MAAMC,QAAQL,GACrD,MAAO,GAGT,IAAMM,EAAaN,EAAQ/F,KAAI,SAACsG,GAC9B,IAAMC,EAAS,eAAQD,GAUvB,GARIC,EAAU7Q,WACZ6Q,EAAU7Q,SAAW8K,KAAO8F,EAAO5Q,UAAU8Q,WAG3CD,EAAUtM,KACZsM,EAAU5Q,IAAM4Q,EAAUtM,IAGxBsM,EAAU/Q,OAAS+Q,EAAUlG,OAAQ,CACvC,IAAM2D,EAAQ,CACZyC,KAAM,GACNC,WAAY,OACZC,OAAQ,MACRC,MAAO,QACPL,EAAUlG,QACZkG,EAAU/Q,MACR,eAAC,KAAD,CACEwO,MAAOA,EACPxL,MAAO,CACLqO,YAAa,GAHjB,SAMGN,EAAU/Q,QAKjB,OAAO+Q,KAET,OAAOO,mBAAQT,EAAY,QA6BRU,CAAchB,GAC3BiB,EA3Bc,SAACd,GACrB,IAAMc,EAAY,GAYlB,OAXAC,OAAOC,KAAKhB,GAAY5O,SAAQ,SAAC3B,GAC/B,IAAMW,EAAQ4P,EAAWvQ,GAEpBqR,EAAUrR,KACbqR,EAAUrR,GAAO,GAGfwQ,MAAMC,QAAQ9P,KAChB0Q,EAAUrR,GAAOW,EAAM6Q,QAAO,SAACnS,GAAD,OAAWA,EAAKG,QAAMP,WAGjDoS,EAcWI,CAAclB,GAAc,IA2B9C,OACE,eAAC,GAAD,CACEjT,UAAS,SAETkD,MAAO,GACPe,YAAa,SAAClC,GA9BM,IAACiF,IA+BHjF,EAAKiF,GA9BzB+L,EACED,EAAQ/F,KAAI,SAAChL,GACX,IAAMsR,EAAM,eAAQtR,GAIpB,OAHIsR,EAAOrM,KAAOA,IAChBqM,EAAOnR,MAAO,GAETmR,OA0BTlS,QAAS,SAACC,EAAOsB,GAAR,OArBU,SAACtB,EAAOsB,GAC7BqQ,EACED,EAAQ/F,KAAI,SAAChL,GACX,IAAMsR,EAAM,eAAQtR,GAIpB,OAHIsR,EAAOhT,OAASqC,IAClB2Q,EAAOnR,MAAO,GAETmR,MAGXpJ,IAAQmK,QAAW,QAAnB,WAA8BhT,IAWHiT,CAAejT,EAAOsB,IAC/CqB,SAAS,EACTvC,UAAU,QACVC,aAAa,YACbJ,WAAY,kBAAM4I,IAAQqK,KAAK,uBAC/BC,YAAU,EAZZ,SAcE,eAAC,GAAWxO,IAAZ,CACExB,OAAO,eACPrB,MAAO6Q,EAAUS,aACjB5S,KAAMqR,EAAWuB,aACjBpT,MAAM,eACNE,UAAU,sC,8BCjNEyB,KAAZD,Q,OCeKiF,I,OAAgB,SAACC,GAAD,gDAAW,WAAOtI,GAAP,kBAAAqK,EAAA,sEAEpCrK,EAAS,CAAEW,KAAMnF,IAFmB,SAIbqP,GAAkBvC,GAJL,gBAI5B9G,EAJ4B,EAI5BA,KACRxB,EAAS,CAAEW,KAAMrF,EAAMkG,SACvBxB,EAAS,CAAEW,KAAMlF,IANmB,kDAQpCyO,GAAY,EAAD,GAAQxO,GARiB,0DAAX,wDC9BrB2S,GAAUmD,KAAVnD,MA4EO0G,GA3EF,WACX,IAAM/U,EAAWC,cACXC,EAAWC,cASjB,OACE,uCACE,eAACkO,GAAD,CACEC,MAAO,EACPzI,MAAO,CAAEsJ,OAAQ,SAAU7D,UAAW,SAAU0J,QAAS,QAF3D,qBAOA,gBAAC,KAAD,CACEC,SAAU,CAAElG,KAAM,GAClBmG,WAAY,CAAEnG,KAAM,GACpB3N,KAAK,QACL+T,cAAe,CACb7M,MAAO,sBACP8M,SAAU,QAEZC,SAzBW,SAACC,GAChBtV,EDHkB,SAACoI,EAAUlI,GAAX,gDAAwB,WAAOF,GAAP,kBAAAqK,EAAA,sEAE1CrK,EAAS,CAAEW,KAAMnF,IAFyB,SAInBqP,GAAWzC,GAJQ,gBAIlC5G,EAJkC,EAIlCA,KACRxB,EAAS,CAAEW,KAAMrF,EAAMkG,SACvBxB,EAAS,CAAEW,KAAMlF,IAEjByE,EAAS,KARiC,kDAU1CgK,GAAY,EAAD,GAAQxO,GAVuB,0DAAxB,sDCGTyM,CAAOmN,EAAQpV,KAyBpBqV,eAtBiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAsBnBC,aAAa,MAVf,UAYE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,QACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,6BANf,SAUE,eAAC,KAAD,CAAOqL,WAAS,MAGlB,eAAC,KAAKpV,KAAN,CACEsO,MAAM,WACN1N,KAAK,WACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,gCANf,SAUE,eAAC,KAAMsL,SAAP,MAGF,eAAC,KAAKrV,KAAN,CACE0U,WAAY,CACVY,OAAQ,IAFZ,SAKE,eAAC,KAAD,CAAQnV,KAAK,UAAUoV,SAAS,SAAhC,0BAKJ,sBAAKlQ,MAAO,CAAEyF,UAAW,UAAzB,SACE,eAAC,IAAD,CAAM7K,GAAG,iBAAT,mC,6BCjEKuV,I,OAAgB,2DAAM,WAAOhW,GAAP,kBAAAqK,EAAA,sEAE/BrK,EAAS,CAAEW,KAAM7D,KAFc,SjBqCAwJ,GAAIiB,IAAI,eiBrCR,gBAGvB/F,EAHuB,EAGvBA,KACRxB,EAAS,CAAEW,KAAM/D,GAAqB8N,QAASlJ,IAC/CxB,EAAS,CAAEW,KAAM5D,KALc,kDAO/BmN,GAAY,EAAD,GAAQlN,IAPY,0DAAN,wD,+BCSrBiZ,GAAaC,KAAbD,SACAE,GAAgBC,KAAhBD,YACAE,GAAWC,KAAXD,OACA9E,GAASC,KAATD,KAkOOgF,GAhOG,WAChB,IAAMrW,EAAWC,cACTmH,EAAOkP,cAAPlP,GACFvH,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACjDX,EAAUY,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAvCd,MACA2L,EAAe/K,aAAY,SAACC,GAAD,OAAWA,EAAM8K,cAA5CA,WACR,EAAeC,KAAKC,UAAbC,EAAP,oBACA,EAA0BlF,mBAAS,MAAnC,mBAAOvH,EAAP,KAAc0M,EAAd,KACM7W,EAAWC,cAgEjB4M,qBAAU,WACR7M,EAASgW,MACTrL,QAAQC,IAAI6L,GACRnP,GACFtH,EAASqH,GAAeC,IAAKwP,MAAK,SAAChM,GACjC8L,EAAKG,eAAL,2BACKjM,GADL,IAEE,eAAgB,CAAC+C,KAAO/C,EAAM2C,UAAWI,KAAO/C,EAAMkM,iBAI3D,CAAChX,EAAUsH,IAyBd,OACE,uCACE,qBAAIhH,UAAU,cAAd,6BACA,gBAAC,KAAD,CACEsW,KAAMA,EACNxV,KAAK,QACL6T,SAAU,CACRlG,KAAM,GAERmG,WAAY,CACVnG,KAAM,IAERoG,cAAe,CACb8B,UAAU,GAEZ5B,SAxGW,SAACC,GAChBuB,EAAS,MAET,IAAIzO,EAAW,IAAI8O,SACnB,GAAI5B,EAAO6B,OAAQ,CAAC,IAAD,iBACA7B,EAAO6B,QADP,IACjB,2BAAgC,CAAC,IAAxBC,EAAuB,QAC1BA,EAAKC,eACPjP,EAASkP,OAAO,QAASF,EAAKC,gBAHjB,+BAQnB,IAAME,EAAajC,EAAO,gBACpBkC,EAAYD,EAAW,GACvBE,EAAUF,EAAW,GACvBG,EAAc3X,EAAKgN,WAAWuI,EAAO3H,WACnCgK,EA1BgB,SAACH,EAAWC,GAIlC,IAHA,IAAIG,EAAM/J,KAAO2J,GACbK,EAAc,EAEXD,EAAIE,eAAeL,EAAS,QAC5B,CAAC,EAAG,GAAGM,SAASH,EAAIA,QAAQC,IACjCD,EAAI3J,IAAI,EAAG,KAEb,OAAO4J,EAkBUG,CAAgBR,EAAWC,GACtC3K,EAAY,CAChBmL,OAAQ3C,EAAO2C,OACftK,UAAW2H,EAAO3H,UAClB5N,KAAMA,EAAKuR,IACXtJ,WAAYjI,EAAKiI,WAAWsJ,IAC5B7D,SAAU+J,EAAUtJ,OAAO,oBAC3B8I,OAAQS,EAAQvJ,OAAO,qBAEzBoG,OAAO4D,QAAQpL,GAAWnI,SAAQ,YAAmB,IAAD,mBAAhB3B,EAAgB,KAAXW,EAAW,KAClDyE,EAASkP,OAAOtU,EAAKW,MAInB+T,GAAeC,EAEf3X,EADEsH,EACOK,GAAYL,EAAIc,GhBnCN,SAAC0C,GAAD,gDAAW,WAAO9K,GAAP,kBAAAqK,EAAA,sEAElCrK,EAAS,CAAEW,KAAM5F,IAFiB,SFrBVod,EEwBerN,EFxBFxE,GAAIoB,KAAK,UAAWyQ,GEqBvB,gBAG1B3W,EAH0B,EAG1BA,KACRxB,EAAS,CAAEW,KAAMjG,EAAcgQ,QAASlJ,IACxCxB,EAAS,CAAEW,KAAM3F,IALiB,kDAOlCkP,GAAY,EAAD,GAAQjP,GAPe,kCFrBX,IAACkd,IEqBU,qBAAX,sDgBqCVC,CAAYhQ,IAGvByO,EAAS,+BAoEPtB,eAxCiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAwCnBC,aAAa,MAdf,UAgBE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,aACN1N,KAAK,YACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,iCANf,SAUE,eAAC,KAAD,UACGkM,EAAWpJ,KAAI,SAACM,GAAD,OACd,eAAC,GAAD,CAA4BhK,MAAOgK,EAAU0K,KAA7C,SACG1K,EAAUvM,MADAuM,EAAU2D,YAO7B,eAAC,KAAK9Q,KAAN,CACEsO,MAAM,SACN1N,KAAK,SACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,8BANf,SAUE,eAAC0L,GAAD,CAAUqC,KAAM,MAGlB,eAAC,KAAK9X,KAAN,CACEsO,MAAM,OACN1N,KAAK,eACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC4L,GAAD,MAEF,eAAC,KAAK3V,KAAN,CACEY,KAAK,SACL0N,MAAM,SACNyJ,cAAc,WACdC,kBAvFS,SAACtV,GAGhB,OAFAyH,QAAQC,IAAI,gBAAiB1H,GAEzBsQ,MAAMC,QAAQvQ,GACTA,EAGFA,GAAKA,EAAEuV,UA4EV,SAME,eAAC,KAAOC,QAAR,CACEtX,KAAK,OACLuX,SAAS,UACTC,aAlFY,SAACxB,GAErB,OADAzM,QAAQC,IAAI,aAAcwM,IACnB,GAiFCyB,cA9EW,SAAC,GAAwB,EAAtBzB,KAAuB,IAAjB0B,EAAgB,EAAhBA,UAC5BC,YAAW,WACTD,EAAU,QACT,IA4EKE,gBA3HU,WAAO,IAAD,EACxB,OAAO1R,GAEA,OAALwD,QAAK,IAALA,GAAA,UAAAA,EAAOmO,mBAAP,eAAoB5L,KAAI,SAAC+J,GACvB,MAAO,CACL8B,IAAK9B,EAAK+B,OACV/X,KAAMgW,EAAKgC,SACX1L,OAAQ,OACR2L,IAAI,yBAAD,OAA2BjC,EAAKkC,gBAEjC,GATU,MA2HVC,eAAgB,CACdC,kBAAkB,EAClBC,aAAc,SAACrC,GACb,MAAmB,QAAfA,EAAK1J,OAAyB,eAACgM,GAAA,EAAD,IAC3B,gCAETC,gBAAgB,EAChBC,WAAY,SAACxC,GACX,MAAmB,QAAfA,EAAK1J,OAAyB,+BAC3B,eAACmM,GAAA,EAAD,MAfb,SAmBE,eAAC,KAAD,CAAQnU,KAAM,eAACoU,GAAA,EAAD,IAAd,iCAGJ,gBAAC,KAAKtZ,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAMG5E,GAAS,eAAC,GAAD,CAAMxJ,KAAK,SAAX,SAAqBwJ,IAC/B,wBACA,wBACA,wBACA,eAAC,KAAD,CAAQxJ,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,CACEpV,KAAK,YACLoV,SAAS,SACTrV,QAAS,kBAAMR,GAAU,IAH3B,4BCjOG6Z,I,OAAW,2DAAM,WAAO/Z,GAAP,kBAAAqK,EAAA,sEAE1BrK,EAAS,CAAEW,KAAM5E,IAFS,SnB4BAuK,GAAIiB,IAAI,UmB5BR,gBAGlB/F,EAHkB,EAGlBA,KACRxB,EAAS,CAAEW,KAAM9E,EAAgB6O,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAM3E,IALS,kDAO1BkO,GAAY,EAAD,GAAQjO,GAPO,0DAAN,wDAUXuM,GAAU,SAAClB,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAE3BrK,EAAS,CAAEW,KAAM5E,IAFU,SAGJ8O,GAAYvD,GAHR,uBAGnB9F,EAHmB,EAGnBA,KACRxB,EAAS,CAAEW,KAAM7E,EAAgB4O,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAM3E,IALU,kBAOpBwF,GAPoB,kCAS3B0I,GAAY,EAAD,GAAQjO,GATQ,0DAAR,uDAuDV0M,GAAiB,SAACX,GAAD,gDAAgB,WAAOhI,GAAP,kBAAAqK,EAAA,sEAE1CrK,EAAS,CAAEW,KAAM5E,IAFyB,SAGnB8O,GAAmB7C,GAHA,gBAGlCxG,EAHkC,EAGlCA,KACRxB,EAAS,CAAEW,KAAMzE,EAAiBwO,QAASlJ,IAC3CxB,EAAS,CAAEW,KAAM3E,IALyB,kDAO1CkO,GAAY,EAAD,GAAQjO,GAPuB,0DAAhB,uDC2Bf+d,GA/FK,WAClB,MAA6CtO,aAC3C,SAACC,GAAD,OAAWA,EAAMC,UADXd,EAAR,EAAQA,MAAkBmP,EAA1B,EAAepO,UAGT7L,EAAWC,cACjB,EAAgCyR,oBAAS,GAAzC,mBAAOrN,EAAP,KAAgB6V,EAAhB,KACMha,EAAWC,cACTmH,EAAOkP,cAAPlP,GACRuF,qBAAU,WACR7M,EAASqH,GAAeC,IAAKwP,MAAK,kBAAMoD,GAAa,QACpD,CAACla,EAAUsH,IACd,IAAM6S,EAAY,SAACzM,GACjB1N,EAAS2H,GAAYL,EAAD,YAAC,eAASwD,GAAV,IAAiB4C,aACvB,WAAVA,GACF1N,EAASwI,GAAQsC,EAAM/K,KAAKuR,MAAMwF,MAAK,SAAC/W,GACtC4K,QAAQC,IAAI7K,GACZ,IAKMqa,EALcra,EAAKgN,WAAWjC,EAAM6C,YAExCE,KACGwM,SAASxM,KAAO/C,EAAMkM,QAAQsD,KAAKzM,KAAO/C,EAAM2C,YAChD8M,SAAW,GAEhBva,EDmCkB,SAACsH,EAAIvH,GAAL,gDAAc,WAAOC,GAAP,kBAAAqK,EAAA,sEAEpCrK,EAAS,CAAEW,KAAM5E,IAFmB,SAGb8O,GAAevD,EAAIvH,GAHN,gBAG5ByB,EAH4B,EAG5BA,KACRxB,EAAS,CAAEW,KAAM/E,EAAa8O,QAASlJ,IACvCxB,EAAS,CAAEW,KAAM3E,IALmB,kDAOpCkO,GAAY,EAAD,GAAQjO,GAPiB,0DAAd,sDClChBwM,CAAW1I,EAAKuR,IAAN,YAAC,eACNvR,GADK,IAERgN,WAAW,2BACNhN,EAAKgN,YADA,mBAEPjC,EAAM6C,UAAYyM,YAQ/B,OAAI/V,GAAW4V,EAAuB,eAAC,GAAD,IAGpC,uCACE,gBAAC,KAAD,CACEvY,MAAM,aACNkN,UAAQ,EACRC,OAAQ,CAAE2L,IAAK,EAAGC,GAAI,EAAG9L,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAHpD,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,YAAYC,KAAM,EAA3C,mBACMjE,EAAM/K,KAAKsB,WADjB,YAC+ByJ,EAAM/K,KAAKuB,aAE1C,eAAC,KAAad,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGjE,EAAM9C,WAAW5G,OAEpB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,QAAQC,KAAM,EAAvC,SACGjE,EAAMpJ,QAET,eAAC,KAAalB,KAAd,CAAmBsO,MAAM,SAASC,KAAM,EAAxC,SACGjE,EAAMmN,SAET,eAAC,KAAazX,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGlB,KAAO/C,EAAM2C,UAAUS,OAAO,gBAEjC,eAAC,KAAa1N,KAAd,CAAmBsO,MAAM,WAAWC,KAAM,EAA1C,SACGlB,KAAO/C,EAAMkM,QAAQ9I,OAAO,gBAE/B,eAAC,KAAa1N,KAAd,CAAmBsO,MAAM,SAASC,KAAM,EAAxC,SACE,eAAC,KAAD,CACErB,OACkB,WAAhB5C,EAAM4C,OACF,aACgB,WAAhB5C,EAAM4C,OACN,UACA,QAENyD,KAAMrG,EAAM4C,cAIlB,gBAAC,IAAD,WACE,eAAC,KAAD,CAAQhN,QAAS,kBAAMR,GAAU,IAAjC,kBACiB,WAAhB4K,EAAM4C,QACL,uCACE,eAAC,KAAD,CACEpN,UAAU,cACVI,QAAS,kBAAMyZ,EAAU,YAF3B,qBAMA,eAAC,KAAD,CAAQO,QAAM,EAACha,QAAS,kBAAMyZ,EAAU,WAAxC,8BCnFCQ,GAAW,2DAAM,WAAO3a,GAAP,kBAAAqK,EAAA,sEAE1BrK,EAAS,CAAEW,KAAMpE,KAFS,SrBuBA+J,GAAIiB,IAAI,UqBvBR,gBAGlB/F,EAHkB,EAGlBA,KACRxB,EAAS,CAAEW,KAAMrE,GAAgBoO,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAMnE,KALS,kDAO1B0N,GAAY,EAAD,GAAQzN,IAPO,0DAAN,uD,+BCqBhB8U,GAASC,KAATD,KA0OOqJ,GAxOG,WAChB,MAA8BlP,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAnDA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACRgP,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACApE,EAAe/K,aAAY,SAACC,GAAD,OAAWA,EAAM8K,cAA5CA,WACF1W,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAErDqP,GADa3a,cACC,IAMd4a,EAAa,GAEX/a,EAAWC,cACjB4M,qBAAU,WACR7M,EACE8H,GAAmB/H,EAAK8R,MAAMzQ,KAAMrB,EAAKuR,IAAKvR,EAAKiI,WAAW5G,OAEhEpB,EAAS2a,MACT3a,EAASgW,QACR,CAAChW,IACmB,SAAnBD,EAAK8R,MAAMzQ,MACbyZ,EAAMxN,KAAI,SAACC,GACTwN,EAAY7V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQlM,UAE1DqV,EAAWpJ,KAAI,SAACC,GACdyN,EAAW9V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQ+K,UAGvD,IAAM2C,EAAU,CACd,CACEtZ,MAAO,gBACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACX/J,OAAQ,SAACC,EAAMC,GAAP,gBAAqBD,EAAK9P,WAA1B,YAAwC8P,EAAK7P,aAEvD,CACEI,MAAO,aACPuP,UAAW,CAAC,aAAc,QAC1BjO,IAAK,aAELkY,QAASJ,EACTK,SAAU,SAACxX,EAAOyN,GAAR,OAA6D,IAA1CA,EAAOpJ,WAAW5G,KAAKga,QAAQzX,KAG9D,CACEjC,MAAO,SACPuP,UAAW,SACXjO,IAAK,SACLqY,cAAc,EACdnK,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAAC,GAAD,CAAMU,UAAQ,EAAd,SAAgBX,MAE5C,CACEzP,MAAO,aACPuP,UAAW,YACXjO,IAAK,YACLkY,QAASH,EACTI,SAAU,SAACxX,EAAOyN,GAAR,OAA4D,IAAzCA,EAAOzD,UAAU0K,KAAK+C,QAAQzX,IAC3DuN,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAAC,KAAD,CAAKC,MAAOF,EAAKE,MAAjB,SAAyBF,EAAKkH,SAE1D,CACE3W,MAAO,aACPuP,UAAW,WACXjO,IAAK,WACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAEoD,UAAYI,KAAO0N,EAAE9N,WAChDyD,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO3D,UAAUS,OAAO,gBAE3D,CACExM,MAAO,yBACPuP,UAAW,WACXgK,UAAW,YACXjY,IAAK,WACLwY,aAAa,EACbC,OAAQ,CACNC,UAAW,SAAC/X,GACV,MAAO,CACLgY,UAAWhY,EAAM,GACjBiY,QAASjY,EAAM,OAKvB,CACEjC,MAAO,WACPuP,UAAW,SACXjO,IAAK,SACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE2M,QAAUnJ,KAAO0N,EAAEvE,SAC9C9F,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO4F,QAAQ9I,OAAO,gBAEzD,CACExM,MAAO,SACPuP,UAAW,SACXjO,IAAK,SACLkY,QA1FiB,CACnB,CAAE/J,KAAM,UAAWxN,MAAO,WAC1B,CAAEwN,KAAM,WAAYxN,MAAO,WAC3B,CAAEwN,KAAM,WAAYxN,MAAO,WAwFzBwX,SAAU,SAACxX,EAAOyN,GAAR,OAAoD,IAAjCA,EAAO1D,OAAO0N,QAAQzX,IACnDuN,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,CACE1D,OACmB,WAAjB0D,EAAO1D,OACH,aACiB,WAAjB0D,EAAO1D,OACP,UACA,QAENyD,KAAMC,EAAO1D,WAInB,CACEhM,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,eAAU2Q,EAAOE,KAAzB,mBADwBF,EAAOE,QAMjCuK,EAAYC,mBAClB,OAAIjQ,EAAkB,eAAC,GAAD,IAEpB,uCACE,iDACED,EAAO3J,OAGP,qCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASA,EACTa,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAayJ,EAAOsQ,UA2DxB,OA1DID,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAEhC,GADA2H,QAAQC,IAAI0J,OAAOC,KAAK0H,KACnBA,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GACf,GAAW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,gBACtC,GAAW,cAAP0B,EACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,UACpB,IAAW,aAAP4B,EAST,OARA2H,QAAQC,IACNvI,EAAI,SACJ4Z,EAAOjZ,GACP6K,KAAOxL,EAAI,UAAciY,KACvBzM,KAAOoO,EAAOjZ,IACd,SAIF6K,KAAOxL,EAAI,UAAciY,KACvBzM,KAAOoO,EAAOjZ,MACX,EAEF,GAAW,WAAPA,EACT,OACE6K,KAAOxL,EAAI,QAAYiY,KACrBzM,KAAOoO,EAAOjZ,IACd,SACG,EAGT,OAAKoZ,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,GACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,GAER8N,cAAc,SACdC,QAAS,CACPpb,MAAO,QACPqb,QACE,mFAEJC,cAAe,iBAAM,CACnB,eAAC,IAAD,UACE,eAAC,KAAD,CAAQrc,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,iBAAT,qCA3FZ,eAAC,KAAD,QC6DOwc,GApMM,WAAO,IAAD,EACzB,EAA8BvR,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAnDA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACR4K,EAAe/K,aAAY,SAACC,GAAD,OAAWA,EAAM8K,cAA5CA,WACF1W,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACnDvL,EAAWC,cACXH,EAAWC,cAMb8a,EAAa,GAEjBlO,qBAAU,WrBoDqB,IAACvF,EqBnD9BtH,GrBmD8BsH,EqBnDHvH,EAAKuR,IrBmDH,yCAAQ,WAAOtR,GAAP,kBAAAqK,EAAA,sEAErCrK,EAAS,CAAEW,KAAM5F,IAFoB,SAGd8P,GAAsBvD,GAHR,gBAG7B9F,EAH6B,EAG7BA,KACRxB,EAAS,CAAEW,KAAMvF,EAAqBsP,QAASlJ,IAC/CxB,EAAS,CAAEW,KAAM3F,IALoB,kDAOrCkP,GAAY,EAAD,GAAQjP,GAPkB,0DAAR,wDqBlD7B+E,EAASgW,QACR,CAAChW,IAEJyW,EAAWpJ,KAAI,SAACC,GACdyN,EAAW9V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQ+K,UAGvD,IAIMwD,EAAYC,mBAEZd,EAAU,CACd,CAAEtZ,MAAO,QAASuP,UAAW,QAASjO,IAAK,SAC3C,CACEtB,MAAO,aACPuP,UAAW,YACXjO,IAAK,YACLkY,QAASH,EACTI,SAAU,SAACxX,EAAOyN,GAAR,OAAuD,IAApCA,EAAOzD,UAAUyN,QAAQzX,IACtDuN,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAAC,KAAD,CAAKC,MAAM,MAAX,SAAkBF,MAE9C,CACEzP,MAAO,aACPuP,UAAW,WACXjO,IAAK,WACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAEoD,UAAYI,KAAO0N,EAAE9N,WAChDyD,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO3D,UAAUS,OAAO,gBAE3D,CACExM,MAAO,WACPuP,UAAW,SACXjO,IAAK,SACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE2M,QAAUnJ,KAAO0N,EAAEvE,SAC9C9F,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO4F,QAAQ9I,OAAO,gBAEzD,CACExM,MAAO,SACPuP,UAAW,SACXjO,IAAK,SACLkY,QApDiB,CACnB,CAAE/J,KAAM,UAAWxN,MAAO,WAC1B,CAAEwN,KAAM,WAAYxN,MAAO,WAC3B,CAAEwN,KAAM,WAAYxN,MAAO,WAkDzBwX,SAAU,SAACxX,EAAOyN,GAAR,OAAoD,IAAjCA,EAAO1D,OAAO0N,QAAQzX,IACnDuN,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,CACE1D,OACmB,WAAjB0D,EAAO1D,OACH,aACiB,WAAjB0D,EAAO1D,OACP,UACA,QAENyD,KAAMC,EAAO1D,WAInB,CACEhM,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,gBAAC,IAAD,CAAOpQ,KAAK,SAAZ,UACE,eAAC,IAAD,CAAMP,GAAE,eAAU2Q,EAAOE,KAAzB,kBACkB,WAAjBF,EAAO1D,QACN,eAAC,IAAD,CAAMjN,GAAE,uBAAkB2Q,EAAOE,KAAjC,oBAHsBF,EAAOE,QAUvC,OAAIzF,EAAkB,eAAC,GAAD,IAGpB,uCACE,wDACA,eAAC,IAAD,CAAOhG,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QAxEK,WACjBR,EAAS,mBAuEL,2BAEA0L,EAAO3J,OAGP,qCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,MAAD,GACEjL,OAAO,KACPiK,QAASA,EACTa,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAayJ,EAAOsQ,UAqDxB,OAnDI1H,GACEF,OAAOC,KAAKC,GAAQvS,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAKC,GAAQ2I,MAAK,SAACna,GAC/B,OAAKwR,EAAOxR,MAGRwR,EAAOxR,GAAK+U,SAAZ,UAAwB1V,EAAKW,YAQrCiZ,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAChC,IAAKiZ,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GAMf,MALW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,WAC3B,cAAP0B,IACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,QAEtBgb,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,MA5Df,wBA+DS,OA/DT,4BAgEc,CACV+H,SAAU,GACVC,iBAAiB,IAlErB,wBAoEU,CACNC,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,IAvEV,+BAyEgB,UAzEhB,yBA0EW,CACPrN,MAAO,QACPqb,QACE,oFA7EN,gCA+EiB,iBAAM,CACnB,eAAC,KAAD,CAAQpc,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,iBAAT,0BADyB,eAhF/B,QAJJ,eAAC,KAAD,IA4FF,eAAC,KAAD,UACE,eAAC,IAAD,CAAMA,GAAG,WAAT,wB,SC/MK2c,I,OAAW,2DAAM,WAAOpd,GAAP,kBAAAqK,EAAA,sEAE1BrK,EAAS,CAAEW,KAAMrD,KAFS,SxB2CAgJ,GAAIiB,IAAI,UwB3CR,gBAGlB/F,EAHkB,EAGlBA,KACRxB,EAAS,CAAEW,KAAMvD,GAAgBsN,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAMpD,KALS,kDAO1B2M,GAAY,EAAD,GAAQ1M,IAPO,0DAAN,wDCUXuM,GAAY,SAACzC,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAE7BrK,EAAS,CAAEW,KAAMvB,KAFY,SAGNyL,GAAcvD,GAHR,gBAGrB9F,EAHqB,EAGrBA,KACRxB,EAAS,CAAEW,KAAMxB,GAAkBuL,QAASlJ,IAC5CxB,EAAS,CAAEW,KAAMtB,KALY,kDAO7B6K,GAAY,EAAD,GAAQ5K,IAPU,0DAAR,uDCCjB+W,IAFaH,KAAbD,SACgBG,KAAhBD,YACWG,KAAXD,QA2NOgH,GA1NG,WAChB,MAAgC3L,mBAAS,IAAzC,mBACA,GADA,UAC0BA,mBAAS,CACjC4L,OAAQ,GACRjc,WAAY,GACZC,UAAW,GACXgH,MAAO,GACPiV,gBAAiB,GACjBnI,SAAU,OACVpN,WAAY,GACZ6J,MAAO,MART,mBAUM7R,GAVN,UAUiBC,eACjB4M,qBAAU,WACR7M,EAASod,MACTpd,EAAS2a,MACT3a,EAASgW,MACThW,EAAS+J,GAAU,CAAE3I,KAAM,qBAC1B,CAACpB,IACJ,IAAQ6a,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACAhJ,EAAUnG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,SAAvCA,MAEA4E,GADW/K,aAAY,SAACC,GAAD,OAAWA,EAAM6R,UAAxCA,OACe9R,aAAY,SAACC,GAAD,OAAWA,EAAM8K,cAA5CA,YAmDR,OACE,gBAAC,KAAD,CACErV,KAAK,QACL6T,SAAU,CACRlG,KAAM,GAERmG,WAAY,CACVnG,KAAM,IAERoG,cAAe,CACb8B,UAAU,GAEZ5B,SA9Da,SAACC,GPZM,IAAClN,EOavBpI,GPbuBoI,EOcV,CACTkV,OAAQhI,EAAOgI,OACfjc,WAAYiU,EAAOjU,WACnBC,UAAWgU,EAAOhU,UAClBgH,MAAOgN,EAAOhN,MACdiV,gBAAiBjI,EAAM,gBAAoBpH,OAAO,cAClDkH,SAAU,OACVpN,WAAYsN,EAAOtN,WACnB6J,MAAOyD,EAAOzD,OPtBI,yCAAc,WAAO7R,GAAP,kBAAAqK,EAAA,sEAEpCrK,EAAS,CAAEW,KAAM5E,IAFmB,SAGb8O,GAAezC,GAHF,gBAG5B5G,EAH4B,EAG5BA,KACRxB,EAAS,CAAEW,KAAMhF,EAAa+O,QAASlJ,IACvCxB,EAAS,CAAEW,KAAM3E,IALmB,kDAOhC,KAAMsO,UAERtK,EAAS,CACPW,KAAM1E,EACNkO,MAAO,KAAMG,SAAS9I,KAAK+I,UAE7BA,IAAQJ,MAAM,KAAMG,SAAS9I,KAAK+I,QAAQC,aACjC,KAAM7D,SAEf3G,EAAS,CACPW,KAAM1E,EACNkO,MAAO,KAAMxD,UAEf4D,IAAQJ,MAAM,KAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAM1E,EACNkO,MAAO,KAAMI,UAEfA,IAAQJ,MAAM,KAAMI,QAAQC,aA3BM,0DAAd,yDO2EpB+K,eAhDmB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAgDrBC,aAAa,MAbf,UAeE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,cACN1N,KAAK,SACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,aACN1N,KAAK,aACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,YACN1N,KAAK,YACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,8BANf,SAUE,eAAC,KAAD,MAEDkM,EAAWpJ,KAAI,SAACM,GAAD,OACd,eAAC,KAAKnN,KAAN,CAEEsO,MAAOnB,EAAUvM,KACjBA,KAAMuM,EAAUvM,KAChBqc,aAAc9P,EAAUnK,MACxBkS,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,8BARf,SAYE,eAAC,KAAD,KAXKoD,EAAU2D,QAcnB,eAAC,KAAK9Q,KAAN,CACEsO,MAAM,QACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,iCANf,SAUE,eAAC,KAAD,CAAO5J,KAAK,YAEd,eAAC,KAAKH,KAAN,CACEsO,MAAM,kBACN1N,KAAK,kBACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,CAAYmT,YAAY,KAAK7Z,SA1Hd,SAACuY,GACpB,IAAMuB,EAAUH,EAAOG,QACjBH,EAASA,EAAOtb,KACtB,GAAIsb,EAAQ,CACV,IAAMI,EAAQ/P,KAAO,cACfgQ,EAAiBhQ,KAAOuO,GACxB0B,EAAaF,EAAMtD,KAAKuD,EAAgB,SAC9ClT,QAAQC,IAAIkT,GACZ,IAAIC,EAAgB,EACdC,EAAcR,EAAOhJ,QAAO,SAACyJ,GAAD,MAAuB,SAAhBA,EAAEC,cACrCC,EAAcX,EAAOhJ,QAAO,SAACyJ,GAAD,MAAuB,SAAhBA,EAAEC,cACvCE,EAAe,EACnBJ,EAAYrZ,SAAQ,SAACsZ,GACfH,GAAcG,EAAE7U,OACduU,EACFI,GAAiBE,EAAEI,SAEfJ,EAAE7U,KAAOgV,IACXL,EAAgBE,EAAEI,SAClBD,EAAeH,EAAE7U,UAKzB+U,EAAYxZ,SAAQ,SAACsZ,GACnB,IAAMza,EAAQsa,EAAaG,EAAE7U,KAC7B2U,GAAiBva,EAAQya,EAAEI,YAG7B1T,QAAQC,IAAImT,SA+FZ,eAAC,KAAKvd,KAAN,CACEsO,MAAM,aACN1N,KAAK,aACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,UACGsQ,EAAMxN,KAAI,SAACiR,GAAD,OACT,eAAC,GAAD,CAAuB3a,MAAO2a,EAAKhN,IAAnC,SACGgN,EAAKld,MADKkd,EAAKhN,YAMxB,eAAC,KAAK9Q,KAAN,CACEsO,MAAM,QACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,UACGsH,EAAMxE,KAAI,SAACtF,GAAD,OACT,eAAC,GAAD,CAAuBpE,MAAOoE,EAAKuJ,IAAnC,SACGvJ,EAAK3G,MADK2G,EAAKuJ,YAMxB,gBAAC,KAAK9Q,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAME,eAAC,KAAD,CAAQpO,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,UACE,eAAC,IAAD,CAAMtV,GAAG,SAAT,2BCrOFuQ,I,OAAWuN,KAAXvN,QAoDOwN,GAnDE,WACf,IAGQ3D,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACF7a,EAAWC,cACjB0K,QAAQC,IAAIiQ,GACZhO,qBAAU,WACR7M,EAAS2a,QACR,CAAC3a,IACJ,IAAME,EAAWC,cAIjB,OACE,uCACE,eAAC,IAAD,CAAO0F,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QANK,WACjBR,EAAS,kBAKL,qCAGA2a,EAAM5Y,OAMN,uCACE,gBAAC,KAAD,CAAOE,WAAY0Y,EAAO9J,OAAO,MAAjC,UACE,eAACC,GAAD,CAAQtP,MAAM,OAAOuP,UAAU,QAAW,QAC1C,eAACD,GAAD,CAAQtP,MAAM,OAAOuP,UAAU,QAAW,QAC1C,eAACD,GAAD,CACEtP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,KAAD,CAAQ0Z,QAAM,EAACha,QAAS,aAAxB,wBAHA,aAUR,eAAC,KAAD,UACE,eAAC,IAAD,CAAMD,GAAG,IAAT,uBAtBJ,uCACE,wBACA,eAAC,KAAD,CAAMO,KAAK,iBCvBbqN,I,OAAUmD,KAAVnD,OAsEOoQ,GArEE,WACf,IAAMze,EAAWC,cACAE,cAWjB,OACE,uCACE,eAAC,GAAD,CAAOmO,MAAO,EAAd,gCACA,gBAAC,KAAD,CACElN,KAAK,QACL+T,cAAe,CACb8B,UAAU,GAEZ5B,SAlBW,SAACC,GPqBM,IAACgJ,EOpBvB3T,QAAQC,IAAI,WAAY0K,GAExBtV,GPkBuBse,EOlBHhJ,EPkBE,yCAAU,WAAOtV,GAAP,kBAAAqK,EAAA,sEAEhCrK,EAAS,CAAEW,KAAMpE,KAFe,SrBKTmiB,EqBFeJ,ErBEHhY,GAAIoB,KAAK,SAAUgX,GqBLtB,gBAGxBld,EAHwB,EAGxBA,KACRxB,EAAS,CAAEW,KAAMxE,GAAauO,QAASlJ,IACvCxB,EAAS,CAAEW,KAAMnE,KALe,kDAOhC0N,GAAY,EAAD,GAAQzN,IAPa,kCrBKV,IAACiiB,IqBLS,qBAAV,yDOFlBnJ,eAbiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAanBC,aAAa,MAPf,UASE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAD,CAAOqL,WAAS,MAGlB,eAAC,KAAKpV,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAD,MAGF,gBAAC,KAAK/J,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAME,eAAC,KAAD,CAAQpO,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,UACE,eAAC,IAAD,CAAMtV,GAAG,SAAT,8B,UC/DJuQ,I,OAAWuN,KAAXvN,QACA2N,GAAkBC,KAAlBD,cA2FOE,GA1FG,WAChB,MAAoCnT,aAAY,SAACC,GAAD,OAAWA,EAAMmT,SAAzDA,EAAR,EAAQA,MAAOjT,EAAf,EAAeA,UACT7L,GADN,EAA0BmK,MACTlK,eACjB4M,qBAAU,WACR7M,EAAS+Z,QACR,CAAC/Z,IACJ,IAAME,EAAWC,cAIX4e,EAAUJ,KAChB,OAAI9S,EAAkB,eAAC,KAAD,CAAM7K,KAAK,WACjC2J,QAAQC,IAAIkU,GAEV,uCACE,eAAC,IAAD,CAAOjZ,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QATK,WACjBR,EAAS,kBAQL,wBAEF,wBACC2L,EACC,qCACE,eAAC,KAAD,CAAM7K,KAAK,YAGb,CACE+d,EAAQvQ,GACN,eAAC,KAAD,CACEwQ,WAAW,WACXhe,KAAK,QACLmB,WAAY2c,EACZ1c,WAAY,SAACC,GAAD,OACV,gBAAC,KAAK7B,KAAN,CAEEye,QAAS,CACP,eAAC,KAAD,UACE,eAAC,IAAD,CAAMxe,GAAE,qBAAgB4B,EAAKiP,KAA7B,qBAJN,UAQE,eAAC,KAAK9Q,KAAKmC,KAAX,CAAgBjB,MAAOW,EAAKib,SAC3Bjb,EAAKhB,WATR,IASqBgB,EAAKf,YARnBe,EAAKiP,QAahB,uCACE,gBAAC,KAAD,CAAOnP,WAAY2c,EAAO/N,OAAO,MAAjC,UACE,eAAC,GAAD,CAAQrP,MAAM,cAAcuP,UAAU,UAAa,UACnD,eAAC,GAAD,CACEvP,MAAM,OAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,iCACGA,EAAO/P,WADV,IACuB+P,EAAO9P,eAH5B,QAON,eAAC,GAAD,CACEI,MAAM,aACNuP,UAAW,CAAC,aAAc,SACtB,mBAEN,eAAC,GAAD,CACEvP,MAAM,QACNuP,UAAW,CAAC,QAAS,SACjB,cAEN,eAAC,GAAD,CACEvP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAE,qBAAgB2Q,EAAOE,KAA/B,wBAJF,aAUR,eAAC,KAAD,UACE,eAAC,IAAD,CAAM7Q,GAAG,IAAT,6BCjCDye,I,OA/CK,WAClB,IAAQnf,EAAS2L,aAAY,SAACC,GAAD,OAAWA,EAAMmT,SAAtC/e,KACFC,EAAWC,cAETqH,GADSnH,cACFqW,cAAPlP,IAIR,OAHAuF,qBAAU,WACR7M,EAASwI,GAAQlB,MAChB,CAACtH,EAAUsH,IACTvH,GACL4K,QAAQC,IAAI7K,GAEV,uCACE,gBAAC,KAAD,CACE2B,MAAM,YACNkN,UAAQ,EACRC,OAAQ,CAAE2L,IAAK,EAAGC,GAAI,EAAG9L,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAHpD,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,cAAzB,SAAwC/O,EAAKud,SAC7C,eAAC,KAAa9c,KAAd,CAAmBsO,MAAM,aAAzB,SACG/O,EAAKsB,aAER,eAAC,KAAab,KAAd,CAAmBsO,MAAM,YAAzB,SACG/O,EAAKuB,YAGR,eAAC,KAAad,KAAd,CAAmBsO,MAAM,QAAzB,SAAkC/O,EAAKuI,QACvC,eAAC,KAAa9H,KAAd,CAAmBsO,MAAM,aAAzB,SACG/O,EAAKiI,WAAW5G,OAEnB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,kBAAzB,SACGjB,KAAO9N,EAAKwd,iBAAiBrP,OAAO,mBAGzC,eAAC,KAAD,CAAcxM,MAAM,gBAAgBkN,UAAQ,EAA5C,SACG0F,OAAO4D,QAAQnY,EAAKgN,YAAYM,KAAI,mCAAErK,EAAF,KAAOW,EAAP,YACnC,eAAC,KAAanD,KAAd,CAA6BsO,MAAO9L,EAApC,SACGW,GADqBX,QAK5B,eAAC,KAAD,UACE,eAAC,IAAD,CAAMvC,GAAG,SAAT,wBAjCY,O,kECwJL0e,IAzIMjJ,KAAbD,SACgBG,KAAhBD,YAEc,WACpB,IAAQ7O,EAAOkP,cAAPlP,GACR,EAA0BoK,mBAAS,WAAnC,mBACA,GADA,UACiChG,aAAY,SAACC,GAAD,OAAWA,EAAM8K,eAA3C5K,GAAnB,EAAQ8B,UAAR,EAAmB9B,WACnB,EAA8B6F,oBAAS,GAAvC,mBAAgB0N,GAAhB,WACA,EAAoC1N,mBAAS,CAC3C2G,KAAM,SACNhH,MAAO,SAFT,mBAAOgO,EAAP,KAAmBC,EAAnB,KAIA,EAAe5I,KAAKC,UAAbC,EAAP,oBACM5W,EAAWC,cASjB4M,qBAAU,WACJvF,IACF8X,GAAW,GAEXpf,EdnCsB,SAACsH,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAEhCrK,EAAS,CAAEW,KAAM7D,KAFe,SAGT+N,GAAiBvD,GAHR,uBAGxB9F,EAHwB,EAGxBA,KACRxB,EAAS,CAAEW,KAAM9D,GAAqB6N,QAASlJ,IAC/CxB,EAAS,CAAEW,KAAM5D,KALe,kBAOzByE,GAPyB,kCAShC0I,GAAY,EAAD,GAAQlN,IATa,0DAAR,sDcmCb6L,CAAavB,IAAKwP,MAAK,SAACtV,GAC/BoV,EAAKG,eAAevV,GACpB4d,GAAW,SAGd,CAACpf,EAAUsH,IAQd,OAAIuE,EAAkB,eAAC,KAAD,IAEpB,uCACE,eAAC,IAAD,CAAgBkQ,OAAQC,KAAxB,SACE,gBAAC,KAAD,CACEuD,eATe,SAACC,EAAeC,GACrC9U,QAAQC,IAAI4U,EAAeC,GACL,IAAlBA,EAAUpH,MAAiC,IAAnBoH,EAAUpO,OAAaiO,EAAcG,IAQ3D7I,KAAMA,EACNxV,KAAK,QACLub,OAAO,aACP1H,SAAU,CAAElG,KAAM,GAElBsG,SApCS,SAACC,GdXW,IAAClN,Eca1BpI,EADEsH,EdDuB,SAACA,EAAIqG,GAAL,gDAAmB,WAAO3N,GAAP,kBAAAqK,EAAA,sEAE9CrK,EAAS,CAAEW,KAAM7D,KAF6B,SAGvB+N,GAAoBvD,EAAIqG,GAHD,gBAGtCnM,EAHsC,EAGtCA,KACRxB,EAAS,CAAEW,KAAMhE,GAAkB+N,QAASlJ,IAC5CxB,EAAS,CAAEW,KAAM5D,KAL6B,kDAO9CmN,GAAY,EAAD,GAAQlN,IAP2B,0DAAnB,sDcEhB8L,CAAgBxB,EAAIgO,IdbHlN,EceDkN,EdfA,yCAAc,WAAOtV,GAAP,kBAAAqK,EAAA,sEAEzCrK,EAAS,CAAEW,KAAM7D,KAFwB,SAGlB+N,GAAoBzC,GAHF,gBAGjC5G,EAHiC,EAGjCA,KACRxB,EAAS,CAAEW,KAAMjE,GAAkBgO,QAASlJ,IAC5CxB,EAAS,CAAEW,KAAM5D,KALwB,kDAOzCmN,GAAY,EAAD,GAAQlN,IAPsB,0DAAd,yDcgDrBuY,eAnBe,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAmBjBC,aAAa,MACbiK,QAAQ,qBAERC,UAAW,CACTC,iBAAkB,CAChB/Z,MAAO,CACLga,QAAS,SAGb3O,OAAQ,SAAC3N,EAAOuc,GACd,OACE,eAAC,KAAKtf,KAAN,CAAW0U,WAAY,CAAEY,OAAQ,GAAjC,SACE,eAAC,IAAD,UAAQgK,QArBlB,UA2BE,eAAC,KAAD,CACE1e,KAAK,OACL0N,MAAM,OACN4O,YAAY,aACZqC,MAAM,KACNrK,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,gCAKf,eAAC,KAAD,CACEnJ,KAAK,OACL0N,MAAM,OACN4O,YAAY,aACZqC,MAAM,KACNrK,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,gCAKf,eAAC,KAAD,CACEnJ,KAAK,QACL0N,MAAM,QACNiR,MAAM,KACNrK,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,gCAKf,eAAC,KAAD,CACEnJ,KAAK,QACLqc,aAAa,OACb3O,MAAM,QACN4G,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,8BAMnB,eAAC,KAAD,UACE,eAAC,KAAD,CAAKuL,OAAQ,EAAb,SACE,gBAAC,IAAD,sBAEE,eAAC,KAAD,CAAKzE,MAAOgO,EAAWhO,MAAvB,SAA+BgO,EAAWhH,mBCtJ9CrH,I,OAAWuN,KAAXvN,QAkDOgP,GAjDO,WACpB,IAAQvJ,EAAe/K,aAAY,SAACC,GAAD,OAAWA,EAAM8K,cAA5CA,WACFzW,EAAWC,cACjB0K,QAAQC,IAAI6L,GACZ5J,qBAAU,WACR7M,EAASgW,QACR,CAAChW,IACJ,IAAME,EAAWC,cAIjB,OACE,uCACE,eAAC,IAAD,CAAO0F,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QANU,WACtBR,EAAS,uBAKL,qCAGAuW,EAAWxU,OAMX,uCACE,gBAAC,KAAD,CAAOE,WAAYsU,EAAY1F,OAAO,MAAtC,UACE,eAAC,GAAD,CAAQrP,MAAM,OAAOuP,UAAU,QAAW,QAC1C,eAAC,GAAD,CAAQvP,MAAM,OAAOuP,UAAU,QAAW,QAC1C,eAAC,GAAD,CAAQvP,MAAM,QAAQuP,UAAU,SAAY,SAC5C,eAAC,GAAD,CACEvP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAE,2BAAsB2Q,EAAOE,KAArC,wBAJF,aAUR,eAAC,KAAD,CAAQ3Q,KAAK,YAAYoV,SAAS,SAAlC,SACE,eAAC,IAAD,CAAMtV,GAAG,IAAT,uBAvBJ,uCACE,wBACA,eAAC,KAAD,CAAMO,KAAK,iBCpBbgQ,I,OAAWuN,KAAXvN,QA8COiP,GA7CE,WACf,IAAQpO,EAAUnG,aAAY,SAACC,GAAD,OAAWA,EAAMkG,SAAvCA,MACF7R,EAAWC,cACjB4M,qBAAU,WACR7M,EAASod,QACR,CAACpd,IACJ,IAAME,EAAWC,cAIjB,OACE,uCACE,eAAC,IAAD,CAAO0F,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QANK,WACjBR,EAAS,kBAKL,yBAEF,wBACE2R,EAAM5P,OAKN,qCACE,gBAAC,KAAD,CAAOE,WAAY0P,EAAOd,OAAO,MAAjC,UACE,eAAC,GAAD,CAAQrP,MAAM,QAAQuP,UAAU,QAAW,QAC3C,eAAC,GAAD,CACEvP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAE,qBAAgB2Q,EAAOE,KAA/B,wBAJF,eATV,qCACE,eAAC,KAAD,CAAMtQ,KAAK,YAoBf,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAG,IAAT,wB,UC9CKyf,I,OAAiB,kBACjBC,GAAgB,gBAEhBC,GAAe,eAEfC,GAAc,CACzB,CACEC,QAAS,UACTC,YAAa,CACX,CACEnf,KAAM,iBACNiX,KAbuB,mBAezB,CACEjX,KAAM,wBACNiX,KAhBuB,mBAkBzB,CACEjX,KAAM,iBACNiX,KAAM6H,IAER,CACE9e,KAAM,gBACNiX,KAAM8H,MAIZ,CACEG,QAAS,QACTC,YAAa,CACX,CACEnf,KAAM,eACNiX,KAAM+H,OCwGCI,GAxHE,WACf,IAAMF,EAAUD,GAAYhT,KAAI,SAACnL,GAAD,OAAUA,EAAKoe,WACvChZ,EAAOkP,cAAPlP,GACAS,EAAS2D,aAAY,SAACC,GAAD,OAAWA,EAAMkG,SAAtC9J,KACR,EAAe2O,KAAKC,UAAbC,EAAP,oBACM5W,EAAWC,cAiBjB4M,qBAAU,WACR,GAAIvF,EAAI,CACNtH,EXnBiB,SAACsH,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAE3BrK,EAAS,CAAEW,KAAMrD,KAFU,SAGJuN,GAAYvD,GAHR,gBAGnB9F,EAHmB,EAGnBA,KACRxB,EAAS,CAAEW,KAAMtD,GAAgBqN,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAMpD,KALU,kDAO3B2M,GAAY,EAAD,GAAQ1M,IAPQ,0DAAR,sDWmBRwL,CAAQ1B,IACjB,IAAMmZ,EAASH,EAAQjT,KAAI,SAACqT,GAC1B,OAAO,gBAAGA,EAAS3Y,EAAKwY,gBAE1B3J,EAAKG,eAAL,2BAAyBhP,GAAS0Y,OAEnC,CAACzgB,EAAUsH,IAMd,OACE,gBAAC,KAAD,CACEsP,KAAMA,EACNxV,KAAK,QACL6T,SAAU,CACRlG,KAAM,GAERmG,WAAY,CACVnG,KAAM,IAERoG,cAAe,CACb8B,UAAU,GAEZ5B,SA3Ca,SAACC,GAChB3K,QAAQC,IAAI0K,GACZ,IAF2B,EAEvBqL,EAAQ,GAFe,eAGbL,GAHa,IAG3B,gCAAShe,EAAT,QAAuBqe,EAAQA,EAAMC,OAAOtL,EAAOhT,KAHxB,8BAQ3BqI,QAAQC,IAAI+V,GAGV3gB,EADEsH,EXSkB,SAACA,EAAIS,GAAL,gDAAc,WAAO/H,GAAP,kBAAAqK,EAAA,sEAEpCrK,EAAS,CAAEW,KAAMrD,KAFmB,SAGbuN,GAAevD,EAAIS,GAHN,gBAG5BvG,EAH4B,EAG5BA,KACRxB,EAAS,CAAEW,KAAMxD,GAAauN,QAASlJ,IACvCxB,EAAS,CAAEW,KAAMpD,KALmB,kDAOpC2M,GAAY,EAAD,GAAQ1M,IAPiB,0DAAd,sDWRXyL,CAAW3B,EAAD,YAAC,eAASgO,GAAV,IAAkBiL,YAAaI,KXF9B,SAAC5Y,GAAD,gDAAU,WAAO/H,GAAP,kBAAAqK,EAAA,sEAEhCrK,EAAS,CAAEW,KAAMrD,KAFe,SxBsBT8K,EwBnBeL,ExBmBFzB,GAAIoB,KAAK,SAAUU,GwBtBvB,gBAGxB5G,EAHwB,EAGxBA,KACRxB,EAAS,CAAEW,KAAMzD,GAAawN,QAASlJ,IACvCxB,EAAS,CAAEW,KAAMpD,KALe,kDAOhC2M,GAAY,EAAD,GAAQ1M,IAPa,kCxBsBV,IAAC4K,IwBtBS,qBAAV,sDWIXyY,CAAW,2BAAKvL,GAAN,IAAciL,YAAaI,OA+B9CpL,eAnBmB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAmBrBC,aAAa,MAdf,UAgBE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,+BANf,SAUE,eAAC,KAAD,CAAO1G,SA7BI,iBA+Bb,eAAC,KAAKrD,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,+BANf,SAUE,eAAC,KAAD,MAED8V,GAAYhT,KAAI,SAACnL,GAChB,IAAM4e,EAAU5e,EAAKqe,YAAYlT,KAAI,SAAC0T,GACpC,MAAO,CACL/d,IAAK+d,EAAW1I,KAChBvJ,MAAOiS,EAAW3f,KAClBuC,MAAOod,EAAW1I,SAGtB,OACE,qCACE,eAAC,KAAK7X,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAERkG,SAAU,CAAEa,OAAQ,EAAG/G,KAAM,IAE7B3N,KAAMc,EAAKoe,QACXxR,MAAO5M,EAAKoe,QARd,SAUE,eAAC,KAASU,MAAV,CAAgBF,QAASA,EAASG,aAAc,MAJ3C/e,EAAKoe,cASlB,eAAC,KAAK9f,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,SAME,gBAAC,IAAD,WACE,eAAC,KAAD,CAAQpO,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,CAAQpV,KAAK,YAAYoV,SAAS,SAAlC,SACE,eAAC,IAAD,CAAMtV,GAAG,SAAT,6B,iDC7GJ8Q,I,cAASC,KAATD,MA2MO2P,GAzMC,SAAC,GAAc,IAAZnhB,EAAW,EAAXA,KACjB,EAAoC2R,mBAAS,CAC3CyP,SACE,+EACF9c,SAAS,IAHX,mBAAO+c,EAAP,KAoCA,GApCA,KAoCgC1P,mBAAS,CACvC,CACEwH,IAAK,KACL9X,KAAM,YACNsM,OAAQ,OACR2L,IAAK,mFALT,mBAAOZ,EAAP,KAAiB4I,EAAjB,KASMxd,EAAQ,yCAAG,gCAAAwG,EAAA,6DAAS+M,EAAT,EAASA,KACxBzM,QAAQC,IAAIwM,GADG,SAEG,IAAIkF,SAAQ,SAACC,GAC7B,IAAM+E,EAAS,IAAIC,WACnBD,EAAOE,cAAcpK,EAAKC,eAC1BiK,EAAOG,OAAS,kBAAMlF,EAAQ+E,EAAO7V,YALxB,OAETvK,EAFS,OAQfmgB,EAAY,CACV,CACEnI,IAAK,KACL9X,KAAMgW,EAAKhW,KACXsM,OAAQ,OACR2L,IAAKnY,KAbM,2CAAH,sDAkBRwgB,EAAS,yCAAG,WAAOtK,GAAP,kBAAA/M,EAAA,yDACZnJ,EAAMkW,EAAKiC,IADC,gCAGF,IAAIiD,SAAQ,SAACC,GACvB,IAAM+E,EAAS,IAAIC,WACnBD,EAAOE,cAAcpK,EAAKC,eAC1BiK,EAAOG,OAAS,kBAAMlF,EAAQ+E,EAAO7V,YANzB,OAGdvK,EAHc,eASVygB,EAAQ,IAAIC,KACZ1gB,IAAMA,EACM2gB,OAAOC,KAAK5gB,GACpB6gB,SAASC,MAAML,EAAMM,WAZf,2CAAH,sDAyBVb,EAAW/c,QAAW6d,GAAA,EAAsBC,GAAA,EAFjD,IAMMC,EAAY,kBAChB,eAAC,KAAD,CAASC,QAAM,EAAf,SACE,eAAC,KAAD,CACEvhB,OAAO,mDACP6X,SAAS,eACTF,SAAUA,EACV5U,SAAUA,EACV6d,UAAWA,EALb,SAOGjJ,EAASxW,QAAU,GAAK,gBAmD/B,OACE,uCACE,eAAC,KAAD,UACE,eAAC,GAAD,CAAM4D,MAAO,CAAEyc,SAAU,IAAzB,4BAEF,kCACE,+BACE,eAACF,EAAD,QAIJ,gBAAC,KAAD,CACE1gB,MAAM,kBACNkN,UAAQ,EACRC,OAAQ,CAAE2L,IAAK,EAAGC,GAAI,EAAG9L,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAHpD,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,eAAzB,SACG/O,EAAKud,SAER,eAAC,KAAa9c,KAAd,CAAmBsO,MAAM,aAAzB,SACG/O,EAAKsB,aAER,eAAC,KAAab,KAAd,CAAmBsO,MAAM,YAAzB,SACG/O,EAAKuB,YAER,eAAC,KAAad,KAAd,CAAmBsO,MAAM,aAAzB,SACG/O,EAAKiI,WAAW5G,OAEnB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,kBAAzB,SACGjB,KAAO9N,EAAKwd,iBAAiBrP,OAAO,gBAEvC,eAAC,KAAa1N,KAAd,CAAmBsO,MAAM,QAAzB,SAAkC/O,EAAK8R,MAAMzQ,UAE/C,eAAC,KAAD,CAAcM,MAAM,gBAAgBkN,UAAQ,EAA5C,SACG0F,OAAO4D,QAAQnY,EAAKgN,YAAYM,KAAI,mCAAErK,EAAF,KAAOW,EAAP,YACnC,eAAC,KAAanD,KAAd,CAA6BsO,MAAO9L,EAApC,SACGW,GADqBX,QAK5B,eAAC,KAAD,UACE,eAAC,IAAD,CAAMvC,GAAG,IAAT,gC,kDC1NJ8hB,GAAY,EACZC,IAAW,IAAIhV,MAAOiV,cAAcC,QAAQ,OAAQ,IACpDC,GAAQ,IAAInV,KAAK,cACjBoV,GAAQ,IAAIpV,KAAK,cAGbqV,KAMAA,KAKAA,KAQD,SAASA,KACd,OAAOC,OAAOP,M,WCZR5D,GAAkBC,KAAlBD,cAkGOoE,GA9FE,WACf,IAAM/iB,EAAWC,cACX8e,EAAUJ,KACVze,EAAWC,cACX6iB,EAAIC,sBAEV,EAAkCvR,mBAAS,CACzCjE,SAAUI,OACVmJ,OAAQnJ,SAFV,mBAAOpG,EAAP,KAAkByb,EAAlB,KAIA,EAAsBxR,mBAAS,IAA/B,mBACA,GADA,UACqChG,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAA1DA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAhB,EAA2B1B,MAE3B0C,qBAAU,WACHhB,IACCkT,EAAQvQ,GACVwU,EAAEG,QAAQC,SAASC,WAAW,aAE9BL,EAAEG,QAAQC,SAASC,WAAW,mBAGjC,CAACtE,IAEJ,IAAMuE,EAAc,yCAAG,WAAO1O,EAAMF,EAASvK,GAAtB,kBAAAE,EAAA,sDACfmN,EAAY3J,KAAO+G,EAAK2O,OACxB9L,EAAU5J,KAAO+G,EAAK4O,KAC5B7Y,QAAQC,IACgC,GAAtCnD,EAAUgG,SAAS6M,KAAK9C,IACY,GAAlC/P,EAAUuP,OAAOsD,KAAK7C,IAIc,GAAtChQ,EAAUgG,SAAS6M,KAAK9C,IACU,GAAlC/P,EAAUuP,OAAOsD,KAAK7C,KAEtByL,EAAa,CACXzV,SAAU+J,EACVR,OAAQS,IAEVzX,EACEwH,GAAsB,CACpBiG,SAAU+J,EACVR,OAAQS,MAKd/C,EAAQ9I,GACRjB,QAAQC,IAAI,QAzBS,2CAAH,0DAyCpB,OACE,qCACE,sBAAKtK,UAAU,WAAf,SACE,sBAAKA,UAAU,gBAAf,SACE,eAAC,KAAD,CACEmjB,IAAKT,EACLU,QAAS,CACPC,KACAC,KACAC,KACAC,MAEFC,cAAe,CACbzU,KAAM,8BACN0U,OAAQ,QACR3U,MAAO,gCAET4U,YAAY,eACZC,cAAc,EACdC,UAAQ,EACRC,cAAe,CAAEC,WAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAC1CC,OAAQhB,EACRiB,aA/BiB,SAACC,GAC1B,OACE,uCACE,6BAAIA,EAAUC,WACd,6BAAID,EAAUrf,MAAMzD,QACpB,6BAAI8iB,EAAUrf,MAAMuf,cAAcpH,aA2B9BqH,WApCe,SAACC,GACO,cAA3BA,EAAUzf,MAAM0a,SAAyB3f,EAAS0kB,EAAUzf,MAAMkU,eCtC3DwL,OAvBf,YAII,IAHFzgB,EAGC,EAHDA,SAGC,IAFD0gB,2BAEC,MAFqB,KAErB,MADDC,2BACC,SACKhlB,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YACzCie,GAAY,EAchB,OAbIF,IACEC,GACFC,EAAYF,EAAoB3I,OAC9B,SAAC8I,GAAD,OAAuE,IAA/D,CAAC9E,GAAeC,GAAcF,IAAgB9E,QAAQ6J,MAGhEta,QAAQC,IAAIoa,IAEZA,EAAY,CAAC7E,GAAeC,GAAcF,IAAgB/C,MACxD,SAAC8H,GAAD,OAA6C,IAArCH,EAAoB1J,QAAQ6J,OAInCllB,GAAQilB,EAAY5gB,EAAW,eAAC,IAAD,CAAU3D,GAAG,QAAQiiB,SAAO,KCOpE,IC7BewC,OALf,YAAoC,IAAb9gB,EAAY,EAAZA,SAErB,OADa8C,KAAKC,MAAML,aAAaC,QAAQ,YAC/B,eAAC,IAAD,CAAUtG,GAAG,IAAIiiB,SAAO,IAAMte,GCmF/B+gB,I,OApEI7O,KAAXD,OACK,WAeXxJ,qBAAU,YAIV,WAEE,GAAM,iBAAkBgV,OAKnB,GAAgC,YAA5BuD,aAAarE,WAED,IAAIqE,aAAa,iBAID,WAA5BA,aAAarE,YACpBqE,aAAaC,oBAAoBvO,MAAK,SAAUiK,GAE9C,GAAmB,YAAfA,EACiB,IAAIqE,aAAa,qBAdxCE,MAAM,sDANRC,KACC,IA+CH,OAAO,iCCPMC,GA/DW,WACxB,MAAkC9T,oBAAS,GAA3C,mBAAO+T,EAAP,KAAkBC,EAAlB,KACM1lB,EAAWC,cACjB,EAA6ByL,aAAY,SAACC,GAAD,OAAWA,EAAMmT,SAAlDjT,EAAR,EAAQA,UAAW1B,EAAnB,EAAmBA,MACbkL,EAAQ,yCAAG,WAAOC,GAAP,UAAAjL,EAAA,sDACfrK,EAASqI,GAAciN,EAAOhN,QACzBuD,GAAc1B,GACjBI,IAAQmK,QAAQ,cAElBgR,GAAa,GACb/a,QAAQC,IAAI,WAAY0K,GACxB3K,QAAQC,IAAI6a,IAAc5Z,IAAc1B,GAPzB,2CAAH,sDAad,OACE,uCACE,eAAC,KAAWkE,MAAZ,CAAkBC,MAAO,EAAGzI,MAAO,CAAEyF,UAAW,UAAhD,4BAGA,gBAAC,KAAD,CACElK,KAAK,QACL6T,SAAU,CAAElG,KAAM,GAClBmG,WAAY,CAAEnG,KAAM,GACpBsG,SAAUA,EACVE,eAbiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAanBC,aAAa,MANf,UAQE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,WACN1N,KAAK,WACLqc,aAAa,OACb/H,MAAO,CAAC,CAAEC,UAAU,EAAMpL,QAAS,6BAJrC,SAME,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,mBACN1N,KAAK,kBACLqc,aAAa,OACb/H,MAAO,CAAC,CAAEC,UAAU,EAAMpL,QAAS,6BAJrC,SAME,eAAC,KAAD,MAEDkb,IAAc5Z,IAAc1B,GAC3B,eAAC,KAAD,CAAOI,QAAQ,aAAa5J,KAAK,YAEnC,eAAC,KAAKH,KAAN,CAAW0U,WAAY,CAAEY,OAAQ,IAAjC,SACE,eAAC,KAAD,CAAQnV,KAAK,UAAUoV,SAAS,SAAhC,yBAMJ,sBAAKlQ,MAAO,CAAEyF,UAAW,UAAzB,SACE,eAAC,IAAD,CAAM7K,GAAG,QAAT,iCCAOklB,GAjEK,SAAC,GAAsB,IAAD,EAAnBC,EAAmB,EAAnBA,OAAQ7lB,EAAW,EAAXA,KACrB8lB,EAAana,aAAY,SAACC,GAAD,OAAWA,EAAMka,YAA1CA,SACFjI,EAAQ/P,OACR7N,EAAWC,cACjB,EAAwByR,mBAASkM,EAAMxU,OAAOoB,YAA9C,mBAAOpB,EAAP,KAAa0c,EAAb,KAIAjZ,qBAAU,WACR7M,ECS+B,SAACoJ,GAAD,gDAAU,WAAOpJ,GAAP,kBAAAqK,EAAA,sEAEzCrK,EAAS,CAAEW,KAAM9C,KAFwB,SAGlBgN,GAAwBzB,GAHN,gBAGjC5H,EAHiC,EAGjCA,KACRxB,EAAS,CAAEW,KAAM3C,GAAuB0M,QAASlJ,IACjDxB,EAAS,CAAEW,KAAM7C,KALwB,kDAOzCoM,GAAY,EAAD,GAAQnM,IAPsB,0DAAV,sDDTtBoL,CAAoBC,MAC5B,CAACpJ,EAAUoJ,IAWd,OACE,uCACE,eAAC,KAAWiF,MAAZ,CAAkBC,MAAO,EAAzB,sBACA,eAAC,KAAD,CAAYzK,SAnBC,SAACkiB,EAAMC,GACtBF,EAAQE,IAkB0BC,OAAO,OAAOhF,aAAcrD,IAC5D,eAAC,KAAD,UACE,eAAC,IAAD,CAAMnd,GAAE,2BAAsB2I,GAA9B,gCAEO,OAARyc,QAAQ,IAARA,GAAA,UAAAA,EAAUlF,aAAV,eAAiB1e,QAChB,qCACE,gBAAC,KAAD,CACEE,WAAY0jB,EAASlF,MACrB5P,OAAO,MACPlL,MAAO,CAAE,aAAc,UAHzB,UAKE,eAAC,KAAMmL,OAAP,CACEtP,MAAM,QACNuP,UAAU,SACN,SAEN,eAAC,KAAMD,OAAP,CACEtP,MAAM,aACNuP,UAAU,YAEVC,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOsD,GAAMjD,OAAO,gBAD1C,aAGN,eAAC,KAAM8C,OAAP,CACEtP,MAAM,WACNuP,UAAU,UAEVC,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOsD,GAAMjD,OAAO,gBAD1C,gBAMV,eAAC,KAAD,IAEF,eAAC,KAAD,UACE,eAAC,IAAD,CAAMzN,GAAG,IAAT,oBAEF,eAAC,KAAD,CAAQC,QAhDK,WACfiK,QAAQC,IAAI7K,GACN,OAAN6lB,QAAM,IAANA,KAAQM,KAAK,WAAY,CACvBC,WAAYpmB,EAAKuI,MACjB8d,aAAc,gCACdC,QAAS,UA2CT,sBE3DEhY,I,OAAUmD,KAAVnD,OAqFOoQ,GApFE,WACf,IAAMze,EAAWC,cAETqH,GADSnH,cACFqW,cAAPlP,IAuBR,OACE,uCACE,eAAC,GAAD,CAAOgH,MAAO,EAAd,gCACA,gBAAC,KAAD,CACElN,KAAK,QACL+T,cAAe,CACb8B,UAAU,GAEZ5B,SA9BW,SAACC,GAChB3K,QAAQC,IAAI,WAAY0K,GACxB,IDoB0BlN,ECpBpBmP,EAAajC,EAAO,gBACpBkC,EAAYD,EAAW,GACvBE,EAAUF,EAAW,GAC3BvX,GDiB0BoI,EChBV,CACZgB,KAAM9B,EACNgf,QAAS,CACP5kB,MAAO4T,EAAO5T,MACd6kB,WAAYjR,EAAOxS,YACnB0U,YACAC,YDUmB,yCAAc,WAAOzX,GAAP,kBAAAqK,EAAA,sEAEvCrK,EAAS,CAAEW,KAAM9C,KAFsB,SAGhBgN,GAAkBzC,GAHF,gBAG/B5G,EAH+B,EAG/BA,KACRxB,EAAS,CAAEW,KAAMlD,GAAgBiN,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAM7C,KALsB,kDAOvCoM,GAAY,EAAD,GAAQnM,IAPoB,0DAAd,yDCSrBwX,eAbiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAanBC,aAAa,MAPf,UASE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,QACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,6BANf,SAUE,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CAAWsO,MAAM,cAAc1N,KAAK,cAApC,SACE,eAAC,KAAM6U,SAAP,CAAgBqC,KAAM,MAExB,eAAC,KAAK9X,KAAN,CACEsO,MAAM,OACN1N,KAAK,eACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAW4L,YAAZ,MAGF,gBAAC,KAAK3V,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAME,eAAC,KAAD,CAAQpO,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,UACE,eAAC,IAAD,CAAMtV,GAAG,YAAT,8B,oBN5DN+lB,GAAU,SAACnc,EAAGkR,GAAJ,OACdkL,MAAMpc,IAAMoc,MAAMlL,IAAMlR,GAAK,IAAIqc,cAAcnL,GAAK,IAAMlR,EAAIkR,GAG1DoL,GAAY,CAChB,EAAG,QACH,EAAG,UACH,EAAG,SACH,EAAG,SAECC,GAAsB,GACtBC,GAAW,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,sBACrCvkB,GAAI,EAAGA,GAAI,IAAKA,IAAK,EAC5BskB,GAAoB3hB,KAAK,CACvBjC,IAAKV,GACLlB,KAAM,UACN0lB,WAAY9Y,KAAK+Y,MAAsB,GAAhB/Y,KAAKgZ,UAC5BC,QAASJ,GAAS7Y,KAAK+Y,MAAM/Y,KAAKgZ,SAAWH,GAAS5kB,SACtDyL,OAAQiZ,GAAU3Y,KAAK+Y,MAAsB,GAAhB/Y,KAAKgZ,UAAiB,GACnDE,UAAW1Z,KAAK2Z,MAAQnZ,KAAK+Y,MAAsB,IAAhB/Y,KAAKgZ,UACxCI,MAAOpZ,KAAK+Y,MAAsB,IAAhB/Y,KAAKgZ,UAAmB1kB,GAC1C+kB,SAAUrZ,KAAKsZ,KAAqB,IAAhBtZ,KAAKgZ,UAAkB,EAC3CO,KACEjlB,GAAI,IAAM,EACN,qKACA,yCAoDJ,YAEG,IACEklB,EAAA,EApDX,IAwFMC,GAAW,CACf,CACE/lB,MAAO,QACPuP,UAAW,QACXgK,UAAW,cACXjY,IAAK,QACL+c,MAAO,IAET,CACEre,MAAO,QACPuP,UAAW,QACXjO,IAAK,QACLkO,OAAQ,SAACC,EAAMC,GAAP,gBAAqBA,EAAO1P,MAA5B,YAAqC0P,EAAOzD,YACpD2N,OAAQ,SAACjR,EAAGkR,GAAJ,OAAUiL,GAAQnc,EAAE3I,MAAO6Z,EAAE7Z,SAEvC,CACEA,MAAO,aACPuP,UAAW,WACXjO,IAAK,WACLiY,UAAW,OACX/J,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOsD,GAAMjD,OAAO,YAC9CoN,OAAQ,SAACjR,EAAGkR,GAAJ,OAAUiL,GAAQnc,EAAEoD,SAAU8N,EAAE9N,aAGtClN,GACJ,gBAAC,IAAD,WACE,eAAC,IAAKC,KAAN,sBAAe,KACf,eAAC,IAAKA,KAAN,sBAAe,KACf,eAAC,IAAKA,KAAN,sBAAe,QAGJ,cACb,IAAQoL,EAAWF,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAxCA,OACR,EAAwB8F,mBAAS9F,GAAjC,mBAAOpK,EAAP,KACMqa,GADN,KACkBC,oBAClB,OACE,eAAC,IAAD,CAAgBC,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASyM,GACT5L,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GAIxB,IAAIrS,EAAaX,EA2EjB,OA7CIgT,GACEF,OAAOC,KAAKC,GAAQvS,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAKC,GAAQ2I,MAAK,SAACna,GAC/B,OAAKwR,EAAOxR,MAGRwR,EAAOxR,GAAK+U,SAAZ,UAAwB1V,EAAKW,YASrCiZ,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAChC,OAAKiZ,EAAOjZ,KAID,YAAPA,GAA4B,WAAPA,IAGN,OAAfiZ,EAAOjZ,KAMH,GAFNX,EAAKW,GAAKyY,OACR,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,gBAa3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,GACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,GAMpBC,cAAc,SACdC,QAAS,CACPpb,MAAO,2BACPqb,QAAS,oDAEXC,cAAe,iBAAM,CACnB,eAAC,KAAD,CAAqBtC,QAAM,EAA3B,qCAAY,UAGZ,eAAC,KAAD,sCAAY,QACZ,eAAC,KAAD,CAAQ/Z,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,iBAAT,0BADyB,WAG3B,eAAC,KAAD,CAAqBI,QAASN,GAA9B,SACE,eAAC,KAAD,UACE,eAACmnB,GAAA,EAAD,OAFU,eOnGTC,I,OA1JM,WACnB,MAA8BjW,oBAAS,GAAvC,mBACA,GADA,UACmDhG,aACjD,SAACC,GAAD,OAAWA,EAAMI,cADXA,EAAR,EAAQA,UAAW6b,EAAnB,EAAmBA,iBAAkB/b,EAArC,EAAqCA,UAG/B9L,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAEnDzL,GADWG,cACAF,eACbuD,EAAQ,EAENhC,EAAO,CAEX,CAAEJ,KAAM,kBAAmBuC,MAAO,IAClC,CAAEvC,KAAM,iBAAkBuC,MAAO,IAE7BiO,EAAS,CAAC,UAAW,WAU3B/E,qBAAU,W5C0IyB,IAACvF,E4CzIlCqD,QAAQC,IAAI7K,GACZC,G5CwIkCsH,E4CxIHvH,EAAKuR,I5CwIH,yCAAQ,WAAOtR,GAAP,kBAAAqK,EAAA,sEAEzCrK,EAAS,CAAEW,KAAMvC,KAFwB,SAGlByM,GAA0BvD,GAHR,gBAGjC9F,EAHiC,EAGjCA,KACRxB,EAAS,CAAEW,KAAM9B,GAAyB6L,QAASlJ,IACnDxB,EAAS,CAAEW,KAAMtC,KALwB,kDAOzC6L,GAAY,EAAD,GAAQ5L,IAPsB,0DAAR,wD4CvIV,SAAnByB,EAAK8R,MAAMzQ,MACbpB,EACE0J,GAAiB3J,EAAK8R,MAAMzQ,KAAMrB,EAAKuR,IAAKvR,EAAKiI,WAAW5G,SAE/D,CAACpB,IAhCqB,qBAkCL+L,GAlCK,IAkCzB,2BAA+B,CACP,WADO,QACjB2B,QAAqBlK,KAnCV,8BAwCzB,OAFAmH,QAAQC,IAAI,YAAamB,GACzBpB,QAAQC,IAAI,WAAYgd,GACpB/b,EAAkB,eAAC,GAAD,IAEpB,uCACE,eAAC,KAAWwC,MAAZ,CAAkBC,MAAO,EAAzB,qCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIE,GAAI,GAAIC,GAAI,GAAhD,SACE,eAAC,KAAD,CAAMC,UAAQ,EAAd,SACE,gBAAC,KAAD,CACElN,MAAM,kBACNkN,UAAQ,EACRC,OAAQ,CAAEJ,GAAI,EAAGD,GAAI,GAHvB,UAKE,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,mBACMhP,EAAKsB,WADX,YACyBtB,EAAKuB,aAE9B,eAAC,KAAad,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGhP,EAAKiI,WAAW5G,OAEnB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,gCAAgCC,KAAM,EAA/D,SACG,KAEH,eAAC,KAAavO,KAAd,CAAmBsO,MAAM,2BAA2BC,KAAM,EAA1D,SACG,YAKT,eAAC,KAAD,CAAKzO,UAAU,aAAakO,GAAI,GAAIE,GAAI,GAAIC,GAAI,EAAhD,SACE,eAAC,KAAD,CAAMC,UAAQ,EAAd,SACE,eAACI,GAAA,EAAD,CAAqBiB,SAAU,IAAKhB,UAAW,IAA/C,SACE,gBAACiB,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACE3O,KAAMA,EACN4O,YAAa,GACbC,YAAa,GACbZ,KAAK,UACLa,aAAc,EACdC,YAAa,IACbb,QAAQ,QACRc,mBAAmB,EACnB1B,MA/Dc,SAAC,GAAqB,IAAnB2B,EAAkB,EAAlBA,EAAGC,EAAe,EAAfA,EAAG/M,EAAY,EAAZA,MACrC,OACE,uBAAM8M,EAAGA,EAAGC,EAAGA,EAAGjB,KAAK,QAAQkB,WAAW,MAAMC,kBAAkB,OAAlE,SACGjN,KA6DSkN,WAAW,EAVb,SAYGrP,EAAK6L,KAAI,SAACsC,EAAOC,GAAR,OACR,eAACC,GAAA,EAAD,CAEEJ,KAAMmC,EAAOhC,EAAQgC,EAAO3P,SAF9B,eACe2N,SAKnB,eAACI,GAAA,EAAD,IACA,eAACc,GAAA,EAAD,gBAMV,wBACA,eAAC,KAAWzC,MAAZ,CAAkBC,MAAO,EAAzB,4BACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,qDACCgZ,IACGA,EAAiB3lB,OAGjB,qCACE,gBAAC,KAAD,CAAOE,WAAYylB,EAAkB7W,OAAO,MAA5C,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,YACNwP,OAAQ,SAACC,EAAMC,GACb,MAA8B,YAAvBA,EAAOyW,aAAP,UACAzW,EAAOrR,KAAKsB,WADZ,YAC0B+P,EAAOrR,KAAKuB,WADtC,UAEA8P,EAAO0W,iBAIlB,eAAC,KAAM9W,OAAP,CACEtP,MAAM,QACNuP,UAAU,SACN,SAEN,eAAC,KAAMD,OAAP,CACEtP,MAAM,OACNuP,UAAU,OAEVC,OAAQ,SAACC,EAAMC,GAAP,OACNvD,KAAOsD,GAAMjD,OAAO,gBAFlB,aArBV,eAAC,KAAD,KA6BJ,eAAC,KAAD,CAAQvN,KAAK,SAAb,SACE,eAAC,IAAD,CAAMF,GAAG,oBAAT,iCAIc,SAAnBV,EAAK8R,MAAMzQ,MACV,eAAC,KAAD,CAAKd,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,2DAC0CpL,GACxC,eAAC,KAAD,CAAQlD,UAAU,eAAeK,KAAK,SAAtC,SACE,eAAC,IAAD,CAAMF,GAAG,oBAAT,wC,oBC7JRwV,I,OAAaC,KAAbD,UAGA1E,IAFgB6E,KAAhBD,YACWG,KAAXD,OACS7E,KAATD,MA0OOwW,GAxOM,WACnB,IAAQzgB,EAAOkP,cAAPlP,GAEFvH,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACzD,EAAgCC,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAA1Cd,GAAnB,EAAQY,UAAR,EAAmBZ,UACnB,EAAeyL,KAAKC,UAAbC,EAAP,oBACA,EAA0BlF,mBAAS,MAAnC,mBAAOvH,EAAP,KAAc0M,EAAd,KACM7W,EAAWC,cA+EjB,OACE,uCACE,qBAAIK,UAAU,cAAd,sCACA,gBAAC,KAAD,CACEsW,KAAMA,EACNxV,KAAK,QACL6T,SAAU,CACRlG,KAAM,GAERmG,WAAY,CACVnG,KAAM,IAERoG,cAAe,CACb8B,UAAU,GAEZ5B,SA7FW,SAACC,GAChBuB,EAAS,MAET,IAAIzO,EAAW,IAAI8O,SACnB,GAAI5B,EAAO6B,OAAQ,CAAC,IAAD,iBACA7B,EAAO6B,QADP,IACjB,2BAAgC,CAAC,IAAxBC,EAAuB,QAC1BA,EAAKC,eACPjP,EAASkP,OAAO,QAASF,EAAKC,gBAHjB,+BAQnB,IAAM5P,EAAY6N,EAAM,KAClBkC,EAAY/P,EAAU,GACtBgQ,EAAUhQ,EAAU,GACpBugB,EAAY1S,EAAM,KAClBqG,EAAYqM,EAAU,GACtBpM,EAAUoM,EAAU,GAEpB5a,EAAe,CACnBrN,KAAMA,EAAKuR,IACX2W,UAAW3S,EAAO2S,UAClBvmB,MAAO4T,EAAO5T,MACdoB,YAAawS,EAAOxS,YACpB2K,SAAU+J,EAAUtJ,OAAO,cAC3B8I,OAAQS,EAAQvJ,OAAO,cACvBga,SAAUvM,EAAUzN,OAAO,SAC3Bia,OAAQvM,EAAQ1N,OAAO,SACvBmM,SACExM,KAAOwM,SAASuB,EAAQtB,KAAKqB,IAAYyM,GAAG,UAC3Cva,KAAOwM,SAAS5C,EAAQ6C,KAAK9C,IAAY4Q,GAAG,QAAU,GACzDP,aAAc,YAEhBvT,OAAO4D,QAAQ9K,GAAczI,SAAQ,YAAmB,IAAD,mBAAhB3B,EAAgB,KAAXW,EAAW,KACrDyE,EAASkP,OAAOtU,EAAKW,MAEvB3D,EAASgL,GAAe5C,KA0DpBmN,eA3CiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IA2CnBC,aAAa,MAdf,UAgBE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,YACN1N,KAAK,YACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,+BANf,SAUE,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,QACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,2BANf,SAUE,eAAC,KAAD,MAGF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,cACN1N,KAAK,cACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4CANf,SAUE,eAAC,GAAD,CAAU+N,KAAM,MAGlB,eAAC,KAAK9X,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAW4L,YAAZ,CACEkS,aAAc,SAAClF,GACb,OAAOA,GAAWA,EAAUtV,OAASya,MAAM,YAKjD,eAAC,KAAK9nB,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAW4L,YAAZ,CAAwBjI,OAAO,QAAQqa,WAAY,OAGrD,eAAC,KAAK/nB,KAAN,CACEY,KAAK,SACL0N,MAAM,uBACNyJ,cAAc,WACdC,kBAlHS,SAACtV,GAGhB,OAFAyH,QAAQC,IAAI,gBAAiB1H,GAEzBsQ,MAAMC,QAAQvQ,GACTA,EAGFA,GAAKA,EAAEuV,UAuGV,SAME,eAAC,KAAOC,QAAR,CACEtX,KAAK,OACLuX,SAAS,UACTC,aA7GY,SAACxB,GAErB,OADAzM,QAAQC,IAAI,aAAcwM,IACnB,GA4GCyB,cAzGW,SAAC,GAAwB,EAAtBzB,KAAuB,IAAjB0B,EAAgB,EAAhBA,UAC5BC,YAAW,WACTD,EAAU,QACT,IAuGKE,gBA1IU,WAAO,IAAD,EACxB,OAAO1R,GAEG,OAAR2D,QAAQ,IAARA,GAAA,UAAAA,EAAUgO,mBAAV,eAAuB5L,KAAI,SAAC+J,GAC1B,MAAO,CACL8B,IAAK9B,EAAK+B,OACV/X,KAAMgW,EAAKgC,SACX1L,OAAQ,OACR2L,IAAI,yBAAD,OAA2BjC,EAAKkC,gBAEjC,GATU,MA0IVC,eAAgB,CACdC,kBAAkB,EAClBC,aAAc,SAACrC,GACb,MAAmB,QAAfA,EAAK1J,OAAyB,eAACgM,GAAA,EAAD,IAC3B,gCAETC,gBAAgB,EAChBC,WAAY,SAACxC,GACX,MAAmB,QAAfA,EAAK1J,OAAyB,+BAC3B,eAACmM,GAAA,EAAD,MAfb,SAmBE,eAAC,KAAD,CAAQnU,KAAM,eAACoU,GAAA,EAAD,IAAd,iCAIJ,gBAAC,KAAKtZ,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAMG5E,GAAS,eAAC,GAAD,CAAMxJ,KAAK,SAAX,SAAqBwJ,IAC/B,wBACA,wBACA,wBACA,eAAC,KAAD,CACExJ,KAAK,UACLoV,SAAS,SACTrV,QAAS,WACP8nB,KAAM9T,QAAQ,CACZ2R,QAAS,iCACToC,KAFY,WAGV5G,OAAOnP,SAAW,gBAP1B,8BCxCKgW,GA3KM,WACnB,MAAiChd,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAAtDA,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UACXgP,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MAEJC,GADa3a,cACC,IAQZwoB,EAAiB,SAACnnB,GAItB,OAHWA,EAAKgT,QAAO,SAAUnS,GAC/B,MAAsB,YAAfA,EAAKqL,UACXzL,QAGCjC,EAAWC,cACjB4M,qBAAU,WACR7M,E9C7B6B,yCAAM,WAAOA,GAAP,kBAAAqK,EAAA,sEAEnCrK,EAAS,CAAEW,KAAMvC,KAFkB,SHgDAkI,GAAIiB,IAAI,aGhDR,gBAG3B/F,EAH2B,EAG3BA,KACRxB,EAAS,CAAEW,KAAMzC,GAAoBwM,QAASlJ,IAC9CxB,EAAS,CAAEW,KAAMtC,KALkB,kDAO/B,KAAMiM,UAERtK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMG,SAAS9I,KAAK+I,UAE7BA,IAAQJ,MAAM,KAAMG,SAAS9I,KAAK+I,QAAQC,aACjC,KAAM7D,SAEf3G,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMxD,UAEf4D,IAAQJ,MAAM,KAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMI,UAEfA,IAAQJ,MAAM,KAAMI,QAAQC,aA3BK,0DAAN,uD8C8B7BxK,EAAS2a,QACR,CAAC3a,IACJ2K,QAAQC,IAAImB,GAEZ8O,EAAMlW,SAAQ,SAAC2I,GACbwN,EAAY7V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQlM,UAGxD,IAAM4Z,EAAU,CACd,CACEtZ,MAAO,YACPuP,UAAW,YACXjO,IAAK,YACLiY,UAAW,QAGb,CAAEvZ,MAAO,QAASuP,UAAW,QAASjO,IAAK,SAC3C,CACEtB,MAAO,aACPuP,UAAW,WACXjO,IAAK,WACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAEoD,UAAYI,KAAO0N,EAAE9N,WAChDyD,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO3D,UAAUS,OAAO,gBAE3D,CACExM,MAAO,WACPuP,UAAW,SACXjO,IAAK,SACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE2M,QAAUnJ,KAAO0N,EAAEvE,SAC9C9F,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO4F,QAAQ9I,OAAO,gBAEzD,CACExM,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLqY,cAAc,EACdnK,OAAQ,SAACC,EAAMC,GAAP,gBAAqBA,EAAO8W,SAA5B,cAA0C9W,EAAO+W,UAE3D,CACEzmB,MAAO,wBACPuP,UAAW,WACXjO,IAAK,WACLkO,OAAQ,SAACC,EAAMC,GAAP,OACNvD,KACG+a,IAAI/a,KAAOwM,SAASjJ,EAAOiJ,SAAU,SAASwO,kBAC9C3a,OAAO,4BACZmN,cAAc,GAEhB,CACE3Z,MAAO,aACPuP,UAAW,aACXjO,IAAK,aACLqY,cAAc,EACdC,OAAQ,SAACjR,EAAGkR,GAAJ,OAAUoN,EAAete,EAAEye,YAAcH,EAAepN,EAAEuN,aAClE5X,OAAQ,SAACC,EAAMC,GAAP,OAAkBuX,EAAevX,EAAO0X,cAElD,CACEpnB,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,yBAAoB2Q,EAAOE,KAAnC,mBADwBF,EAAOE,QAMjCuK,EAAYC,mBAClB,OAAIjQ,EAAkB,eAAC,GAAD,IAEpB,uCACE,yDACEE,EAAU9J,OAGV,qCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASA,EACTa,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAa4J,EAAUmQ,UAsC3B,OArCID,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAEhC,GADA2H,QAAQC,IAAI0J,OAAOC,KAAK0H,KACnBA,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GAMf,MALW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,WAC3B,cAAP0B,IACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,QAEtBgb,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,GACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,GAER8N,cAAc,SACdC,QAAS,CACPpb,MAAO,QACPqb,QACE,yFAjEV,eAAC,KAAD,Q,WC4GOgM,I,OA3NS,SAAC,GAAqB,EAAnBnD,OAAoB,IAAZ7lB,EAAW,EAAXA,KACjC,EAAgC2L,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAArDF,EAAR,EAAQA,UAAWZ,EAAnB,EAAmBA,SAGbjL,EAAWC,cACXC,EAAWC,cACTmH,EAAOkP,cAAPlP,GACRuF,qBAAU,WACR7M,E/C6B6B,SAACsH,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAErCrK,EAAS,CAAEW,KAAMvC,KAFoB,SAGdyM,GAAsBvD,GAHR,gBAG7B9F,EAH6B,EAG7BA,KACRxB,EAAS,CAAEW,KAAMxC,GAAoBuM,QAASlJ,IAC9CxB,EAAS,CAAEW,KAAMtC,KALoB,kDAOjC,KAAMiM,UAERtK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMG,SAAS9I,KAAK+I,UAE7BA,IAAQJ,MAAM,KAAMG,SAAS9I,KAAK+I,QAAQC,aACjC,KAAM7D,SAEf3G,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMxD,UAEf4D,IAAQJ,MAAM,KAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMI,UAEfA,IAAQJ,MAAM,KAAMI,QAAQC,aA3BO,0DAAR,sD+C7BpBlB,CAAkBhC,MAC1B,CAACA,IAEJ,IAAM0hB,EAAe,SAACC,GACpBjpB,E/CyF0B,SAACsH,EAAI2D,GAAL,gDAAkB,WAAOjL,GAAP,kBAAAqK,EAAA,sEAE5CrK,EAAS,CAAEW,KAAMvC,KAF2B,SAGrByM,GAAmBvD,EAAI2D,GAHF,gBAGpCzJ,EAHoC,EAGpCA,KACRxB,EAAS,CAAEW,KAAMpC,GAAiBmM,QAASlJ,IAC3CxB,EAAS,CAAEW,KAAMtC,KAL2B,kDAOxC,KAAMiM,UAERtK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMG,SAAS9I,KAAK+I,UAE7BI,QAAQC,IAAI,KAAMN,SAAS9I,KAAK+I,SAChCI,QAAQC,IAAR,OAES,KAAMjE,SAEf3G,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMxD,UAEf4D,IAAQJ,MAAM,KAAMxD,QAAQ6D,cAG5BxK,EAAS,CACPW,KAAMrC,GACN6L,MAAO,KAAMI,UAEfA,IAAQJ,MAAM,KAAMI,QAAQC,aA7Bc,0DAAlB,sD+CzFjBjB,CAAejC,EAAI,CAAE2hB,cAG1BC,EAAmB,SAACD,GACxBjpB,E/CsHyB,SAACsH,EAAI2D,GAAL,gDAAkB,WAAOjL,GAAP,kBAAAqK,EAAA,sEAE3CrK,EAAS,CAAEW,KAAMvC,KAF0B,SAGpByM,GAAkBvD,EAAI2D,GAHF,gBAGnCzJ,EAHmC,EAGnCA,KACRxB,EAAS,CAAEW,KAAMnC,GAAgBkM,QAASlJ,IAC1CxB,EAAS,CAAEW,KAAMtC,KAL0B,kDAO3C6L,GAAY,EAAD,GAAQ5L,IAPwB,0DAAlB,sD+CtHhBmL,CAAcnC,EAAI,CAAE2hB,cAGzB9O,EAAY,SAACzM,GAEjB1N,EAAS2J,GAAqBrC,EAAD,YAAC,eAAS2D,GAAV,IAAoByC,cAG7Cyb,EAAsB,SAACC,EAAcC,GACzC1e,QAAQC,IAAIwe,EAAcC,GAC1B,IAAMC,EAAmBre,EAAS6d,WAAWzb,KAAI,SAACkc,GAChD,OAAIA,EAAUxpB,KAAKuR,MAAQ8X,EAClB,CAAErpB,KAAMqpB,EAAc1b,OAAQ2b,GAChCE,KAGTvpB,EACE2J,GAAqBrC,EAAD,YAAC,eAAS2D,GAAV,IAAoB6d,WAAYQ,OAqBxD,OAFA3e,QAAQC,IAAIK,GAEPA,EACDY,EAAkB,eAAC,GAAD,IAEpB,uCACE,gBAAC,KAAD,CACEhG,MAAO,CAAEqX,aAAc,IACvBxb,MAAM,gBACNkN,UAAQ,EACRC,OAAQ,CAAE2L,IAAK,EAAGC,GAAI,EAAG9L,GAAI,EAAGD,GAAI,EAAGD,GAAI,EAAGD,GAAI,GAJpD,UAM4B,YAAzBvD,EAAS4c,cACR,eAAC,KAAarnB,KAAd,CAAmBsO,MAAM,YAAYC,KAAM,EAA3C,mBACM9D,EAASlL,KAAKsB,WADpB,YACkC4J,EAASlL,KAAKuB,aAGlD,eAAC,KAAad,KAAd,CAAmBsO,MAAM,QAAQC,KAAM,EAAvC,SACG9D,EAASvJ,QAEZ,eAAC,KAAalB,KAAd,CAAmBsO,MAAM,cAAcC,KAAM,EAA7C,SACG9D,EAASnI,cAEZ,eAAC,KAAatC,KAAd,CAAmBsO,MAAM,gBAAgBC,KAAM,EAA/C,SACG9D,EAAS4c,eAEZ,eAAC,KAAarnB,KAAd,CAAmBsO,MAAM,YAAYC,KAAM,EAA3C,SACG9D,EAASgd,YAEZ,eAAC,KAAaznB,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACGlB,KAAO5C,EAASwC,UAAUS,OAAO,gBAEpC,eAAC,KAAa1N,KAAd,CAAmBsO,MAAM,WAAWC,KAAM,EAA1C,SACGlB,KAAO5C,EAAS+L,QAAQ9I,OAAO,gBAElC,eAAC,KAAa1N,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,mBACM9D,EAASid,SADf,cAC6Bjd,EAASkd,UAEZ,YAAzBld,EAAS4c,cACR,eAAC,KAAarnB,KAAd,CAAmBsO,MAAM,aAAaC,KAAM,EAA5C,SACiC,GAA9B9D,EAAS6d,WAAW7mB,OACnB,qCACE,eAAC,KAAD,CACEjB,KAAK,QACLwoB,MAAM,OACNrnB,WAAY8I,EAAS6d,WACrB1mB,WAAY,SAACC,GAAD,OACV,eAAC,KAAK7B,KAAN,UACE,gBAAC,IAAD,CAAOQ,KAAK,QAAZ,oBACMqB,EAAKtC,KAAKsB,WADhB,YAC8BgB,EAAKtC,KAAKuB,WACtC,eAAC,KAAD,CACEoM,OACiB,WAAfrL,EAAKqL,OACD,aACe,YAAfrL,EAAKqL,OACL,UACA,QAENyD,KAAM9O,EAAKqL,SAEO,SAAnB3N,EAAK8R,MAAMzQ,MACK,WAAfiB,EAAKqL,QACH,uCACE,eAAC,KAAD,CACEpN,UAAU,cACVI,QAAS,kBACPyoB,EAAoB9mB,EAAKtC,KAAKuR,IAAK,aAHvC,qBAQA,eAAC,KAAD,CACEoJ,QAAM,EACNha,QAAS,kBACPyoB,EAAoB9mB,EAAKtC,KAAKuR,IAAK,aAHvC,iCAgBhB,6CAIN,eAAC,KAAa9Q,KAAd,CAAmBsO,MAAM,uBAAuBC,KAAM,EAAtD,SACkC,GAA/B9D,EAASgO,YAAYhX,OACpB,qCACE,eAAC,KAAD,CACE3B,UAAU,YACV0Y,gBA/GM,WAAO,IAAD,EACxB,OAAO1R,GACPqD,QAAQC,IAAIK,IAEF,OAARA,QAAQ,IAARA,GAAA,UAAAA,EAAUgO,mBAAV,eAAuB5L,KAAI,SAAC+J,GAC1B,MAAO,CACL8B,IAAK9B,EAAK+B,OACV/X,KAAMgW,EAAKgC,SACX1L,OAAQ,OACR2L,IAAI,yBAAD,OAA2BjC,EAAKkC,gBAEjC,IAVU,MA+GNC,eAAgB,CACdC,kBAAkB,EAClBC,aACE,eAACgQ,GAAA,EAAD,IAIF9P,gBAAgB,OAKtB,0CAGsB,YAAzB1O,EAAS4c,cACR,eAAC,KAAarnB,KAAd,CAAmBsO,MAAM,SAASC,KAAM,EAAxC,SACE,eAAC,KAAD,CACErB,OACqB,WAAnBzC,EAASyC,OACL,aACmB,WAAnBzC,EAASyC,OACT,UACA,QAENyD,KAAMlG,EAASyC,cAKvB,gBAAC,IAAD,WACE,eAAC,KAAD,CAAQhN,QAAS,kBAAMR,GAAU,IAAjC,kBACE+K,EAAS6d,WAAW3L,MAAK,SAACja,GAAD,OAAOA,EAAEnD,KAAKuR,MAAQvR,EAAKuR,QAC7B,YAAzBrG,EAAS4c,aASoB,YAAzB5c,EAAS4c,aACX,qCACE,eAAC,KAAD,CAAQnN,QAAM,EAACha,QAAS,kBAAMwoB,EAAiBnpB,EAAKuR,MAApD,iCAKFrG,EAASlL,KAAKuR,KAAOvR,EAAKuR,KACD,YAAzBrG,EAAS4c,cACU,WAAnB5c,EAASyC,QACP,uCACE,eAAC,KAAD,CACEpN,UAAU,cACVI,QAAS,kBAAMyZ,EAAU,YAF3B,qBAMA,eAAC,KAAD,CAAQO,QAAM,EAACha,QAAS,kBAAMyZ,EAAU,WAAxC,uBAzBJ,qCACE,eAAC,KAAD,CACE7Z,UAAU,cACVI,QAAS,kBAAMsoB,EAAajpB,EAAKuR,MAFnC,mCAlIY,OC7ChB2E,GAAaC,KAAbD,SAGA1E,IAFgB6E,KAAhBD,YACWG,KAAXD,OACS7E,KAATD,MAkOOmY,GAhOS,WACtB,IAAQpiB,EAAOkP,cAAPlP,GAEFvH,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACzD,EAAgCC,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAA1Cd,GAAnB,EAAQY,UAAR,EAAmBZ,UACnB,EAAeyL,KAAKC,UAAbC,EAAP,oBACA,EAA0BlF,mBAAS,MAAnC,mBAAOvH,EAAP,KAAc0M,EAAd,KACM7W,EAAWC,cAoEjB,OACE,uCACE,qBAAIK,UAAU,cAAd,uCACA,gBAAC,KAAD,CACEsW,KAAMA,EACNxV,KAAK,QACL6T,SAAU,CACRlG,KAAM,GAERmG,WAAY,CACVnG,KAAM,IAERoG,cAAe,CACb8B,UAAU,GAEZ5B,SAlFW,SAACC,GAChBuB,EAAS,MAET,IAAIzO,EAAW,IAAI8O,SACnB,GAAI5B,EAAO6B,OAAQ,CAAC,IAAD,iBACA7B,EAAO6B,QADP,IACjB,2BAAgC,CAAC,IAAxBC,EAAuB,QAC1BA,EAAKC,eACPjP,EAASkP,OAAO,QAASF,EAAKC,gBAHjB,+BAQnB,IAAMjK,EAAe,CACnBrN,KAAMA,EAAKuR,IACXtJ,WAAYjI,EAAKiI,WAAWsJ,IAC5B5P,MAAO4T,EAAO5T,MACdoB,YAAawS,EAAOxS,YACpBijB,KAAMzQ,EAAOyQ,KAAK7X,OAAO,cACzByb,KAAMrU,EAAOqU,KAAKzb,OAAO,SACzBmM,SAAU/E,EAAO+E,SACjBwN,aAAc,WACdC,aAAcxS,EAAOwS,aACrBpa,OAAQ,WAEV4G,OAAO4D,QAAQ9K,GAAczI,SAAQ,YAAmB,IAAD,mBAAhB3B,EAAgB,KAAXW,EAAW,KACrDyE,EAASkP,OAAOtU,EAAKW,MAEvB3D,EAASgL,GAAe5C,KAwDpBmN,eAzCiB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAyCnBC,aAAa,MAdf,UAgBE,eAAC,KAAKjV,KAAN,CACEsO,MAAM,gBACN1N,KAAK,QACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,0BANf,SAUE,eAAC,KAAD,MAEF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,wBACN1N,KAAK,eACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,kCANf,SAUE,eAAC,KAAD,MAGF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,uBACN1N,KAAK,cACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4CANf,SAUE,eAAC,GAAD,CAAU+N,KAAM,MAGlB,eAAC,KAAK9X,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAD,MAGF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,OACN1N,KAAK,OACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,4BANf,SAUE,eAAC,KAAD,MAGF,eAAC,KAAK/J,KAAN,CACEsO,MAAM,kBACN1N,KAAK,WACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,+BANf,SAUE,eAAC,KAAD,CAAaqf,IAAK,MAGpB,eAAC,KAAKppB,KAAN,CACEY,KAAK,SACL0N,MAAM,uBACNyJ,cAAc,WACdC,kBAzHS,SAACtV,GAGhB,OAFAyH,QAAQC,IAAI,gBAAiB1H,GAEzBsQ,MAAMC,QAAQvQ,GACTA,EAGFA,GAAKA,EAAEuV,UAmHR/C,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,mDARf,SAYE,eAAC,KAAOmO,QAAR,CACEtX,KAAK,OACLuX,SAAS,UACTC,aA1HY,SAACxB,GAErB,OADAzM,QAAQC,IAAI,aAAcwM,IACnB,GAyHCyB,cAtHW,SAAC,GAAwB,EAAtBzB,KAAuB,IAAjB0B,EAAgB,EAAhBA,UAC5BC,YAAW,WACTD,EAAU,QACT,IAoHKE,gBAvJU,WAAO,IAAD,EACxB,OAAO1R,GAEG,OAAR2D,QAAQ,IAARA,GAAA,UAAAA,EAAUgO,mBAAV,eAAuB5L,KAAI,SAAC+J,GAC1B,MAAO,CACL8B,IAAK9B,EAAK+B,OACV/X,KAAMgW,EAAKgC,SACX1L,OAAQ,OACR2L,IAAI,yBAAD,OAA2BjC,EAAKkC,gBAEjC,GATU,MAuJVC,eAAgB,CACdC,kBAAkB,EAClBC,aAAc,SAACrC,GACb,MAAmB,QAAfA,EAAK1J,OAAyB,eAACgM,GAAA,EAAD,IAC3B,gCAETC,gBAAgB,EAChBC,WAAY,SAACxC,GACX,MAAmB,QAAfA,EAAK1J,OAAyB,+BAC3B,eAACmM,GAAA,EAAD,MAfb,SAmBE,eAAC,KAAD,CAAQnU,KAAM,eAACoU,GAAA,EAAD,IAAd,iCAIJ,gBAAC,KAAKtZ,KAAN,CACE0U,WAAY,CACVY,OAAQ,EACR/G,KAAM,IAHV,UAMG5E,GAAS,eAAC,GAAD,CAAMxJ,KAAK,SAAX,SAAqBwJ,IAC/B,wBACA,wBACA,wBACA,eAAC,KAAD,CAAQxJ,KAAK,UAAUoV,SAAS,SAAhC,8BC3CK8T,GA5KS,WACtB,MAAiCne,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAAtDA,EAAR,EAAQA,UAAWF,EAAnB,EAAmBA,UACXgP,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACF9a,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAEnDzL,GADWG,cACAF,eACjB4M,qBAAU,WACR7M,EAAS0J,GAAiB3J,EAAK8R,MAAMzQ,KAAMrB,EAAKuR,IAAKvR,EAAKiI,WAAW5G,OACrEpB,EAAS2a,QACR,CAAC3a,IACJ,IAAI8a,EAAc,GAOlBD,EAAMlW,SAAQ,SAAC2I,GACbwN,EAAY7V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQlM,UAGxD,IAAM4Z,EAAU,CACd,CACEtZ,MAAO,iBACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACX/J,OAAQ,SAACC,EAAMC,GAAP,gBAAqBD,EAAK9P,WAA1B,YAAwC8P,EAAK7P,aAEvD,CACEI,MAAO,uBACPuP,UAAW,CAAC,aAAc,QAC1BjO,IAAK,aAELkY,QAASJ,EACTK,SAAU,SAACxX,EAAOyN,GAAR,OAA6D,IAA1CA,EAAOpJ,WAAW5G,KAAKga,QAAQzX,KAE9D,CAAEjC,MAAO,YAAauP,UAAW,eAAgBjO,IAAK,gBACtD,CAAEtB,MAAO,QAASuP,UAAW,QAASjO,IAAK,SAC3C,CACEtB,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE0b,MAAQlY,KAAO0N,EAAEwK,OAC5C7U,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO2U,MAAM7X,OAAO,gBAEvD,CACExM,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLqY,cAAc,GAEhB,CACE3Z,MAAO,kBACPuP,UAAW,WACXjO,IAAK,WACLqY,cAAc,GAEhB,CACE3Z,MAAO,SACPuP,UAAW,SACXjO,IAAK,SACLkY,QApDiB,CACnB,CAAE/J,KAAM,UAAWxN,MAAO,WAC1B,CAAEwN,KAAM,WAAYxN,MAAO,WAC3B,CAAEwN,KAAM,WAAYxN,MAAO,WAkDzBwX,SAAU,SAACxX,EAAOyN,GAAR,OAAoD,IAAjCA,EAAO1D,OAAO0N,QAAQzX,IACnDuN,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,CACE1D,OACmB,WAAjB0D,EAAO1D,OACH,aACiB,WAAjB0D,EAAO1D,OACP,UACA,QAENyD,KAAMC,EAAO1D,WAInB,CACEhM,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,eAAU2Q,EAAOE,KAAzB,mBADwBF,EAAOE,QAMjCuK,EAAYC,mBAElB,OAAIjQ,EAAkB,eAAC,GAAD,IAGpB,uCACE,6DACEE,EAAU9J,OAGV,qCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASA,EACTa,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAa4J,EAAUmQ,UAsC3B,OArCID,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAEhC,GADA2H,QAAQC,IAAI0J,OAAOC,KAAK0H,KACnBA,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GAMf,MALW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,WAC3B,cAAP0B,IACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,QAEtBgb,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,GACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,GAER8N,cAAc,SACdC,QAAS,CACPpb,MAAO,QACPqb,QACE,yFAjEV,eAAC,KAAD,QCyNO+M,GAvTS,WACtB,MAA+Cpe,aAC7C,SAACC,GAAD,OAAWA,EAAMI,aADXA,EAAR,EAAQA,UAAWge,EAAnB,EAAmBA,aAAcle,EAAjC,EAAiCA,UAGzBgP,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACF9a,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAEnDzL,GADWG,cACAF,eACjB4M,qBAAU,WlD2I2B,IAACvF,EkD1IpCtH,GlD0IoCsH,EkD1IHvH,EAAKuR,IlD0IH,yCAAQ,WAAOtR,GAAP,kBAAAqK,EAAA,sEAE3CrK,EAAS,CAAEW,KAAMvC,KAF0B,SAGpByM,GAA4BvD,GAHR,gBAGnC9F,EAHmC,EAGnCA,KACRxB,EAAS,CAAEW,KAAMhC,GAA4B+L,QAASlJ,IACtDxB,EAAS,CAAEW,KAAMtC,KAL0B,kDAO3C6L,GAAY,EAAD,GAAQ5L,IAPwB,0DAAR,wDkDzInC0B,ElDmJgC,SAACsH,GAAD,gDAAQ,WAAOtH,GAAP,kBAAAqK,EAAA,sEAExCrK,EAAS,CAAEW,KAAMvC,KAFuB,SAGjByM,GAAyBvD,GAHR,gBAGhC9F,EAHgC,EAGhCA,KACRxB,EAAS,CAAEW,KAAM/B,GAAwB8L,QAASlJ,IAClDxB,EAAS,CAAEW,KAAMtC,KALuB,kDAOxC6L,GAAY,EAAD,GAAQ5L,IAPqB,0DAAR,sDkDnJvBuL,CAAqB9J,EAAKuR,MACnCtR,EAAS2a,QACR,CAAC3a,IAEJ,IAAI8a,EAAc,GAOlBD,EAAMlW,SAAQ,SAAC2I,GACbwN,EAAY7V,KAAK,CAAEkM,KAAM7D,EAAQlM,KAAMuC,MAAO2J,EAAQlM,UAGxD,IAAM4oB,EAAW,CACf,CAAEtoB,MAAO,YAAauP,UAAW,eAAgBjO,IAAK,gBACtD,CAAEtB,MAAO,QAASuP,UAAW,QAASjO,IAAK,SAC3C,CACEtB,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE0b,MAAQlY,KAAO0N,EAAEwK,OAC5C7U,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO2U,MAAM7X,OAAO,gBAEvD,CACExM,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLqY,cAAc,GAEhB,CACE3Z,MAAO,kBACPuP,UAAW,WACXjO,IAAK,WACLqY,cAAc,GAEhB,CACE3Z,MAAO,SACPuP,UAAW,SACXjO,IAAK,SACLkY,QArCiB,CACnB,CAAE/J,KAAM,UAAWxN,MAAO,WAC1B,CAAEwN,KAAM,WAAYxN,MAAO,WAC3B,CAAEwN,KAAM,WAAYxN,MAAO,WAmCzBwX,SAAU,SAACxX,EAAOyN,GAAR,OAAoD,IAAjCA,EAAO1D,OAAO0N,QAAQzX,IACnDuN,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,KAAD,CACE1D,OACmB,WAAjB0D,EAAO1D,OACH,aACiB,WAAjB0D,EAAO1D,OACP,UACA,QAENyD,KAAMC,EAAO1D,WAInB,CACEhM,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,eAAU2Q,EAAOE,KAAzB,mBADwBF,EAAOE,QAOjCmW,EAAW,CACf,CACE/lB,MAAO,YACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACX/J,OAAQ,SAACC,EAAMC,GAAP,gBAAqBD,EAAK9P,WAA1B,YAAwC8P,EAAK7P,aAEvD,CACEI,MAAO,aACPuP,UAAW,CAAC,aAAc,QAC1BjO,IAAK,aAELkY,QAASJ,EACTK,SAAU,SAACxX,EAAOyN,GAAR,OAA6D,IAA1CA,EAAOpJ,WAAW5G,KAAKga,QAAQzX,KAE9D,CAAEjC,MAAO,QAASuP,UAAW,QAASjO,IAAK,SAC3C,CACEtB,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLiY,UAAW,OACXK,OAAQ,SAACjR,EAAGkR,GAAJ,OAAU1N,KAAOxD,EAAE0b,MAAQlY,KAAO0N,EAAEwK,OAC5C7U,OAAQ,SAACC,EAAMC,GAAP,OAAkBvD,KAAOuD,EAAO2U,MAAM7X,OAAO,gBAEvD,CACExM,MAAO,OACPuP,UAAW,OACXjO,IAAK,OACLqY,cAAc,GAEhB,CACE3Z,MAAO,kBACPuP,UAAW,WACXjO,IAAK,WACLqY,cAAc,GAEhB,CACE3Z,MAAO,aACPuP,UAAW,aACXjO,IAAK,aACLqY,cAAc,EACdC,OAAQ,SAACjR,EAAGkR,GAAJ,OACN1N,KAAOxD,EAAEye,WAAW7mB,QAAU4L,KAAO0N,EAAEuN,WAAW7mB,SACpDiP,OAAQ,SAACC,EAAMC,GAAP,OAAkBA,EAAO0X,WAAW7mB,SAE9C,CACEP,MAAO,SACPsB,IAAK,MACLiY,UAAW,SACX/J,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,eAAU2Q,EAAOE,KAAzB,mBADwBF,EAAOE,QAMjCuK,EAAYC,mBAElB,OAAIjQ,EAAkB,eAAC,GAAD,IAGpB,uCACE,kEACCke,IACGA,EAAa9nB,OAGb,uCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASgP,EACTnO,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAa4nB,EAAa7N,UAsC9B,OArCID,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAEhC,GADA2H,QAAQC,IAAI0J,OAAOC,KAAK0H,KACnBA,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GAMf,MALW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,WAC3B,cAAP0B,IACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,QAEtBgb,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,EACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,GAER8N,cAAc,SACdC,QAAS,CACPpb,MAAO,QACPqb,QACE,mFAEJC,cAAe,iBAAM,CACnB,eAAC,IAAD,UACE,eAAC,KAAD,CAAQrc,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,sBAAT,wDAQV,2BA9EF,eAAC,KAAD,KAkFJ,sEACEsL,EAAU9J,OAGV,qCACE,eAAC,IAAD,CAAgB8Z,OAAQC,KAAxB,SACE,eAAC,KAAD,CACEhB,QAASyM,EACT5L,UAAWA,EACXlV,QAAS,SAACsV,EAAQX,EAAQ9G,GACxB,IAAIrS,EAAa4J,EAAUmQ,UAsC3B,OArCID,GACE3H,OAAOC,KAAK0H,GAAQha,OAAS,IAC/BE,EAAaA,EAAWqS,QAAO,SAACnS,GAC9B,OAAOiS,OAAOC,KAAK0H,GAAQE,OAAM,SAACnZ,GAEhC,GADA2H,QAAQC,IAAI0J,OAAOC,KAAK0H,KACnBA,EAAOjZ,GACV,OAAO,EAET,GAAW,YAAPA,GAA4B,WAAPA,EACvB,OAAO,EAGT,GAAmB,OAAfiZ,EAAOjZ,GACT,OAAO,EAET,IAAIoZ,EAAM/Z,EAAKW,GAMf,MALW,QAAPA,EACFoZ,EAAG,UAAM/Z,EAAKtC,KAAKsB,WAAhB,YAA8BgB,EAAKtC,KAAKuB,WAC3B,cAAP0B,IACToZ,EAAG,UAAM/Z,EAAK2F,WAAW5G,QAEtBgb,IAMG,GAFNA,EAAIX,OACF,IAAIY,OAAO,KAAOJ,EAAOjZ,GAAO,KAAM,cAW3CsZ,QAAQC,QAAQ,CACrB/a,KAAMW,EACNuS,SAAS,KAGb3D,OAAO,MACPyL,WAAY,CACVC,SAAU,EACVC,iBAAiB,GAEnBjB,OAAQ,CACNkB,OAAQ,WACRC,kBAAkB,EAClB7N,KAAM,GAER8N,cAAc,SACdC,QAAS,CACPpb,MAAO,QACPqb,QACE,mFAEJC,cAAe,iBAAM,CACnB,eAAC,IAAD,UACE,eAAC,KAAD,CAAQrc,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,mBAAT,2CAtEZ,eAAC,KAAD,Q,yCCyEO+K,GAlSF,WACEtE,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OAAzD,IACA,EAA0CC,aACxC,SAACC,GAAD,OAAWA,EAAMC,UADXA,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UAAWkB,EAA3B,EAA2BA,WAGnB+R,EAAUpT,aAAY,SAACC,GAAD,OAAWA,EAAMmT,SAAvCA,MACAmL,EAAkBve,aAAY,SAACC,GAAD,OAAWA,EAAMI,aAA/Cke,cAEFjqB,GADY0L,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACS5a,eAEjB,GADiBE,cACmBuR,oBAAS,IAA7C,mBAAOwY,EAAP,KAAmBC,EAAnB,KAEIne,EAAc,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAgB,EAChBC,EAAgB,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAM,EAERC,qBAAU,WACR7M,EAASyK,MACTzK,EnDmJ8B,yCAAM,WAAOA,GAAP,kBAAAqK,EAAA,sEAEpCrK,EAAS,CAAEW,KAAMvC,KAFmB,SHvIAkI,GAAIiB,IAAI,wBGuIR,gBAG5B/F,EAH4B,EAG5BA,KACRxB,EAAS,CAAEW,KAAM5B,GAAsB2L,QAASlJ,IAChDxB,EAAS,CAAEW,KAAMtC,KALmB,kDAOpC6L,GAAY,EAAD,GAAQ5L,IAPiB,0DAAN,uDmDlJ9B0B,EpDyC2B,yCAAM,WAAOA,GAAP,kBAAAqK,EAAA,sEAEjCrK,EAAS,CAAEW,KAAM5F,IAFgB,SFrFAuL,GAAIiB,IAAI,sBEqFR,gBAGzB/F,EAHyB,EAGzBA,KACRxB,EAAS,CAAEW,KAAM1D,GAAmByN,QAASlJ,IAC7CxB,EAAS,CAAEW,KAAM3F,IALgB,kDAOjCkP,GAAY,EAAD,GAAQjP,GAPc,0DAAN,uDoDxC3B+E,EAAS+Z,MACT/Z,EAAS2a,QACR,CAAC3a,IACJ,IAAQoqB,EAAYC,KAAZD,QACUtL,EAAMwL,MAAM,EAAG,GAEjC1e,EAAOyB,KAAI,SAACC,GACV,IAAIC,EAAI,IAAIC,KAAKF,EAAQG,UACH,WAAlBH,EAAQI,SAEa,UAArBJ,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMZ,EAAaY,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMX,EAAaW,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMV,EAAaU,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMT,EAAaS,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMR,EAAeQ,GAEX,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMP,EAAeO,GAEX,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMN,EAAaM,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAML,EAAaK,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMJ,EAAaI,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMH,EAAaG,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMF,EAAaE,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,UAE1CnB,EAAMoB,KAAKpB,MAAMD,EAAaC,QAIpC,IAAM2d,EAAe,CACnB,CACEnpB,KAAMyM,OAASC,SAAS,EAAG,UAAUI,OAAO,QAC5Csc,OAAQxe,EACRye,QAASxe,GAEX,CACE7K,KAAMyM,OAASC,SAAS,EAAG,UAAUI,OAAO,QAC5Csc,OAAQte,EACRue,QAASte,GAEX,CACE/K,KAAMyM,OAASK,OAAO,QACtBsc,OAAQpe,EACRqe,QAASpe,GAEX,CACEjL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQle,EACRme,QAASle,GAEX,CACEnL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQhe,EACRie,QAAShe,GAEX,CACErL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQ9d,EACR+d,QAAS9d,IAcb,OAAId,GAAcD,GAAWmB,EAE3B,uCACE,eAAC,KAAWsB,MAAZ,CAAkBC,MAAO,EAAzB,6BAEA,eAAC,KAAD,CAEEoc,SAAU,SAAC5U,GACTqU,EAAcrU,EAAOiK,MAAQ,MAHjC,SAME,gBAACsK,GAAA,EAAcrJ,MAAf,CAAqB2J,UAAWT,EAAa,SAAW,MAAxD,UACE,eAACG,GAAA,EAAD,CACEO,UAAW,CACTlpB,MAAO,2BACPiC,MAAO,SACPknB,UAAW,EACXC,OAAQ,UAEVC,MACE,sBACE7pB,IAAI,yEACJC,IAAI,qBACJ4e,MAAM,WAIZ,eAACqK,EAAD,CAASzpB,KAAMupB,EAAa,aAAe,aAC3C,eAACG,GAAA,EAAD,CACEO,UAAW,CACTlpB,MAAO,iCACPiC,MAAO,KAETonB,MACE,sBACE7pB,IAAI,yEACJC,IAAI,qBACJ4e,MAAM,WAIZ,eAACqK,EAAD,CAASzpB,KAAMupB,EAAa,aAAe,aAC3C,eAACG,GAAA,EAAD,CACEO,UAAW,CACTlpB,MAAO,iCACPiC,MAAO,EACPmnB,OAAQ,SAEVC,MACE,sBACE7pB,IAAI,yEACJC,IAAI,qBACJ4e,MAAM,eA9CV,mBAoDN,eAAC,KAAD,CAAKxR,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,SACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,0EACA,eAACI,GAAA,EAAD,CAAqBC,UAAW,IAAhC,SACE,gBAAC+b,GAAA,EAAD,CACEjL,MAAM,OACNkL,OAAO,OACPzpB,KAAM+oB,EACNpb,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,eAACQ,GAAA,EAAD,CAAOL,QAAQ,SACf,eAACI,GAAA,EAAD,CAAOob,OAAQ,CAAC,EAAGte,EAAM,GAAIue,eAAe,IAC5C,eAACnb,GAAA,EAAD,IACA,eAACc,GAAA,EAAD,CAAQsa,aAAc,CAAEhc,IAAK,EAAGE,KAAM,MACtC,eAAC+b,GAAA,EAAD,CACE1qB,KAAK,WACL+O,QAAQ,SACR4b,OAAO,UACPC,UAAW,CAAEC,EAAG,KAElB,eAACH,GAAA,EAAD,CAAM1qB,KAAK,WAAW+O,QAAQ,UAAU4b,OAAO,iBAGnD,wBACA,iCACE,eAAC,KAAD,CAAQhrB,UAAU,eAAeK,KAAK,UAAtC,SACE,eAAC,IAAD,CAAMF,GAAG,eAAT,+BAEF,eAAC,KAAD,CAAQH,UAAU,eAAeK,KAAK,UAAtC,SACE,eAAC,IAAD,CAAMF,GAAG,YAAT,0CAMV,wBACA,eAAC,KAAW4N,MAAZ,CAAkBC,MAAO,EAAzB,sBACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,6DACA,gBAAC,KAAD,CAAOzM,WAAY4K,EAAYgE,OAAO,MAAtC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,OACNuP,UAAW,CAAC,aAAc,QAC1BvB,QAAS,CAAC,aAAc,UAE1B,eAAC,KAAMsB,OAAP,CACEtP,MAAM,eACNuP,UAAU,QACVvB,QAAQ,QACR+b,iBAAiB,UACjBnQ,OAAQ,SAACjR,EAAGkR,GAAJ,OAAUlR,EAAE7G,MAAQ+X,EAAE/X,iBAKtC,eAAC,KAAD,CAAKlD,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,oEACA,gBAAC,KAAD,CAAOzM,WAAY8nB,EAAelZ,OAAO,MAAzC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,OACNuP,UAAW,CAAC,aAAc,QAC1BvB,QAAS,CAAC,aAAc,UAE1B,eAAC,KAAMsB,OAAP,CACEtP,MAAM,sBACNuP,UAAU,QACVvB,QAAQ,QACR+b,iBAAiB,UACjBnQ,OAAQ,SAACjR,EAAGkR,GAAJ,OAAUlR,EAAE7G,MAAQ+X,EAAE/X,uBAvII,eAAC,GAAD,KC4MnCgI,GA/VF,WACX,IAWIkgB,EAXE3rB,EAAOmH,KAAKC,MAAML,aAAaC,QAAQ,YAAY0E,OACzD,EAA2CC,aACzC,SAACC,GAAD,OAAWA,EAAMC,UADXA,EAAR,EAAQA,OAAmBE,GAA3B,EAAgBD,UAAhB,EAA2BC,aAGnBgT,EAAUpT,aAAY,SAACC,GAAD,OAAWA,EAAMmT,SAAvCA,MACAjE,EAAUnP,aAAY,SAACC,GAAD,OAAWA,EAAMkP,SAAvCA,MACAxE,EAAWC,KAAXD,OACFrW,EAAWC,cACXC,EAAWC,cACjB,EAAgCuR,oBAAS,GAAzC,mBAAOrN,EAAP,KAAgB6V,EAAhB,KACA,EAA4CxI,oBAAS,GAArD,mBAAOia,EAAP,KAAuBC,EAAvB,KAGA/e,qBAAU,WACR7M,EAASyK,MACTzK,EAAS+K,MACT/K,EAAS2I,GAAe5I,EAAKiI,WAAWsJ,MAAMwF,MAAK,kBACjDoD,GAAa,MAGQ,SAAnBna,EAAK8R,MAAMzQ,OACbwqB,GAAkB,GAClB5rB,EAAS2a,SAEV,CAAC3a,IAWC0rB,EADA5M,EAAM7c,OACG6c,EAAM,GAAG9W,WAAWsJ,IADNvR,EAAKiI,WAAWsJ,IAE5C,IAAMua,EAAa/f,EAAY0I,QAC7B,SAAC1I,GAAD,OAAiBA,EAAY9D,WAAWsJ,KAAOoa,KAG3CI,EAAYhN,EAAMwL,MAAM,EAAG,GAE7ByB,EAAkB,GACtBjN,EAAMzR,KAAI,SAACC,GACiB,cAAtBA,EAAQuE,MAAMzQ,MAChB2qB,EAAgB9mB,KAAhB,UAAwBqI,EAAQjM,WAAhC,YAA8CiM,EAAQhM,eAG1D,IAAI0K,EAAc,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAgB,EAChBC,EAAgB,EAChBC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAc,EACdC,EAAM,EAERhB,EAAOyB,KAAI,SAACC,GACV,IAAIC,EAAI,IAAIC,KAAKF,EAAQG,UACH,WAAlBH,EAAQI,QAAuBJ,EAAQtF,WAAWsJ,KAAOoa,IAEpC,UAArBpe,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMZ,EAAaY,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMX,EAAaW,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMV,EAAaU,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASC,SAAS,EAAG,UAAUC,QAE/CnB,EAAMoB,KAAKpB,MAAMT,EAAaS,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMR,EAAeQ,GAEX,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASE,QAEzBnB,EAAMoB,KAAKpB,MAAMP,EAAeO,GAEX,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMN,EAAaM,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAML,EAAaK,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMJ,EAAaI,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMH,EAAaG,GAET,UAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,QAE1CnB,EAAMoB,KAAKpB,MAAMF,EAAaE,GAET,WAArBU,EAAQK,WACRJ,EAAEK,YAAcC,OAASI,IAAI,EAAG,UAAUF,UAE1CnB,EAAMoB,KAAKpB,MAAMD,EAAaC,QAIpC,IAAM2d,EAAe,CACnB,CACEnpB,KAAMyM,OAASC,SAAS,EAAG,UAAUI,OAAO,QAC5Csc,OAAQxe,EACRye,QAASxe,GAEX,CACE7K,KAAMyM,OAASC,SAAS,EAAG,UAAUI,OAAO,QAC5Csc,OAAQte,EACRue,QAASte,GAEX,CACE/K,KAAMyM,OAASK,OAAO,QACtBsc,OAAQpe,EACRqe,QAASpe,GAEX,CACEjL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQle,EACRme,QAASle,GAEX,CACEnL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQhe,EACRie,QAAShe,GAEX,CACErL,KAAMyM,OAASI,IAAI,EAAG,UAAUC,OAAO,QACvCsc,OAAQ9d,EACR+d,QAAS9d,IAcb,OAAItI,EAAgB,eAAC,GAAD,IAElB,uCACE,eAAC,KAAD,CACE3C,MAAM,4BACNqC,QAAS4nB,EACTK,OAAQ,CACN,eAAC,KAAD,CAAQtrB,QAAS,kBAAMR,GAAU,IAAjC,kBACA,eAAC,KAAD,CAAQ0W,KAAK,SAAsBb,SAAS,SAA5C,mBAA0B,WAL9B,SAUE,eAAC,KAAD,CAAMzO,GAAG,SAAS+N,SA/JP,SAACC,GAChBtV,EAAS2I,GAAe2M,EAAOtN,aAC/B4jB,GAAkB,IA6Jd,SACE,eAAC,KAAKprB,KAAN,CACEsO,MAAM,cACN1N,KAAK,aACLsU,MAAO,CACL,CACEC,UAAU,EACVpL,QAAS,gCANf,SAUE,eAAC,KAAD,UACGsQ,EAAMxN,KAAI,SAACwN,GAAD,OACT,eAACxE,EAAD,CAAwB1S,MAAOkX,EAAMvJ,IAArC,SACGuJ,EAAMzZ,MADIyZ,EAAMvJ,gBAQ7B,eAAC,KAAWjD,MAAZ,CAAkBC,MAAO,EAAzB,kCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,gBAAC,KAAD,CACElN,MAAM,qBACNkN,UAAQ,EACRqd,aAAc,CAAEC,UAAW,YAC3Brd,OAAQ,CAAEJ,GAAI,EAAGD,GAAI,GAJvB,UAME,eAAC,KAAahO,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,SACG+P,EAAM,GAAG9W,WAAW5G,OAEvB,eAAC,KAAaZ,KAAd,CAAmBsO,MAAM,OAAOC,KAAM,EAAtC,SACG+P,EAAM,GAAG9W,WAAWqQ,OAEvB,eAAC,KAAa7X,KAAd,CAAmBsO,MAAM,cAAcC,KAAM,EAA7C,SACE,eAAC,KAAD,CACE5M,WAAY4pB,EACZ3pB,WAAY,SAACC,GAAD,OACV,gBAAC,KAAK7B,KAAN,WACE,eAAC,KAAW+Q,KAAZ,CAAiB4a,MAAI,IADvB,IAC4C9pB,UAKlD,eAAC,KAAa7B,KAAd,CAAmBsO,MAAM,eAAeC,KAAM,EAA9C,SACG+P,EAAM7c,YAGS,SAAnBlC,EAAK8R,MAAMzQ,MACV,uCACE,wBACA,eAAC,KAAD,CAAQT,KAAK,UAAUD,QAhNnB,WAChBkrB,GAAkB,IA+MN,wCAOR,eAAC,KAAD,CAAKtrB,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,oFACA,eAACI,GAAA,EAAD,CAAqBC,UAAW,IAAhC,SACE,gBAAC+b,GAAA,EAAD,CACEjL,MAAM,OACNkL,OAAO,OACPzpB,KAAM+oB,EACNpb,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,eAACQ,GAAA,EAAD,CAAOL,QAAQ,SACf,eAACI,GAAA,EAAD,CAAOob,OAAQ,CAAC,EAAGte,EAAM,GAAIue,eAAe,IAC5C,eAACnb,GAAA,EAAD,IACA,eAACc,GAAA,EAAD,CAAQsa,aAAc,CAAEhc,IAAK,EAAGE,KAAM,MACtC,eAAC+b,GAAA,EAAD,CACE1qB,KAAK,WACL+O,QAAQ,SACR4b,OAAO,UACPC,UAAW,CAAEC,EAAG,KAElB,eAACH,GAAA,EAAD,CAAM1qB,KAAK,WAAW+O,QAAQ,UAAU4b,OAAO,iBAGnD,eAAC,KAAD,CAAQ3qB,KAAK,UAAb,SACE,eAAC,IAAD,CAAMF,GAAG,eAAT,iCAKR,wBACA,eAAC,KAAW4N,MAAZ,CAAkBC,MAAO,EAAzB,iCACA,gBAAC,KAAD,CAAKC,OAAQ,CAAEC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAA1C,UACE,eAAC,KAAD,CAAKrO,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,mEACCid,IACGA,EAAW5pB,OAGX,qCACE,gBAAC,KAAD,CAAOE,WAAY0pB,EAAY9a,OAAO,MAAtC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,OACNuP,UAAU,OACVC,OAAQ,SAACC,EAAMC,GACb,MAAM,GAAN,OAAUA,EAAOrR,KAAKsB,WAAtB,YAAoC+P,EAAOrR,KAAKuB,cAGpD,eAAC,KAAM0P,OAAP,CACEtP,MAAM,aACNuP,UAAU,YAEVC,OAAQ,SAACC,EAAMC,GAAP,OAAkB,eAAC,KAAD,CAAKC,MAAM,MAAX,SAAkBF,MADxC,aAGN,eAAC,KAAMH,OAAP,CACEtP,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,IAAD,CAAMP,GAAE,sBAAiB2Q,EAAOE,KAAhC,mBADwBF,EAAOE,OAF/B,eAnBV,eAAC,KAAD,UA+BR,eAAC,KAAD,CAAKhR,UAAU,aAAakO,GAAI,GAAIC,GAAI,GAAxC,SACE,gBAAC,KAAD,CAAMG,UAAQ,EAAd,UACE,+DACCkd,IACGA,EAAU7pB,OAGV,qCACE,gBAAC,KAAD,CAAOE,WAAY2pB,EAAW/a,OAAO,MAArC,UACE,eAAC,KAAMC,OAAP,CACEtP,MAAM,OACNuP,UAAU,OACVC,OAAQ,SAACC,EAAMC,GACb,MAAM,GAAN,OAAUA,EAAO/P,WAAjB,YAA+B+P,EAAO9P,cAG1C,eAAC,KAAM0P,OAAP,CACEtP,MAAM,wBAZZ,eAAC,KAAD,iB,4DCxVR2U,GAAWC,KAAXD,OAsJO+V,GAnIK,WAClB,MAAezV,qBAARC,EAAP,oBACQtP,EAAOkP,cAAPlP,GACFtH,EAAWC,cACXC,EAAWC,cACTqd,EAAW9R,aAAY,SAACC,GAAD,OAAWA,EAAM6R,UAAxCA,OACR3Q,qBAAU,WACJvF,GACFtH,EAAS+J,GAAUzC,MAEpB,CAACtH,EAAUsH,IA0Bd,OACE,gBAAC,KAAD,CACEmc,IAAK7M,EACLzB,cAAa,2BAAOqI,GAAP,IAAeA,OAAQA,EAAOtb,OAC3Cd,KAAK,yBACLiU,SA9Ba,SAACC,G/BpBQ,IAACvN,E+BqBzB4C,QAAQC,IAAI,2BAA4B0K,GAGtCtV,EADEsH,E/BZoB,SAACA,EAAIS,GAAL,gDAAc,WAAO/H,GAAP,kBAAAqK,EAAA,sEAEtCrK,EAAS,CAAEW,KAAMvB,KAFqB,SAGfyL,GAAiBvD,EAAIS,GAHN,gBAG9BvG,EAH8B,EAG9BA,KACRxB,EAAS,CAAEW,KAAM1B,GAAeyL,QAASlJ,IACzCxB,EAAS,CAAEW,KAAMtB,KALqB,kDAOtC6K,GAAY,EAAD,GAAQ5K,IAPmB,0DAAd,sD+BcpB0K,CAAa1C,EAAI,CACfqW,QAASrI,EAAOqI,QAChBvc,KAAMkU,EAAOlU,KACbc,KAAMoT,EAAOkI,U/B5BMzV,E+BiCR,CACX4V,QAASrI,EAAOqI,QAChBvc,KAAMkU,EAAOlU,KACbc,KAAMoT,EAAOkI,Q/BpCK,yCAAU,WAAOxd,GAAP,kBAAAqK,EAAA,sEAElCM,QAAQC,IAAI7C,GACZ/H,EAAS,CAAEW,KAAMvB,KAHiB,SzBsDTgJ,EyBlDeL,EzBkDFzB,GAAIoB,KAAK,UAAWU,GyBtDxB,gBAI1B5G,EAJ0B,EAI1BA,KACRxB,EAAS,CAAEW,KAAM3B,GAAe0L,QAASlJ,IACzCxB,EAAS,CAAEW,KAAMtB,KANiB,kDAQlC6K,GAAY,EAAD,GAAQ5K,IARe,kCzBsDV,IAAC8I,IyBtDS,qBAAV,yD+BmDtBmN,eAVmB,SAACC,GACtB7K,QAAQC,IAAI,UAAW4K,IAUrB6W,eARmB,aASnB5W,aAAa,MAPf,UAUE,gBAAC,IAAD,CAAO6W,MAAM,WAAb,UACE,eAAC,KAAK9rB,KAAN,CAAWY,KAAK,UAAUmX,cAAc,UAAxC,SACE,eAAC,KAAD,wBAEF,eAAC,IAAD,CACE7W,MAAK,oJADP,SAGE,eAAC6qB,GAAA,EAAD,SAGJ,eAAC,KAAD,CACE1mB,MAAO,CAAEqX,aAAc,QACvBpa,YAAW,oJACXnC,KAAK,OACL6rB,UAAQ,IAEV,eAAC,KAAKhsB,KAAN,CAAWsO,MAAM,OAAO1N,KAAK,OAA7B,SACE,eAAC,KAAD,MAEF,eAAC,KAAKqrB,KAAN,CAAWrrB,KAAK,SAAhB,SACG,SAACqf,EAAD,OAAWxS,EAAX,EAAWA,IAAKye,EAAhB,EAAgBA,OAAhB,OACC,uCACGjM,EAAOpT,KAAI,gBAAGrK,EAAH,EAAGA,IAAK5B,EAAR,EAAQA,KAAMurB,EAAd,EAAcA,SAAaC,EAA3B,0BACV,gBAAC,IAAD,CAEE/mB,MAAO,CAAEga,QAAS,OAAQgN,SAAU,OAAQ3P,aAAc,GAC1DoP,MAAM,WAHR,UAKE,eAAC,KAAK9rB,KAAN,2BACMosB,GADN,IAEExrB,KAAM,CAACA,EAAM,cACburB,SAAU,CAACA,EAAU,cACrBjX,MAAO,CAAC,CAAEC,UAAU,EAAMpL,QAAS,uBAJrC,SAME,gBAAC,KAAD,CAAQuiB,YAAU,EAACpP,YAAY,mBAA/B,UACE,eAAC,GAAD,CAAQ/Z,MAAM,QAAd,mBACA,eAAC,GAAD,CAAQA,MAAM,QAAd,yBAGJ,eAAC,KAAKnD,KAAN,2BACMosB,GADN,IAEExrB,KAAM,CAACA,EAAM,QACburB,SAAU,CAACA,EAAU,QACrBjX,MAAO,CAAC,CAAEC,UAAU,EAAMpL,QAAS,iBAJrC,SAME,eAAC,KAAD,CAAaqf,IAAK,EAAGlM,YAAY,mBAEnC,6DACA,eAAC,KAAKld,KAAN,2BACMosB,GADN,IAEExrB,KAAM,CAACA,EAAM,YACburB,SAAU,CAACA,EAAU,YACrBjX,MAAO,CAAC,CAAEC,UAAU,EAAMpL,QAAS,qBAJrC,SAME,eAAC,KAAD,CAAaqf,IAAK,EAAGlM,YAAY,sBAEnC,eAACqP,GAAA,EAAD,CAAqBrsB,QAAS,kBAAMgsB,EAAOtrB,QAhCtC,OAAS4B,MAmClB,eAAC,KAAKxC,KAAN,UACE,eAAC,KAAD,CACEG,KAAK,SACLD,QAAS,kBAAMuN,KACf+e,OAAK,EACLtnB,KAAM,eAACyc,GAAA,EAAD,IAJR,+BAYR,gBAAC,KAAK3hB,KAAN,WACE,eAAC,KAAD,CAAQG,KAAK,UAAUoV,SAAS,SAAhC,oBAGA,eAAC,KAAD,CAAQpV,KAAK,YAAYoV,SAAS,SAASrV,QAAS,kBAAMR,GAAU,IAApE,yBC/JA8Q,GAAWuN,KAAXvN,OAyDOiP,GAxDE,WACf,IAAQgN,EAAavhB,aAAY,SAACC,GAAD,OAAWA,EAAM6R,UAA1CyP,SACFjtB,EAAWC,cACjB4M,qBAAU,WACR7M,EhCEuB,yCAAM,WAAOA,GAAP,kBAAAqK,EAAA,sEAE7BrK,EAAS,CAAEW,KAAMvB,KAFY,SzB2EAkH,GAAIiB,IAAI,WyB3ER,gBAGrB/F,EAHqB,EAGrBA,KACRxB,EAAS,CAAEW,KAAMzB,GAAkBwL,QAASlJ,IAC5CxB,EAAS,CAAEW,KAAMtB,KALY,kDAO7B6K,GAAY,EAAD,GAAQ5K,IAPU,0DAAN,yDgCDtB,CAACU,IACJ,IAAME,EAAWC,cAIjB,OACE,uCACE,eAAC,IAAD,CAAO0F,MAAO,CAAEqX,aAAc,IAA9B,SACE,eAAC,KAAD,CAAQxc,QANO,WACnBR,EAAS,mBAKL,0BAEF,wBACE+sB,EAAShrB,OAKT,qCACE,gBAAC,KAAD,CAAOE,WAAY8qB,EAAUlc,OAAO,MAApC,UACE,eAAC,GAAD,CACErP,MAAM,SACNuP,UAAU,OAEVC,OAAQ,SAACC,EAAMC,GAAP,OACND,EAAK9D,KAAI,SAAC6f,EAAG5qB,GAAJ,OACP,uCAEK4qB,EAAEhP,WAFP,YAEqBgP,EAAE9jB,KAFvB,+BAEkD8jB,EAAE7O,WAD7C/b,QAJP,QASN,eAAC,GAAD,CACEZ,MAAM,SAENwP,OAAQ,SAACC,EAAMC,GAAP,OACN,eAAC,IAAD,CAAOpQ,KAAK,SAAZ,SACE,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAE,uBAAkB2Q,EAAOE,KAAjC,wBAJF,eApBV,qCACE,eAAC,KAAD,CAAMtQ,KAAK,YA+Bf,eAAC,KAAD,UACE,eAAC,IAAD,CAAMP,GAAG,IAAT,wB,UClCO0sB,GAnBE,WACf,IAAMjtB,EAAWC,cAIjB,OACE,eAAC,KAAD,CACEuN,OAAO,MACPhM,MAAM,MACN0rB,SAAS,8CACTvqB,MACE,eAAC,KAAD,CAAQnC,QATC,WACbR,EAAS,MAQoBS,KAAK,UAA9B,0B,UCkEuB0sB,IAAYC,IAAnCC,OAAmCD,IAA3BE,OAA2BF,IAAnBG,MAAmBH,IAAZD,SA+chBK,GA9cH,WAAO,IAAD,IACV1tB,EAAWC,cACjB,EAA+ByR,mBAAS,CACtCic,aAAa,EACbC,SAAU,QACVC,aAAc,UACdlR,OAAQ,OACRmR,aAAc,QACdC,YAAY,IANd,mBAAOC,EAAP,KAQA,GARA,KAQgCtc,mBAAS,MAAzC,mBAAOiB,EAAP,KAAiBsb,EAAjB,KACA,EAA4Bvc,mBAAS,MAArC,mBAAOkU,EAAP,KAAesI,EAAf,KACQC,EAAaziB,aAAY,SAACC,GAAD,OAAWA,EAAMyiB,QAA1CD,SACFpuB,EAAI,OAAGouB,QAAH,IAAGA,OAAH,EAAGA,EAAU1iB,OACjBiH,EAAWrS,cACbguB,EAAOloB,GACLjG,EAAWC,cAuCjB,OAlCA0M,qBAAU,WACRohB,EAAYvb,EAASC,UACrB,IAAMvL,EAAK,OAAGrH,QAAH,IAAGA,OAAH,EAAGA,EAAMqH,MAChBA,IAEqB,IADFknB,aAAUlnB,GACdmnB,KAAa,IAAI/gB,MAAOghB,YACvCjkB,IAAQJ,MAAM,uCATlBnK,EAAS,CAAEW,KAAMpF,IACjB2E,EAAS,aAYR,CAACwS,IAEJ7F,qBAAU,WACRqhB,EAAUO,aAAG,sCACZ,IACH5hB,qBAAU,WACJ+Y,GAAU7lB,IACN,OAAN6lB,QAAM,IAANA,KAAQM,KAAK,UAAWnmB,GACxB6lB,EAAOM,KAAK,YAEZN,EAAO8I,GAAG,YAAY,SAACltB,GACrBsT,IAAagN,KAAK,CAChBvX,QAAS,QACTzH,YAAa,OACb4C,KAAM,eAACipB,EAAA,EAAD,IACN3oB,UAAW,sBAIhB,CAAC4f,EAAQ7lB,IAE2BsuB,EAAd,eAAjB,OAAJtuB,QAAI,IAAJA,GAAA,UAAAA,EAAM8R,aAAN,eAAazQ,MAA6BwtB,GAChB,UAAjB,OAAJ7uB,QAAI,IAAJA,GAAA,UAAAA,EAAM8R,aAAN,eAAazQ,MAAwBytB,GAClC1oB,GAEV,sBACEmB,GAAG,kBACHzB,MAAO,CACLolB,OAAQ,SAHZ,SAME,eAAC,KAAD,qCACEvpB,OAAO,EACPotB,KAAM,kBACJ,eAAC,IAAD,CAAOxuB,UAAU,OAAOY,IAAI,iBAAiB6tB,SAAS,MAEpDV,GALN,IAME3b,SAAU,CACRC,YAEFqc,iBAAkB,SAACzrB,GA8BjB,OACE,eAAC,IAAD,CAAOjD,UAAU,OAAOY,IAAI,iBAAiB6tB,SAAS,KAG1DE,WAAY,SAAC1rB,EAAO2rB,GAClB,QAAOnvB,GAAOmvB,GAEhBC,kBAAmB,SAACjsB,GAAD,OAAOyH,QAAQC,IAAI1H,IACtCksB,eAAgB,SAAC/sB,EAAMgtB,GACrB,IAAIrd,EAAO3P,EAAK2P,KAAKwX,MAAM,OAAO,GAClC,OAAO,eAAC,IAAD,CAAM/oB,GAAIuR,GAAQ,IAAlB,SAAwBqd,KAEjCC,mBAAoB,kBAClB,gBAAC,IAAD,CAAOtuB,KAAK,QAAZ,UACE,eAAC,GAAD,CAAYjB,KAAMA,IAClB,eAAC,GAAD,CAAQA,KAAMA,SAGdiuB,GAzDN,aA2DE,eAACX,GAAD,CAAS/sB,UAAU,yBAAnB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CACE0R,KAAK,IACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAMsY,OAAQA,EAAQ7lB,KAAMA,QAIlC,eAAC,IAAD,CACEiS,KAAK,cACL1E,QACE,eAAC,GAAD,UACE,eAACiiB,GAAD,CAAgB3J,OAAQA,EAAQ7lB,KAAMA,QAI5C,eAAC,IAAD,CACEiS,KAAK,SACL1E,QACE,eAAC,GAAD,UACE,eAACkiB,GAAD,CAAW5J,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,UACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,iBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,mBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAasY,OAAQA,EAAQ7lB,KAAMA,QAIzC,eAAC,IAAD,CACEiS,KAAK,mBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,eACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,kBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAcsY,OAAQA,EAAQ7lB,KAAMA,QAK1C,eAAC,IAAD,CACEiS,KAAK,SACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAItC,eAAC,IAAD,CACEiS,KAAK,gBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAItC,eAAC,IAAD,CACEiS,KAAK,SACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,WACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAASsY,OAAQA,EAAQ7lB,KAAMA,QAIrC,eAAC,IAAD,CACEiS,KAAK,gBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAWsY,OAAQA,EAAQ7lB,KAAMA,QAIvC,eAAC,IAAD,CACEiS,KAAK,kBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAasY,OAAQA,EAAQ7lB,KAAMA,QAIzC,eAAC,IAAD,CACEiS,KAAK,cACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAesY,OAAQA,EAAQ7lB,KAAMA,QAI3C,eAAC,IAAD,CACEiS,KAAK,QACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAMsY,OAAQA,EAAQ7lB,KAAMA,QAIlC,eAAC,IAAD,CACEiS,KAAK,SACL1E,QACE,eAAC,GAAD,UACE,eAACmiB,GAAD,CAAO7J,OAAQA,EAAQ7lB,KAAMA,QAInC,eAAC,IAAD,CACEiS,KAAK,qBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAesY,OAAQA,EAAQ7lB,KAAMA,QAI3C,eAAC,IAAD,CACEiS,KAAK,uBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAesY,OAAQA,EAAQ7lB,KAAMA,QAI3C,eAAC,IAAD,CACEiS,KAAK,SACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAItC,eAAC,IAAD,CACEiS,KAAK,gBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAItC,eAAC,IAAD,CACEiS,KAAK,kBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAItC,eAAC,IAAD,CACEiS,KAAK,YACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAUsY,OAAQA,EAAQ7lB,KAAMA,QAKtC,eAAC,IAAD,CACEiS,KAAK,YACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAasY,OAAQA,EAAQ7lB,KAAMA,QAIzC,eAAC,IAAD,CACEiS,KAAK,uBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAasY,OAAQA,EAAQ7lB,KAAMA,QAKzC,eAAC,IAAD,CACEiS,KAAK,cACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAcsY,OAAQA,EAAQ7lB,KAAMA,QAI1C,eAAC,IAAD,CACEiS,KAAK,mBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAcsY,OAAQA,EAAQ7lB,KAAMA,QAI1C,eAAC,IAAD,CACEiS,KAAK,iBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAcsY,OAAQA,EAAQ7lB,KAAMA,QAI1C,eAAC,IAAD,CACEiS,KAAK,qBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAiBsY,OAAQA,EAAQ7lB,KAAMA,QAI7C,eAAC,IAAD,CACEiS,KAAK,sBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAiBsY,OAAQA,EAAQ7lB,KAAMA,QAI7C,eAAC,IAAD,CACEiS,KAAK,oBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAiBsY,OAAQA,EAAQ7lB,KAAMA,QAI7C,eAAC,IAAD,CACEiS,KAAK,oBACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAiBsY,OAAQA,EAAQ7lB,KAAMA,QAK7C,eAAC,IAAD,CACEiS,KAAK,UACL1E,QACE,eAAC,GAAD,UACE,eAACoiB,GAAD,CAAiB9J,OAAQA,EAAQ7lB,KAAMA,QAI7C,eAAC,IAAD,CACEiS,KAAK,iBACL1E,QACE,eAAC,GAAD,UACE,eAACqiB,GAAD,CAAiB/J,OAAQA,EAAQ7lB,KAAMA,QAI7C,eAAC,IAAD,CACEiS,KAAK,mBACL1E,QACE,eAAC,GAAD,UACE,eAACqiB,GAAD,CAAiB/J,OAAQA,EAAQ7lB,KAAMA,QAK7C,eAAC,IAAD,CACEiS,KAAK,QACL1E,QACE,eAAC,GAAD,UACE,eAAC,GAAD,CAAMsY,OAAQA,EAAQ7lB,KAAMA,QAIlC,eAAC,IAAD,CACEiS,KAAK,iBACL1E,QAAS,eAAC,GAAD,CAAmBsY,OAAQA,EAAQ7lB,KAAMA,MAEpD,eAAC,IAAD,CAAOuN,QAAS,eAAC,GAAD,iB,SC/dbsiB,GAvBK,WAGd,IAFJjkB,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAMsiB,SAAU,MAClDrtB,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKnF,EACH,OAAO,2BAAKmQ,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK1O,EACH,OAAO,2BAAKkQ,GAAZ,IAAmBE,WAAW,IAChC,KAAKnQ,EACH,OAAO,2BAAKiQ,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAKvQ,EAEH,OADAwL,aAAa+oB,QAAQ,UAAW3oB,KAAK4oB,UAAL,sBAAoBhvB,QAApB,IAAoBA,OAApB,EAAoBA,EAAQU,QACrD,2BAAKmK,GAAZ,IAAmBwiB,SAAQ,OAAErtB,QAAF,IAAEA,OAAF,EAAEA,EAAQU,OACvC,KAAKjG,EAEH,OADAuL,aAAaipB,QACN,2BAAKpkB,GAAZ,IAAmBwiB,SAAU,OAC/B,QACE,OAAOxiB,ICfPqkB,GAAcC,0BAAgB,CAClCrkB,OCEa,WAST,IARJD,EAQG,uDARK,CACNxB,MAAO,KACP0B,WAAW,EACXD,OAAQ,GACRskB,SAAU,GACVplB,MAAO,MAEThK,EACG,uCACH,OAAQA,EAAOH,MACb,KAAK5F,EACH,OAAO,2BAAK4Q,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAKnP,EACH,OAAO,2BAAK2Q,GAAZ,IAAmBE,WAAW,IAChC,KAAK5Q,EACH,OAAO,2BAAK0Q,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAKlR,EACH,OAAO,2BACFgR,GADL,IAEEC,OAAQD,EAAMC,OAAOyB,KAAI,SAACvC,GAAD,OACvBA,EAAMwG,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAUI,KAEtDA,MAAOhK,EAAO4J,UAElB,KAAK7P,EACH,OAAO,2BAAK8Q,GAAZ,IAAmBb,MAAOhK,EAAO4J,UAEnC,KAAK5P,EAEH,IAAMq1B,EACJrvB,EAAO4J,QAAQlJ,KAAKoK,OAAOyB,KAAI,SAACvC,GAC9B,IAAM6C,EAAY7C,EAAM6C,UACxB,MAAO,CACLrG,GAAIwD,EAAMwG,IACV5P,MAAM,GAAD,OAAKoJ,EAAM/K,KAAKsB,WAAhB,YAA8ByJ,EAAM/K,KAAKuB,UAAzC,aAAuDwJ,EAAM6C,UAA7D,KACL4V,MAAOzY,EAAM2C,SACb4L,IAAI,gBAAD,OAAkBvO,EAAMwG,KAC3BkS,IAAK1Y,EAAMkM,OACX0N,cAAe,CACbpH,OAAQxS,EAAMwS,QAEhB8S,QAAQ,EACR/e,MACe,UAAb1D,EACI,OACa,WAAbA,EACA,QACA,WAEJ,GACF0iB,EACJvvB,EAAO4J,QAAQlJ,KAAKqkB,SAASxY,KAAI,SAACiZ,GAChC,MAAO,CACLhf,GAAIgf,EAAQhV,IACZ5P,MAAO4kB,EAAQ5kB,MACf6hB,MAAO+C,EAAQ9O,UACfgM,IAAK8C,EAAQ7O,QACb2Y,QAAQ,EACRvQ,QAAS,kBAEP,GACR,OAAO,2BACFlU,GADL,IAEEC,OAAO,GAAD,oBAAMykB,GAAN,aAAsBF,MAEhC,KAAKv1B,EACH,OAAO,2BAAK+Q,GAAZ,IAAmBC,OAAQ9K,EAAO4J,UACpC,KAAKhQ,EACH,OAAO,2BAAKiR,GAAZ,IAAmBC,OAAO,GAAD,oBAAMD,EAAMC,QAAZ,CAAoB9K,EAAO4J,YAEtD,KAAKxP,EACH,OAAO,2BAAKyQ,GAAZ,IAAmBC,OAAQ9K,EAAO4J,UAEpC,KAAKvP,EACH,OAAO,2BAAKwQ,GAAZ,IAAmBgG,cAAe7Q,EAAO4J,UAE3C,KAAKtP,EACH,OAAO,2BAAKuQ,GAAZ,IAAmBC,OAAQ9K,EAAO4J,UAEpC,KAAKrP,EACH,OAAO,2BAAKsQ,GAAZ,IAAmBG,YAAahL,EAAO4J,UAEzC,KAAKzN,GACH,OAAO,2BAAK0O,GAAZ,IAAmBoB,WAAYjM,EAAO4J,UAExC,QACE,OAAOiB,ID1FXyiB,QACAvT,MENa,WAGT,IAFJlP,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAMgP,MAAO,IAC/C/Z,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKpE,GACH,OAAO,2BAAKoP,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK3N,GACH,OAAO,2BAAKmP,GAAZ,IAAmBE,WAAW,IAChC,KAAKpP,GACH,OAAO,2BAAKkP,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAKzP,GACH,OAAO,2BACFuP,GADL,IAEEkP,MAAOlP,EAAMkP,MAAMxN,KAAI,SAACiR,GAAD,OACrBA,EAAKhN,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAU4T,OAGzD,KAAKhiB,GACH,OAAO,2BAAKqP,GAAZ,IAAmBkP,MAAO/Z,EAAO4J,UACnC,KAAKvO,GACH,OAAO,2BAAKwP,GAAZ,IAAmBkP,MAAM,GAAD,oBAAMlP,EAAMkP,OAAZ,CAAmB/Z,EAAO4J,YACpD,KAAKrO,GACH,OAAO,2BACFsP,GADL,IAEEkP,MAAOlP,EAAMkP,MAAMrG,QAAO,SAAC8J,GAAD,OAAUA,EAAKhN,MAAQxQ,EAAO4J,aAE5D,QACE,OAAOiB,IFvBXmT,MGNa,WAA8C,IAA7CnT,EAA4C,uDAApC,CAAEmT,MAAO,GAAI/e,KAAM,IAAMe,EAAW,uCAC1D,OAAQA,EAAOH,MACb,KAAK5E,EACH,OAAO,2BAAK4P,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAKnO,EACH,OAAO,2BAAK2P,GAAZ,IAAmBE,WAAW,IAChC,KAAK5P,EACH,OAAO,2BAAK0P,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAKjQ,EACH,OAAO,2BACF+P,GADL,IAEEmT,MAAOnT,EAAMmT,MAAMzR,KAAI,SAACtN,GAAD,OACrBA,EAAKuR,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAU3K,OAGzD,KAAKjE,EACH,OAAO,2BAAK6P,GAAZ,IAAmB5L,KAAMe,EAAO4J,UAClC,KAAK7O,EACH,OAAO,2BAAK8P,GAAZ,IAAmBmT,MAAOhe,EAAO4J,UACnC,KAAK/O,EACH,OAAO,2BAAKgQ,GAAZ,IAAmBmT,MAAM,GAAD,oBAAMnT,EAAMmT,OAAZ,CAAmBhe,EAAO4J,YAEpD,KAAKxO,EACH,OAAO,2BAAKyP,GAAZ,IAAmBmT,MAAOhe,EAAO4J,UACnC,QACE,OAAOiB,IHpBX8K,WIRa,WAGT,IAFJ9K,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAM4K,WAAY,IACpD3V,EACG,uCACH,OAAQA,EAAOH,MACb,KAAK7D,GACH,OAAO,2BAAK6O,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAKpN,GACH,OAAO,2BAAK4O,GAAZ,IAAmBE,WAAW,IAChC,KAAK7O,GACH,OAAO,2BAAK2O,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAKlP,GACH,OAAO,2BACFgP,GADL,IAEE8K,WAAY9K,EAAM8K,WAAWpJ,KAAI,SAACM,GAAD,OAC/BA,EAAU2D,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAUiD,OAG9D,KAAK9Q,GACH,OAAO,2BAAK8O,GAAZ,IAAmBgC,UAAW7M,EAAO4J,QAASmB,WAAW,IAC3D,KAAKjP,GACH,OAAO,2BAAK+O,GAAZ,IAAmB8K,WAAY3V,EAAO4J,UACxC,KAAKhO,GACH,OAAO,2BAAKiP,GAAZ,IAAmB8K,WAAW,GAAD,oBAAM9K,EAAM8K,YAAZ,CAAwB3V,EAAO4J,YAC9D,QACE,OAAOiB,IJlBXkG,MKTa,WAGT,IAFJlG,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAMgG,MAAO,IAC/C/Q,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKrD,GACH,OAAO,2BAAKqO,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK5M,GACH,OAAO,2BAAKoO,GAAZ,IAAmBE,WAAW,IAChC,KAAKrO,GACH,OAAO,2BAAKmO,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAK1O,GACH,OAAO,2BACFwO,GADL,IAEEkG,MAAOlG,EAAMkG,MAAMxE,KAAI,SAACtF,GAAD,OACrBA,EAAKuJ,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAU3C,OAGzD,KAAK1K,GACH,OAAO,2BAAKsO,GAAZ,IAAmB5D,KAAMjH,EAAO4J,UAClC,KAAKtN,GACH,OAAO,2BAAKuO,GAAZ,IAAmBkG,MAAO/Q,EAAO4J,UACnC,KAAKxN,GACH,OAAO,2BAAKyO,GAAZ,IAAmBkG,MAAM,GAAD,oBAAMlG,EAAMkG,OAAZ,CAAmB/Q,EAAO4J,YACpD,QACE,OAAOiB,ILjBXka,SMTa,WAGT,IAFJla,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAMga,SAAU,IAClD/kB,EACG,uCACH,OAAQA,EAAOH,MACb,KAAK9C,GACH,OAAO,2BAAK8N,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAKrM,GACH,OAAO,2BAAK6N,GAAZ,IAAmBE,WAAW,IAChC,KAAK9N,GACH,OAAO,2BAAK4N,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAErD,KAAKnO,GACH,OAAO,2BACFiO,GADL,IAEEka,SAAS,2BACJla,EAAMka,UADH,IAENlF,MAAOhV,EAAMka,SAASlF,MAAMtT,KAAI,SAACiZ,GAAD,OAC9BA,EAAQhV,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAU4b,SAI9D,KAAKtoB,GACL,KAAKJ,GACH,OAAO,2BAAK+N,GAAZ,IAAmBka,SAAU/kB,EAAO4J,UACtC,KAAKjN,GACH,OAAO,2BACFkO,GADL,IAEEka,SAAS,2BACJla,EAAMka,UADH,IAENlF,MAAM,GAAD,oBAAMhV,EAAMka,SAASlF,OAArB,CAA4B7f,EAAO4J,cAG9C,KAAK/M,GACH,OAAO,2BACFgO,GADL,IAEEka,SAAS,2BACJla,EAAMka,UADH,IAENlF,MAAOhV,EAAMka,SAASlF,MAAMnM,QAC1B,SAAC8R,GAAD,OAAaA,EAAQhV,MAAQxQ,EAAO4J,eAI5C,QACE,OAAOiB,INlCXI,UOHa,WAGT,IAFJJ,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAME,UAAW,IACnDjL,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKvC,GACH,OAAO,2BAAKuN,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK9L,GACH,OAAO,2BAAKsN,GAAZ,IAAmBE,WAAW,IAChC,KAAKvN,GACH,OAAO,2BAAKqN,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAK1N,GACH,OAAO,2BAAKwN,GAAZ,IAAmBV,SAAUnK,EAAO4J,UACtC,KAAKxM,GACH,OAAO,2BAAKyN,GAAZ,IAAmBI,UAAWjL,EAAO4J,UACvC,KAAKzM,GACH,OAAO,2BAAK0N,GAAZ,IAAmBI,UAAU,GAAD,oBAAMJ,EAAMI,WAAZ,CAAuBjL,EAAO4J,YAE5D,KAAKnM,GAML,KAAKC,GACH,OAAO,2BACFmN,GADL,IAEEV,SAAUnK,EAAO4J,UAGrB,KAAKjM,GACH,OAAO,2BAAKkN,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,KAAKhM,GACH,OAAO,2BACFiN,GADL,IAEEI,UAAWJ,EAAMI,UAAUsB,KAAI,SAACpC,GAAD,OAC7BA,EAASqG,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAUO,KAEzDA,SAAUnK,EAAO4J,UAGrB,KAAK/L,GACH,OAAO,2BAAKgN,GAAZ,IAAmBoe,aAAcjpB,EAAO4J,UAE1C,KAAK9L,GACH,OAAO,2BAAK+M,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,KAAK7L,GACH,OAAO,2BAAK8M,GAAZ,IAAmBic,iBAAkB9mB,EAAO4J,UAE9C,KAAK5L,GACH,OAAO,2BAAK6M,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,KAAK3L,GACH,OAAO,2BAAK4M,GAAZ,IAAmBse,cAAenpB,EAAO4J,UAE3C,QACE,OAAOiB,IPxDX2kB,gBQLa,WAGT,IAFJ3kB,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAME,UAAW,IACnDjL,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKvC,GACH,OAAO,2BAAKuN,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK9L,GACH,OAAO,2BAAKsN,GAAZ,IAAmBE,WAAW,IAChC,KAAKvN,GACH,OAAO,2BAAKqN,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAK1N,GACH,OAAO,2BAAKwN,GAAZ,IAAmBV,SAAUnK,EAAO4J,UACtC,KAAKxM,GACH,OAAO,2BAAKyN,GAAZ,IAAmBI,UAAWjL,EAAO4J,UACvC,KAAKzM,GACH,OAAO,2BAAK0N,GAAZ,IAAmBI,UAAU,GAAD,oBAAMJ,EAAMI,WAAZ,CAAuBjL,EAAO4J,YAE5D,KAAKnM,GAML,KAAKC,GACH,OAAO,2BACFmN,GADL,IAEEV,SAAUnK,EAAO4J,UAGrB,KAAKjM,GACH,OAAO,2BAAKkN,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,KAAKhM,GACH,OAAO,2BACFiN,GADL,IAEEI,UAAWJ,EAAMI,UAAUsB,KAAI,SAACpC,GAAD,OAC7BA,EAASqG,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAUO,KAEzDA,SAAUnK,EAAO4J,UAGrB,KAAK/L,GACH,OAAO,2BAAKgN,GAAZ,IAAmBoe,aAAcjpB,EAAO4J,UAE1C,KAAK9L,GACH,OAAO,2BAAK+M,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,KAAK7L,GACH,OAAO,2BAAK8M,GAAZ,IAAmBic,iBAAkB9mB,EAAO4J,UAE9C,KAAK5L,GACH,OAAO,2BAAK6M,GAAZ,IAAmBI,UAAWjL,EAAO4J,UAEvC,QACE,OAAOiB,IRnDX6R,OSba,WAGT,IAFJ7R,EAEG,uDAFK,CAAExB,MAAO,KAAM0B,WAAW,EAAMohB,SAAU,IAClDnsB,EACG,uCACH,OAAQA,EAAOH,MACb,KAAKvB,GACH,OAAO,2BAAKuM,GAAZ,IAAmBE,WAAW,EAAM1B,MAAO,OAC7C,KAAK9K,GACH,OAAO,2BAAKsM,GAAZ,IAAmBE,WAAW,IAChC,KAAKvM,GACH,OAAO,2BAAKqM,GAAZ,IAAmBxB,MAAOrJ,EAAOqJ,MAAO0B,WAAW,IAGrD,KAAK5M,GACH,OAAO,2BACF0M,GADL,IAEEshB,SAAUthB,EAAMshB,SAAS5f,KAAI,SAACmQ,GAAD,OAC3BA,EAAOlM,MAAQxQ,EAAO4J,QAAQ4G,IAAMxQ,EAAO4J,QAAU8S,OAG3D,KAAKre,GACH,OAAO,2BAAKwM,GAAZ,IAAmB6R,OAAQ1c,EAAO4J,UACpC,KAAKxL,GACH,OAAO,2BAAKyM,GAAZ,IAAmBshB,SAAUnsB,EAAO4J,UACtC,KAAK1L,GACH,OAAO,2BAAK2M,GAAZ,IAAmBshB,SAAS,GAAD,oBAAMthB,EAAMshB,UAAZ,CAAsBnsB,EAAO4J,YAC1D,QACE,OAAOiB,M,qCCzBO4kB,QACW,cAA7B1O,OAAOnP,SAAS8d,UAEe,UAA7B3O,OAAOnP,SAAS8d,UAEhB3O,OAAOnP,SAAS8d,SAASC,MAAM,2DCjBnC,ICoBMC,GAAgB,CACpB1tB,IAAK,OACL2tB,cAGIC,GAAmBC,YAAeH,IZChB,SAAC/kB,EAAO7K,GAM9B,OAJIA,EAAOH,OAASpF,IAClBoQ,OAAQmlB,GAGHd,GAAYrkB,EAAO7K,MYNtBiwB,GAAQC,sBACZJ,GACAK,8BAAoBC,0BAAgBC,OAEhCC,GAAYC,YAAaN,IAG/BO,IAASpgB,OACP,eAAC,IAAD,CAAU6f,MAAOA,GAAjB,SACE,eAAC,IAAD,CAAa1sB,QAAS,KAAM+sB,UAAWA,GAAvC,SACE,eAAC,IAAD,CAAgBrV,OAAQC,KAAxB,SACE,eAAC,IAAD,UACE,eAAC,GAAD,YAKR+F,SAASwP,eAAe,SFoFpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5a,MAAK,SAAC6a,GACLA,EAAaC,gBAEdC,OAAM,SAAC1nB,GACNQ,QAAQR,MAAMA,EAAMI,a",
  "file": "static/js/main.9700255c.chunk.js",
  "sourcesContent": [
    "export const CREATE_LEAVE = 'CREATE_LEAVE';\r\nexport const UPDATE_LEAVE = 'UPDATE_LEAVE';\r\nexport const DELETE_LEAVE = 'DELETE_LEAVE';\r\nexport const FETCH_ALL_LEAVE = 'FETCH_ALL_LEAVE';\r\nexport const FETCH_ONE_LEAVE = 'FETCH_ONE_LEAVE';\r\nexport const FETCH_LEAVE_BY_DATERANGE = 'FETCH_LEAVE_BY_DATERANGE';\r\nexport const LEAVE_START_LOADING = 'LEAVE_START_LOADING';\r\nexport const LEAVE_END_LOADING = 'LEAVE_END_LOADING';\r\nexport const LEAVE_ERROR = 'LEAVE_ERROR';\r\nexport const FETCH_LEAVE_REQUESTS = 'FETCH_LEAVE_REQUESTS';\r\nexport const FETCH_UPCOMING_LEAVE = 'FETCH_UPCOMING_LEAVE';\r\nexport const FETCH_LEAVE_HISTORY = 'FETCH_LEAVE_HISTORY';\r\nexport const FETCH_TODAY_LEAVE = 'FETCH_TODAY_LEAVE';\r\n\r\nexport const AUTH = 'AUTH';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTH_START_LOADING = 'AUTH_START_LOADING';\r\nexport const AUTH_END_LOADING = 'AUTH_END_LOADING';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const UPDATE_USER = 'UPDATE_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const FETCH_ALL_USER = 'FETCH_ALL_USER';\r\nexport const FETCH_ONE_USER = 'FETCH_ONE_USER';\r\nexport const USER_START_LOADING = 'USER_START_LOADING';\r\nexport const USER_END_LOADING = 'USER_END_LOADING';\r\nexport const USER_ERROR = 'USER_ERROR';\r\nexport const FETCH_DEPT_USER = 'FETCH_DEPT_USER';\r\n\r\nexport const CREATE_DEPT = 'CREATE_DEPT';\r\nexport const UPDATE_DEPT = 'UPDATE_DEPT';\r\nexport const DELETE_DEPT = 'DELETE_DEPT';\r\nexport const FETCH_ALL_DEPT = 'FETCH_ALL_DEPT';\r\nexport const FETCH_ONE_DEPT = 'FETCH_ONE_DEPT';\r\nexport const DEPT_START_LOADING = 'DEPT_START_LOADING';\r\nexport const DEPT_END_LOADING = 'DEPT_END_LOADING';\r\nexport const DEPT_ERROR = 'DEPT_ERROR';\r\n\r\nexport const CREATE_LEAVETYPE = 'CREATE_LEAVETYPE';\r\nexport const UPDATE_LEAVETYPE = 'UPDATE_LEAVETYPE';\r\nexport const DELETE_LEAVETYPE = 'DELETE_LEAVETYPE';\r\nexport const FETCH_ALL_LEAVETYPE = 'FETCH_ALL_LEAVETYPE';\r\nexport const FETCH_ONE_LEAVETYPE = 'FETCH_ONE_LEAVETYPE';\r\nexport const LEAVETYPE_START_LOADING = 'LEAVETYPE_START_LOADING';\r\nexport const LEAVETYPE_END_LOADING = 'LEAVETYPE_END_LOADING';\r\nexport const LEAVETYPE_ERROR = 'LEAVE_ERROR';\r\nexport const FETCH_LEAVE_COUNT = 'FETCH_LEAVE_COUNT';\r\n\r\nexport const CREATE_ROLE = 'CREATE_ROLE';\r\nexport const UPDATE_ROLE = 'UPDATE_ROLE';\r\nexport const DELETE_ROLE = 'DELETE_ROLE';\r\nexport const FETCH_ALL_ROLE = 'FETCH_ALL_ROLE';\r\nexport const FETCH_ONE_ROLE = 'FETCH_ONE_ROLE';\r\nexport const ROLE_START_LOADING = 'ROLE_START_LOADING';\r\nexport const ROLE_END_LOADING = 'ROLE_END_LOADING';\r\nexport const ROLE_ERROR = 'ROLE_ERROR';\r\n\r\nexport const CREATE_HOLIDAY = 'CREATE_HOLIDAY';\r\nexport const UPDATE_HOLIDAY = 'UPDATE_HOLIDAY';\r\nexport const DELETE_HOLIDAY = 'DELETE_HOLIDAY';\r\nexport const FETCH_ALL_HOLIDAY = 'FETCH_ALL_HOLIDAY';\r\nexport const FETCH_ONE_HOLIDAY = 'FETCH_ONE_HOLIDAY';\r\nexport const HOLIDAY_START_LOADING = 'HOLIDAY_START_LOADING';\r\nexport const HOLIDAY_END_LOADING = 'HOLIDAY_END_LOADING';\r\nexport const HOLIDAY_ERROR = 'HOLIDAY_ERROR';\r\nexport const FETCH_HOLIDAY_BY_YEAR = 'FETCH_HOLIDAY_BY_YEAR';\r\n\r\nexport const CREATE_TRAINING = 'CREATE_TRAINING';\r\nexport const FETCH_ALL_TRAINING = 'FETCH_ALL_TRAINING';\r\nexport const FETCH_ONE_TRAINING = 'FETCH_ONE_TRAINING';\r\nexport const TRAINING_START_LOADING = 'TRAINING_START_LOADING';\r\nexport const TRAINING_END_LOADING = 'TRAINING_END_LOADING';\r\nexport const TRAINING_ERROR = 'TRAINING_ERROR';\r\nexport const UPDATE_TRAINING = 'UPDATE_TRAINING';\r\nexport const LEAVE_TRAINING = 'LEAVE_TRAINING';\r\nexport const FETCH_EXT_TRAINING = 'FETCH_EXT_TRAINING';\r\nexport const UPDATE_TRAINING_STATUS = 'UPDATE_TRAINING_STATUS';\r\nexport const FETCH_EXT_TRAINING_HISTORY = 'FETCH_EXT_TRAINING_HISTORY';\r\nexport const FETCH_TRAINING_HISTORY = 'FETCH_TRAINING_HISTORY';\r\nexport const FETCH_UPCOMING_TRAINING = 'FETCH_UPCOMING_TRAINING';\r\nexport const FETCH_TODAY_TRAINING = 'FETCH_TODAY_TRAINING';\r\nexport const FETCH_TRAINING_COUNT = 'FETCH_TRAINING_COUNT';\r\n\r\nexport const CREATE_TRAININGREQUEST = 'CREATE_TRAININGREQUEST';\r\nexport const FETCH_ALL_TRAININGREQUEST = 'FETCH_ALL_TRAININGREQUEST';\r\nexport const FETCH_ONE_TRAININGREQUEST = 'FETCH_ONE_TRAININGREQUEST';\r\nexport const TRAININGREQUEST_START_LOADING = 'TRAININGREQUEST_START_LOADING';\r\nexport const TRAININGREQUEST_END_LOADING = 'TRAININGREQUEST_END_LOADING';\r\nexport const TRAININGREQUEST_ERROR = 'TRAININGREQUEST_ERROR';\r\nexport const UPDATE_TRAININGREQUEST = 'UPDATE_TRAININGREQUEST';\r\nexport const LEAVE_TRAININGREQUEST = 'LEAVE_TRAININGREQUEST';\r\nexport const FETCH_EXT_TRAININGREQUEST = 'FETCH_EXT_TRAININGREQUEST';\r\nexport const UPDATE_TRAININGREQUEST_STATUS = 'UPDATE_TRAININGREQUEST_STATUS';\r\nexport const FETCH_EXT_TRAININGREQUEST_HISTORY =\r\n  'FETCH_EXT_TRAININGREQUEST_HISTORY';\r\nexport const FETCH_TRAININGREQUEST_HISTORY = 'FETCH_TRAININGREQUEST_HISTORY';\r\nexport const FETCH_UPCOMING_TRAININGREQUEST = 'FETCH_UPCOMING_TRAININGREQUEST';\r\nexport const FETCH_TODAY_TRAININGREQUEST = 'FETCH_TODAY_TRAININGREQUEST';\r\n\r\nexport const CREATE_POLICY = 'CREATE_POLICY';\r\nexport const UPDATE_POLICY = 'UPDATE_POLICY';\r\nexport const DELETE_POLICY = 'DELETE_POLICY';\r\nexport const FETCH_ALL_POLICY = 'FETCH_ALL_POLICY';\r\nexport const FETCH_ONE_POLICY = 'FETCH_ONE_POLICY';\r\nexport const POLICY_START_LOADING = 'POLICY_START_LOADING';\r\nexport const POLICY_END_LOADING = 'POLICY_END_LOADING';\r\nexport const POLICY_ERROR = 'POLICY_ERROR';\r\n",
    "import { Dropdown } from 'antd';\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './index.less';\n\nconst HeaderDropdown = ({ overlayClassName: cls, ...restProps }) => (\n  <Dropdown overlayClassName={classNames(styles.container, cls)} {...restProps} />\n);\n\nexport default HeaderDropdown;\n",
    "import {\n  LogoutOutlined,\n  SettingOutlined,\n  UserOutlined,\n} from '@ant-design/icons';\nimport { Avatar, Menu, Spin } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { LOGOUT } from '../../constants/actionTypes';\nimport HeaderDropdown from '../HeaderDropdown';\nimport styles from './index.less';\n\nconst AvatarDropdown = ({ user }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n\n    navigate('/auth');\n  };\n  const login = () => {\n    navigate('/auth');\n  };\n\n  const menu = true;\n  const currentUser = {\n    avatar:\n      'https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png',\n    name: 'Cheah',\n  };\n  const menuHeaderDropdown = (\n    <Menu className={styles.menu}>\n      <Menu.Item key='profile'>\n        <Link to='/profile'>Profile</Link>\n      </Menu.Item>\n      <Menu.Item key='logout' onClick={logout}>\n        <LogoutOutlined />\n        Logout\n      </Menu.Item>\n    </Menu>\n  );\n  return user ? (\n    <HeaderDropdown overlay={menuHeaderDropdown}>\n      <span className={`${styles.action} ${styles.account}`}>\n        <Avatar\n          size='small'\n          className={styles.avatar}\n          src='https://gw.alipayobjects.com/zos/rmsportal/BiazfanxmamNRoxxVxka.png'\n          alt='avatar'\n        />\n        <span\n          className={`${styles.name} anticon`}\n        >{`${user.first_name} ${user.last_name}`}</span>\n      </span>\n    </HeaderDropdown>\n  ) : (\n    <Link to='/auth'>Login</Link>\n  );\n};\n\nexport default AvatarDropdown;\n",
    "import { Avatar, List } from 'antd';\nimport React from 'react';\nimport classNames from 'classnames';\nimport styles from './NoticeList.less';\n\nconst NoticeList = ({\n  data = [],\n  onClick,\n  onClear,\n  title,\n  onViewMore,\n  emptyText,\n  showClear = true,\n  clearText,\n  viewMoreText,\n  showViewMore = false,\n}) => {\n  if (!data || data.length === 0) {\n    return (\n      <div className={styles.notFound}>\n        <img\n          src='https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg'\n          alt='not found'\n        />\n        <div>{emptyText}</div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <List\n        className={styles.list}\n        dataSource={data}\n        renderItem={(item, i) => {\n          const itemCls = classNames(styles.item, {\n            [styles.read]: item.read,\n          }); // eslint-disable-next-line no-nested-ternary\n\n          const leftIcon = item.avatar ? (\n            typeof item.avatar === 'string' ? (\n              <Avatar className={styles.avatar} src={item.avatar} />\n            ) : (\n              <span className={styles.iconElement}>{item.avatar}</span>\n            )\n          ) : null;\n          return (\n            <List.Item\n              className={itemCls}\n              key={item.key || i}\n              onClick={() => {\n                onClick?.(item);\n              }}\n            >\n              <List.Item.Meta\n                className={styles.meta}\n                avatar={leftIcon}\n                title={\n                  <div className={styles.title}>\n                    {item.title}\n                    <div className={styles.extra}>{item.extra}</div>\n                  </div>\n                }\n                description={\n                  <div>\n                    <div className={styles.description}>{item.description}</div>\n                    <div className={styles.datetime}>{item.datetime}</div>\n                  </div>\n                }\n              />\n            </List.Item>\n          );\n        }}\n      />\n      <div className={styles.bottomBar}>\n        {showClear ? (\n          <div onClick={onClear}>\n            {clearText} {title}\n          </div>\n        ) : null}\n        {showViewMore ? (\n          <div\n            onClick={(e) => {\n              if (onViewMore) {\n                onViewMore(e);\n              }\n            }}\n          >\n            {viewMoreText}\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default NoticeList;\n",
    "import { BellOutlined } from '@ant-design/icons';\nimport { Badge, Spin, Tabs } from 'antd';\nimport useMergedState from 'rc-util/es/hooks/useMergedState';\nimport React from 'react';\nimport classNames from 'classnames';\nimport NoticeList from './NoticeList';\nimport HeaderDropdown from '../HeaderDropdown';\nimport styles from './index.less';\n\nconst { TabPane } = Tabs;\n\nconst NoticeIcon = (props) => {\n  const getNotificationBox = () => {\n    const {\n      children,\n      loading,\n      onClear,\n      onTabChange,\n      onItemClick,\n      onViewMore,\n      clearText,\n      viewMoreText,\n    } = props;\n\n    if (!children) {\n      return null;\n    }\n\n    const panes = [];\n    React.Children.forEach(children, (child) => {\n      if (!child) {\n        return;\n      }\n\n      const { list, title, count, tabKey, showClear, showViewMore } = child.props;\n      const len = list && list.length ? list.length : 0;\n      const msgCount = count || count === 0 ? count : len;\n      const tabTitle = msgCount > 0 ? `${title} (${msgCount})` : title;\n      panes.push(\n        <TabPane tab={tabTitle} key={tabKey}>\n          <NoticeList\n            {...child.props}\n            clearText={clearText}\n            viewMoreText={viewMoreText}\n            data={list}\n            onClear={() => {\n              onClear?.(title, tabKey);\n            }}\n            onClick={(item) => {\n              onItemClick?.(item, child.props);\n            }}\n            onViewMore={(event) => {\n              onViewMore?.(child.props, event);\n            }}\n            showClear={showClear}\n            showViewMore={showViewMore}\n            title={title}\n          />\n        </TabPane>,\n      );\n    });\n    return (\n      <Spin spinning={loading} delay={300}>\n        <Tabs className={styles.tabs} onChange={onTabChange}>\n          {panes}\n        </Tabs>\n      </Spin>\n    );\n  };\n\n  const { className, count, bell } = props;\n  const [visible, setVisible] = useMergedState(false, {\n    value: props.popupVisible,\n    onChange: props.onPopupVisibleChange,\n  });\n  const noticeButtonClass = classNames(className, styles.noticeButton);\n  const notificationBox = getNotificationBox();\n  const NoticeBellIcon = bell || <BellOutlined className={styles.icon} />;\n  const trigger = (\n    <span\n      className={classNames(noticeButtonClass, {\n        opened: visible,\n      })}\n    >\n      <Badge\n        count={count}\n        style={{\n          boxShadow: 'none',\n        }}\n        className={styles.badge}\n      >\n        {NoticeBellIcon}\n      </Badge>\n    </span>\n  );\n\n  if (!notificationBox) {\n    return trigger;\n  }\n\n  return (\n    <HeaderDropdown\n      placement=\"bottomRight\"\n      overlay={notificationBox}\n      overlayClassName={styles.popover}\n      trigger={['click']}\n      visible={visible}\n      onVisibleChange={setVisible}\n    >\n      {trigger}\n    </HeaderDropdown>\n  );\n};\n\nNoticeIcon.defaultProps = {\n  emptyImage: 'https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg',\n};\nNoticeIcon.Tab = NoticeList;\nexport default NoticeIcon;\n",
    "import axios from 'axios';\r\nconst trueURl = 'https://intihrms.herokuapp.com/';\r\n\r\nconst API = axios.create({ baseURL: 'https://intihrms.herokuapp.com' });\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem('profile')).token\r\n    }`;\r\n  }\r\n\r\n  return req;\r\n});\r\nconst config = {\r\n  headers: {\r\n    'content-type': 'multipart/form-data',\r\n  },\r\n};\r\nexport const fetchAllLeaves = () => API.get('/leaves');\r\nexport const fetchLeaveById = (id) => API.get(`/leaves/${id}`);\r\nexport const fetchLeaveByDateRange = (dateRange) =>\r\n  API.post(`/leaves/range`, dateRange);\r\nexport const createLeave = (newLeave) => API.post('/leaves', newLeave);\r\nexport const updateLeave = (id, updatedLeave) =>\r\n  API.patch(`/leaves/${id}`, updatedLeave);\r\nexport const fetchLeaveRequests = (role, user, department) =>\r\n  API.get(`/leaves/${role}/${user}/${department}`);\r\nexport const fetchUpcomingLeaves = (id) => API.get(`/leaves/upcoming/${id}`);\r\nexport const fetchLeaveHistory = (id) => API.get(`/leaves/history/${id}`);\r\nexport const fetchTodayLeaves = () => API.get('/leaves/date/today');\r\nexport const fetchLeaveCount = () => API.get('/leaves/count/dept');\r\n\r\nexport const signIn = (formData) => API.post('/users/signIn', formData);\r\nexport const signUp = (formData) => API.post('/users/signUp', formData);\r\nexport const resetPassword = (email) => API.post('/users/resetPassword', email);\r\n\r\nexport const getDepts = () => API.get('/depts');\r\nexport const getDept = (id) => API.get(`depts/${id}`);\r\nexport const createDept = (newDept) => API.post('/depts', newDept);\r\nexport const deleteDept = (id) => API.delete(`/depts/${id}`);\r\n\r\nexport const createUser = (formData) => API.post('/users', formData);\r\nexport const getUsers = () => API.get('/users');\r\nexport const getUser = (id) => API.get(`users/${id}`);\r\nexport const updateUser = (id, updatedUser) =>\r\n  API.patch(`/users/${id}`, updatedUser);\r\nexport const fetchDeptUsers = (department) =>\r\n  API.get(`users/dept/${department}`);\r\n\r\nexport const createLeaveType = (formData) => API.post('/leaveTypes', formData);\r\nexport const getLeaveTypes = () => API.get('/leaveTypes');\r\nexport const getLeaveType = (id) => API.get(`/leaveTypes/${id}`);\r\nexport const updateLeaveType = (id, updatedLeaveType) =>\r\n  API.patch(`/leaveTypes/${id}`, updatedLeaveType);\r\n\r\nexport const createRole = (formData) => API.post('/roles', formData);\r\nexport const getRoles = () => API.get('/roles');\r\nexport const getRole = (id) => API.get(`/roles/${id}`);\r\nexport const updateRole = (id, updatedRole) =>\r\n  API.patch(`/roles/${id}`, updatedRole);\r\n\r\nexport const fetchAllHolidays = () => API.get('/holidays');\r\nexport const fetchHolidaysByYear = (year) => API.get(`/holidays/${year}`);\r\nexport const createHoliday = (formData) => API.post('/holidays', formData);\r\nexport const updateHoliday = (id, formData) =>\r\n  API.patch(`/holidays/${id}`, formData);\r\n\r\nexport const createTraining = (newTraining) =>\r\n  API.post('/training', newTraining);\r\nexport const fetchAllTrainings = () => API.get('/training');\r\nexport const fetchTrainingById = (id) => API.get(`/training/${id}`);\r\nexport const updateTraining = (id, updatedTraining) =>\r\n  API.post(`/training/${id}`, updatedTraining);\r\nexport const leaveTraining = (id, updatedTraining) =>\r\n  API.patch(`/training/${id}`, updatedTraining);\r\nexport const fetchExtTraining = (role, user, department) =>\r\n  API.get(`/training/ext/${role}/${user}/${department}`);\r\nexport const updateTrainingStatus = (id, updatedTraining) =>\r\n  API.post(`/training/ext/${id}`, updatedTraining);\r\nexport const fetchExtTrainingHistory = (id) =>\r\n  API.get(`/training/history/ext/${id}`);\r\nexport const fetchTrainingHistory = (id) => API.get(`/training/history/${id}`);\r\nexport const fetchUpcomingTraining = (id) =>\r\n  API.get(`/training/upcoming/${id}`);\r\nexport const fetchTodayTrainings = () => API.get('/training/date/today');\r\nexport const fetchTrainingCount = () => API.get('/training/count/dept');\r\n\r\nexport const createPolicy = (formData) => API.post('/policy', formData);\r\nexport const getPolicies = () => API.get('/policy');\r\nexport const getPolicy = (id) => API.get(`/policy/${id}`);\r\nexport const updatePolicy = (id, updatedPolicy) =>\r\n  API.patch(`/policy/${id}`, updatedPolicy);\r\n",
    "import { message } from 'antd';\r\n\r\nexport const handleError = (error, payloadtype) => async (dispatch) => {\r\n  if (error.response) {\r\n    // Request made and server responded\r\n    dispatch({\r\n      type: payloadtype,\r\n      error: error.response.data.message,\r\n    });\r\n    message.error(error.response.data.message.toString());\r\n  } else if (error.request) {\r\n    // The request was made but no response was received\r\n    dispatch({\r\n      type: payloadtype,\r\n      error: error.request,\r\n    });\r\n    message.error(error.request.toString());\r\n  } else {\r\n    // Something happened in setting up the request that triggered an Error\r\n    dispatch({\r\n      type: payloadtype,\r\n      error: error.message,\r\n    });\r\n    message.error(error.message.toString());\r\n  }\r\n};\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_LEAVE,\r\n  FETCH_ALL_LEAVE,\r\n  FETCH_LEAVE_BY_DATERANGE,\r\n  FETCH_ONE_LEAVE,\r\n  LEAVE_END_LOADING,\r\n  LEAVE_ERROR,\r\n  LEAVE_START_LOADING,\r\n  UPDATE_LEAVE,\r\n  FETCH_LEAVE_REQUESTS,\r\n  FETCH_UPCOMING_LEAVE,\r\n  FETCH_LEAVE_HISTORY,\r\n  FETCH_TODAY_LEAVE,\r\n  FETCH_LEAVE_COUNT,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const fetchAllLeaves = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchAllLeaves();\r\n    dispatch({ type: FETCH_ALL_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchLeaveById = (id) => async (dispatch) => {\r\n  try {\r\n    console.log('test');\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveById(id);\r\n    dispatch({ type: FETCH_ONE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\n\r\nexport const createLeave = (leave) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.createLeave(leave);\r\n    dispatch({ type: CREATE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const updateLeave = (id, leave) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.updateLeave(id, leave);\r\n    dispatch({ type: UPDATE_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchLeaveByDateRange = (dateRange) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const data = await api.fetchLeaveByDateRange(dateRange);\r\n    console.log(data);\r\n    dispatch({ type: FETCH_LEAVE_BY_DATERANGE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchLeaveRequests =\r\n  (role, user, department) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: LEAVE_START_LOADING });\r\n      const { data } = await api.fetchLeaveRequests(role, user, department);\r\n      dispatch({ type: FETCH_LEAVE_REQUESTS, payload: data });\r\n      dispatch({ type: LEAVE_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: LEAVE_ERROR, error });   \r\n    }\r\n  };\r\nexport const fetchUpcomingLeaves = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchUpcomingLeaves(id);\r\n    dispatch({ type: FETCH_UPCOMING_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchLeaveHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveHistory(id);\r\n    dispatch({ type: FETCH_LEAVE_HISTORY, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchTodayLeaves = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchTodayLeaves();\r\n    dispatch({ type: FETCH_TODAY_LEAVE, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchLeaveCount = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVE_START_LOADING });\r\n    const { data } = await api.fetchLeaveCount();\r\n    dispatch({ type: FETCH_LEAVE_COUNT, payload: data });\r\n    dispatch({ type: LEAVE_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: LEAVE_ERROR, error });   \r\n  }\r\n};\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_TRAINING,\r\n  FETCH_ALL_TRAINING,\r\n  FETCH_ONE_TRAINING,\r\n  TRAINING_START_LOADING,\r\n  TRAINING_END_LOADING,\r\n  TRAINING_ERROR,\r\n  UPDATE_TRAINING,\r\n  LEAVE_TRAINING,\r\n  FETCH_EXT_TRAINING,\r\n  UPDATE_TRAINING_STATUS,\r\n  FETCH_EXT_TRAINING_HISTORY,\r\n  FETCH_TRAINING_HISTORY,\r\n  FETCH_UPCOMING_TRAINING,\r\n  FETCH_TODAY_TRAINING,\r\n  FETCH_TRAINING_COUNT,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const fetchAllTrainings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchAllTrainings();\r\n    dispatch({ type: FETCH_ALL_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.response.data.message,\r\n      });\r\n      message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.request,\r\n      });\r\n      message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.message,\r\n      });\r\n      message.error(error.message.toString());\r\n    }\r\n  }\r\n};\r\nexport const fetchTrainingById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingById(id);\r\n    dispatch({ type: FETCH_ONE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.response.data.message,\r\n      });\r\n      message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.request,\r\n      });\r\n      message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.message,\r\n      });\r\n      message.error(error.message.toString());\r\n    }\r\n  }\r\n};\r\nexport const createTraining = (training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.createTraining(training);\r\n    dispatch({ type: CREATE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.response.data.message,\r\n      });\r\n      console.log(error.response.data.message);\r\n      console.log(error);\r\n      message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.request,\r\n      });\r\n      message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.message,\r\n      });\r\n      message.error(error.message.toString());\r\n    }\r\n  }\r\n};\r\nexport const updateTraining = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.updateTraining(id, training);\r\n    dispatch({ type: UPDATE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.response.data.message,\r\n      });\r\n      console.log(error.response.data.message);\r\n      console.log(error);\r\n      // message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.request,\r\n      });\r\n      message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      dispatch({\r\n        type: TRAINING_ERROR,\r\n        error: error.message,\r\n      });\r\n      message.error(error.message.toString());\r\n    }\r\n  }\r\n};\r\nexport const leaveTraining = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.leaveTraining(id, training);\r\n    dispatch({ type: LEAVE_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchExtTraining =\r\n  (role, user, department) => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: TRAINING_START_LOADING });\r\n      const { data } = await api.fetchExtTraining(role, user, department);\r\n      dispatch({ type: FETCH_EXT_TRAINING, payload: data });\r\n      dispatch({ type: TRAINING_END_LOADING });\r\n    } catch (error) {\r\n      dispatch({ type: TRAINING_ERROR, error });   \r\n    }\r\n  };\r\nexport const updateTrainingStatus = (id, training) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.updateTrainingStatus(id, training);\r\n    dispatch({ type: UPDATE_TRAINING_STATUS, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchExtTrainingHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchExtTrainingHistory(id);\r\n    dispatch({ type: FETCH_EXT_TRAINING_HISTORY, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchTrainingHistory = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingHistory(id);\r\n    dispatch({ type: FETCH_TRAINING_HISTORY, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchUpcomingTraining = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchUpcomingTraining(id);\r\n    dispatch({ type: FETCH_UPCOMING_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchTodayTrainings = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTodayTrainings();\r\n    dispatch({ type: FETCH_TODAY_TRAINING, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\nexport const fetchTrainingCount = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: TRAINING_START_LOADING });\r\n    const { data } = await api.fetchTrainingCount();\r\n    dispatch({ type: FETCH_TRAINING_COUNT, payload: data });\r\n    dispatch({ type: TRAINING_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: TRAINING_ERROR, error });   \r\n  }\r\n};\r\n",
    "import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst PageLoading = ({ props }) => {\r\n  return (\r\n    <div\r\n      style={{ paddingTop: 100, paddingBottom: 100, textAlign: 'center' }}\r\n      className='antdp-page-loading'\r\n    >\r\n      <Spin size='large' tip='Loading...' {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageLoading;\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n} from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchTodayLeaves } from '../../actions/leaves';\r\nimport { fetchTodayTrainings } from '../../actions/training';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport './Home.less';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\n\r\nconst Home = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { leaves, isLoading, todayLeaves } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { trainings } = useSelector((state) => state.trainings);\r\n  const dispatch = useDispatch();\r\n  var pass2MonthC = 0,\r\n    pass2MonthM = 0,\r\n    pass1MonthC = 0,\r\n    pass1MonthM = 0,\r\n    currentMonthC = 0,\r\n    currentMonthM = 0,\r\n    next1MonthC = 0,\r\n    next1MonthM = 0,\r\n    next2MonthC = 0,\r\n    next2MonthM = 0,\r\n    next3MonthC = 0,\r\n    next3MonthM = 0,\r\n    max = 0;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTodayLeaves());\r\n    dispatch(fetchTodayTrainings());\r\n  }, [dispatch]);\r\n\r\n  console.log(trainings);\r\n\r\n  const leaveData = [\r\n    { name: 'Casual', value: user.leaveCount.casual },\r\n    { name: 'Medical', value: user.leaveCount.medical },\r\n  ];\r\n\r\n  //temp training data\r\n  var totalTraining = 20,\r\n    completedTraining = 15;\r\n  var trainingNeeded = totalTraining - completedTraining;\r\n  var completionPercentage = completedTraining / totalTraining;\r\n  trainingNeeded = trainingNeeded < 0 ? 0 : trainingNeeded;\r\n\r\n  const trainingData = [\r\n    //test example data\r\n    { name: 'Hours Completed', value: completedTraining },\r\n    { name: 'Hours Required', value: trainingNeeded },\r\n  ];\r\n\r\n  leaves.map((element) => {\r\n    var d = new Date(element.fromDate);\r\n    if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().subtract(2, 'months').month()\r\n    )\r\n      max = Math.max(++pass2MonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().subtract(2, 'months').month()\r\n    )\r\n      max = Math.max(++pass2MonthM, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().subtract(1, 'months').month()\r\n    )\r\n      max = Math.max(++pass1MonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().subtract(1, 'months').month()\r\n    )\r\n      max = Math.max(++pass1MonthM, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().month()\r\n    )\r\n      max = Math.max(++currentMonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().month()\r\n    )\r\n      max = Math.max(++currentMonthM, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().add(1, 'months').month()\r\n    )\r\n      max = Math.max(++next1MonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().add(1, 'months').month()\r\n    )\r\n      max = Math.max(++next1MonthM, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().add(2, 'months').month()\r\n    )\r\n      max = Math.max(++next2MonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().add(2, 'months').month()\r\n    )\r\n      max = Math.max(++next2MonthM, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'casual' &&\r\n      d.getMonth() == moment().add(3, 'months').month()\r\n    )\r\n      max = Math.max(++next3MonthC, max);\r\n    else if (\r\n      element.status == 'approve' &&\r\n      element.leaveType == 'medical' &&\r\n      d.getMonth() == moment().add(3, 'months').month()\r\n    )\r\n      max = Math.max(++next3MonthM, max);\r\n  });\r\n\r\n  const empLeaveData = [\r\n    {\r\n      name: moment().subtract(2, 'months').format('MMMM'),\r\n      Casual: pass2MonthC,\r\n      Medical: pass2MonthM,\r\n    },\r\n    {\r\n      name: moment().subtract(1, 'months').format('MMMM'),\r\n      Casual: pass1MonthC,\r\n      Medical: pass1MonthM,\r\n    },\r\n    {\r\n      name: moment().format('MMMM'),\r\n      Casual: currentMonthC,\r\n      Medical: currentMonthM,\r\n    },\r\n    {\r\n      name: moment().add(1, 'months').format('MMMM'),\r\n      Casual: next1MonthC,\r\n      Medical: next1MonthM,\r\n    },\r\n    {\r\n      name: moment().add(2, 'months').format('MMMM'),\r\n      Casual: next2MonthC,\r\n      Medical: next2MonthM,\r\n    },\r\n    {\r\n      name: moment().add(3, 'months').format('MMMM'),\r\n      Casual: next3MonthC,\r\n      Medical: next3MonthM,\r\n    },\r\n  ];\r\n\r\n  const COLORS1 = ['#0088FE', '#2ce654'];\r\n  const COLORS2 = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (isLoading || !leaves || !todayLeaves || !trainings)\r\n    return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Personal Dashboard</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              column={{ sm: 2, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={3}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Casual Leaves' span={1}>\r\n                {user.leaveCount.casual}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Total Training Hours Required' span={1}>\r\n                {totalTraining}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Medical Leaves' span={1}>\r\n                {user.leaveCount.medical}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Training Hours Completed' span={1}>\r\n                {completedTraining}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            <br />\r\n            {completionPercentage <= 0.25 ? (\r\n              <Alert\r\n                message='Low Training Hours Completed'\r\n                description='Please participate in more trainings in order to reach your quota!'\r\n                type='error'\r\n              />\r\n            ) : completionPercentage < 0.75 ? (\r\n              <Alert\r\n                message='Moderate Training Hours Completed'\r\n                description='Keep up the good work! Participate in more trainings to reach your quota.'\r\n                type='warning'\r\n              />\r\n            ) : completionPercentage < 1 ? (\r\n              <Alert\r\n                message='Great Training Hours Completed'\r\n                description='Almost there! Keep participating in trainings to reach your quota!'\r\n                type='success'\r\n              />\r\n            ) : (\r\n              <Alert\r\n                message='Training Quota Reached'\r\n                description='Congratulations! You have reached your training quota!'\r\n                type='success'\r\n              />\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12} lg={8}>\r\n          <Card bordered>\r\n            <h4>Your Leaves Remaining</h4>\r\n            <ResponsiveContainer minHeight={180}>\r\n              <BarChart\r\n                data={leaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <Bar fill='#0088FE' dataKey='value'>\r\n                  {leaveData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS1[index % COLORS1.length]}\r\n                    />\r\n                  ))}\r\n                </Bar>\r\n                <YAxis />\r\n                <XAxis dataKey='name' />\r\n                <Tooltip />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n            <h4>Your Training Hours</h4>\r\n            <ResponsiveContainer minWidth={200} minHeight={210}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={trainingData}\r\n                  innerRadius={40}\r\n                  outerRadius={60}\r\n                  fill='#8884d8'\r\n                  paddingAngle={3}\r\n                  startAngle={-270}\r\n                  dataKey='value'\r\n                  isAnimationActive={false}\r\n                  label={renderCustomizedLabel}\r\n                  labelLine={false}\r\n                >\r\n                  {trainingData.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS2[index % COLORS2.length]}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Today's Information</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Currently on Leave:</b>\r\n            {todayLeaves &&\r\n              (!todayLeaves.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={todayLeaves} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.user.first_name} ${record.user.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => <Tag color='red'>{text}</Tag>}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`leaves/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n            <Button type='danger'>\r\n              <Link to='/leaves'>Leaves Dashboard</Link>\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Internal Trainings Today:</b>\r\n            {trainings &&\r\n              (!trainings.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={trainings} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Organizer'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.user.first_name} ${record.user.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Tite'\r\n                      dataIndex='title'\r\n                      key='title'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`training/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n            <Button type='danger'>\r\n              <Link to='/training'>Training Dashboard</Link>\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n/**<h4>Leaves Taken by Month for All Employees</h4>\r\n            <ResponsiveContainer minHeight={425}>\r\n              <LineChart\r\n                width={500}\r\n                height={300}\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                <Line\r\n                  type='monotone'\r\n                  dataKey='Casual'\r\n                  stroke='#8884d8'\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Line type='monotone' dataKey='Medical' stroke='#82ca9d' />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <Button type='primary'>\r\n              <Link to='/calendar'>View on Calendar</Link>\r\n            </Button> */\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveRequests, fetchUpcomingLeaves } from '../../actions/leaves';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Descriptions,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport './LeaveHome.css';\r\nimport { set } from 'lodash';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst { Text } = Typography;\r\n\r\nconst LeaveHome = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const { leaves, upcomingLeave, isLoading } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  var count = 0;\r\n\r\n  const data = [\r\n    { name: 'Casual', value: user.leaveCount.casual },\r\n    { name: 'Medical', value: user.leaveCount.medical },\r\n  ];\r\n  const COLORS = ['#0088FE', '#2ce654'];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUpcomingLeaves(user._id));\r\n    if (user.roles.name != 'staff')\r\n      dispatch(\r\n        fetchLeaveRequests(user.roles.name, user._id, user.department.name)\r\n      );\r\n\r\n    console.log(user);\r\n  }, [dispatch]);\r\n\r\n  for (var element of leaves) {\r\n    if (element.status == 'pending') count++;\r\n  }\r\n\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Current Leave Status</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} md={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              column={{ sm: 2, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={2}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Casual Leaves' span={1}>\r\n                {user.leaveCount.casual}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Medical Leaves' span={1}>\r\n                {user.leaveCount.medical}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} md={12} lg={8}>\r\n          <Card bordered>\r\n            <ResponsiveContainer minHeight={215}>\r\n              <BarChart\r\n                data={data}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <Bar fill='#0088FE' dataKey='value'>\r\n                  {data.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                </Bar>\r\n                <YAxis />\r\n                <XAxis dataKey='name' />\r\n                <Tooltip />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Quick Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Upcoming Leaves:</b>\r\n            {upcomingLeave &&\r\n              (!upcomingLeave.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={upcomingLeave} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => (\r\n                        <Tag color={text.color}>{text.name}</Tag>\r\n                      )}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Reason'\r\n                      dataIndex='reason'\r\n                      key='reason'\r\n                      render={(text, record) => <Text ellipsis>{text}</Text>}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Date'\r\n                      dataIndex='date'\r\n                      key='date'\r\n                      render={(text, record) =>\r\n                        moment(text).format('YYYY-MM-DD')\r\n                      }\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n            <br />\r\n            <Space>\r\n              <Button type='danger'>\r\n                <Link to='/leaves/create'>Apply Leave</Link>\r\n              </Button>\r\n              <Button type='danger'>\r\n                <Link to='/leaves/history'>Leave History</Link>\r\n              </Button>\r\n            </Space>\r\n          </Card>\r\n        </Col>\r\n        {user.roles.name != 'staff' && (\r\n          <Col className='gutter-row' xs={24} sm={12}>\r\n            <Card bordered>\r\n              Pending Leave Requests:{` ${count}`}\r\n              <Button className='right-button' type='danger'>\r\n                <Link to='/leaves/list'>To Requests</Link>\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveHome;\r\n",
    "import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n} from '@ant-design/icons';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        name: 'Personal Dashboard',\r\n        icon: <UserOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: './',\r\n            name: 'Training Home',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Workshop List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: '/training/submitExt',\r\n            name: 'Apply External',\r\n            icon: <FormOutlined />,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n",
    "import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n  BarChartOutlined,\r\n  ApartmentOutlined,\r\n  CalendarOutlined,\r\n  ExclamationCircleOutlined,\r\n} from '@ant-design/icons';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        name: 'Dashboard',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/',\r\n            name: 'Personal',\r\n            icon: <UserOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/supervisor',\r\n            name: 'Department',\r\n            icon: <ApartmentOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/calendar',\r\n        name: 'Calendar',\r\n        icon: <CalendarOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: './',\r\n            name: 'Training Home',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Workshop List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'submitExt',\r\n            name: 'Apply External',\r\n            icon: <FormOutlined />,\r\n          },\r\n          {\r\n            path: 'extList',\r\n            name: 'External Requests',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '',\r\n        name: 'Employee',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/leaves/list',\r\n            name: 'Leave Request',\r\n            icon: <ExclamationCircleOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n",
    "import React from 'react';\r\nimport {\r\n  SmileOutlined,\r\n  CrownOutlined,\r\n  TabletOutlined,\r\n  AntDesignOutlined,\r\n  UserOutlined,\r\n  ScheduleOutlined,\r\n  SolutionOutlined,\r\n  HomeOutlined,\r\n  UsergroupAddOutlined,\r\n  UnorderedListOutlined,\r\n  HistoryOutlined,\r\n  FormOutlined,\r\n  BarChartOutlined,\r\n  ApartmentOutlined,\r\n  CalendarOutlined,\r\n  ExclamationCircleOutlined,\r\n  LaptopOutlined,\r\n} from '@ant-design/icons';\r\nimport Home from './components/Home/Home';\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\n\r\nexport default {\r\n  route: {\r\n    path: '/',\r\n    routes: [\r\n      {\r\n        path: '/',\r\n        name: 'Dashboard',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/',\r\n            name: 'Personal',\r\n            icon: <UserOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/supervisor',\r\n            name: 'Department',\r\n            icon: <ApartmentOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: '/admin',\r\n            name: 'Admin',\r\n            icon: <LaptopOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: '/calendar',\r\n        name: 'Calendar',\r\n        icon: <CalendarOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/leaves',\r\n        name: 'Leaves',\r\n        icon: <ScheduleOutlined />,\r\n        exact: true,\r\n      },\r\n      {\r\n        path: '/training',\r\n        name: 'Training',\r\n        icon: <SolutionOutlined />,\r\n        routes: [\r\n          {\r\n            path: './',\r\n            name: 'Training Home',\r\n            icon: <HomeOutlined />,\r\n            exact: true,\r\n          },\r\n          {\r\n            path: 'create',\r\n            name: 'Create Internal Training',\r\n            icon: <UsergroupAddOutlined />,\r\n          },\r\n          {\r\n            path: 'list',\r\n            name: 'Internal Training List',\r\n            icon: <UnorderedListOutlined />,\r\n          },\r\n          {\r\n            path: 'history',\r\n            name: 'Training History',\r\n            icon: <HistoryOutlined />,\r\n          },\r\n          {\r\n            path: 'submitExt',\r\n            name: 'External Training Request',\r\n            icon: <FormOutlined />,\r\n          },\r\n          {\r\n            path: 'extList',\r\n            name: 'Pending External Requests',\r\n            icon: <ExclamationCircleOutlined />,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        path: './',\r\n        name: 'Employee',\r\n        icon: <BarChartOutlined />,\r\n        routes: [\r\n          {\r\n            path: '/leaves/list',\r\n            name: 'Leave Request',\r\n            icon: <ExclamationCircleOutlined />,\r\n            exact: true,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  location: {\r\n    pathname: '/',\r\n  },\r\n};\r\n",
    "import { Avatar, List } from 'antd';\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport './NoticeList.less';\r\n\r\nconst NoticeList = ({\r\n  list = [],\r\n  onClick,\r\n  onClear,\r\n  title,\r\n  onViewMore,\r\n  emptyText,\r\n  showClear = true,\r\n  clearText,\r\n  viewMoreText,\r\n  showViewMore = false,\r\n}) => {\r\n  if (!list || list.length === 0) {\r\n    return (\r\n      <div className={`notFound`}>\r\n        <img\r\n          src='https://gw.alipayobjects.com/zos/rmsportal/sAuJeJzSKbUmHfBQRzmZ.svg'\r\n          alt='not found'\r\n        />\r\n        <div>{emptyText}</div>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <List\r\n        className={`list`}\r\n        dataSource={list}\r\n        renderItem={(item, i) => {\r\n          const itemCls = classNames(`item`, {\r\n            [`read`]: item.read,\r\n          });\r\n          // eslint-disable-next-line no-nested-ternary\r\n          const leftIcon = item.avatar ? (\r\n            typeof item.avatar === 'string' ? (\r\n              <Avatar className={`avatar`} src={item.avatar} />\r\n            ) : (\r\n              <span className={`iconElement`}>{item.avatar}</span>\r\n            )\r\n          ) : null;\r\n\r\n          return (\r\n            <List.Item\r\n              className={itemCls}\r\n              key={item.key || i}\r\n              onClick={() => {\r\n                onClick?.(item);\r\n              }}\r\n            >\r\n              <List.Item.Meta\r\n                className={`meta`}\r\n                avatar={leftIcon}\r\n                title={\r\n                  <div className={`title`}>\r\n                    {item.title}\r\n                    <div className={`extra`}>{item.extra}</div>\r\n                  </div>\r\n                }\r\n                description={\r\n                  <div>\r\n                    <div className={`description`}>{item.description}</div>\r\n                    <div className={`datetime`}>{item.datetime}</div>\r\n                  </div>\r\n                }\r\n              />\r\n            </List.Item>\r\n          );\r\n        }}\r\n      />\r\n      <div className={`bottomBar`}>\r\n        {showClear ? (\r\n          <div onClick={onClear}>\r\n            {clearText} {title}\r\n          </div>\r\n        ) : null}\r\n        {showViewMore ? (\r\n          <div\r\n            onClick={(e) => {\r\n              if (onViewMore) {\r\n                onViewMore(e);\r\n              }\r\n            }}\r\n          >\r\n            {viewMoreText}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoticeList;\r\n",
    "import { Dropdown } from 'antd';\r\nimport React from 'react';\r\nimport './HeaderDropdown.less';\r\n\r\nconst HeaderDropdown = ({ overlayClassName: cls, ...restProps }) => (\r\n  <Dropdown overlayClassName={`container ${cls}`} {...restProps} />\r\n);\r\n\r\nexport default HeaderDropdown;\r\n",
    "import { BellOutlined } from '@ant-design/icons';\r\nimport { Badge, Spin, Tabs } from 'antd';\r\nimport useMergedState from 'rc-util/es/hooks/useMergedState';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport NoticeList from './NoticeList';\r\nimport HeaderDropdown from '../HeaderDropdown/HeaderDropdown';\r\nimport './index.less';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst NoticeIcon = (props) => {\r\n  const getNotificationBox = () => {\r\n    const {\r\n      children,\r\n      loading,\r\n      onClear,\r\n      onTabChange,\r\n      onItemClick,\r\n      onViewMore,\r\n      clearText,\r\n      viewMoreText,\r\n    } = props;\r\n    if (!children) {\r\n      return null;\r\n    }\r\n    const panes = [];\r\n    React.Children.forEach(children, (child) => {\r\n      if (!child) {\r\n        return;\r\n      }\r\n      const { list, title, count, tabKey, showClear, showViewMore } =\r\n        child.props;\r\n      const len = list && list.length ? list.length : 0;\r\n      const msgCount = count || count === 0 ? count : len;\r\n      const tabTitle = msgCount > 0 ? `${title} (${msgCount})` : title;\r\n      panes.push(\r\n        <TabPane tab={tabTitle} key={tabKey}>\r\n          <NoticeList\r\n            clearText={clearText}\r\n            viewMoreText={viewMoreText}\r\n            list={list}\r\n            tabKey={tabKey}\r\n            onClear={() => onClear && onClear(title, tabKey)}\r\n            onClick={(item) => onItemClick && onItemClick(item, child.props)}\r\n            onViewMore={(event) => onViewMore && onViewMore(child.props, event)}\r\n            showClear={showClear}\r\n            showViewMore={showViewMore}\r\n            title={title}\r\n          />\r\n        </TabPane>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <Spin spinning={loading} delay={300}>\r\n          <Tabs className={`tabs`} onChange={onTabChange} centered>\r\n            {panes}\r\n          </Tabs>\r\n        </Spin>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const { className, count, bell } = props;\r\n\r\n  const [visible, setVisible] = useMergedState(false, {\r\n    value: props.popupVisible,\r\n    onChange: props.onPopupVisibleChange,\r\n  });\r\n  const noticeButtonClass = classNames(className, `noticeButton`);\r\n  const notificationBox = getNotificationBox();\r\n  const NoticeBellIcon = bell || <BellOutlined className={`icon`} />;\r\n  const trigger = (\r\n    <span className={classNames(noticeButtonClass, { opened: visible })}>\r\n      <Badge count={count} style={{ boxShadow: 'none' }} className={`badge`}>\r\n        {NoticeBellIcon}\r\n      </Badge>\r\n    </span>\r\n  );\r\n  if (!notificationBox) {\r\n    return trigger;\r\n  }\r\n\r\n  return (\r\n    <HeaderDropdown\r\n      placement='bottomRight'\r\n      overlay={notificationBox}\r\n      overlayClassName={`popover`}\r\n      trigger={['click']}\r\n      visible={visible}\r\n      onVisibleChange={setVisible}\r\n    >\r\n      {trigger}\r\n    </HeaderDropdown>\r\n  );\r\n};\r\n\r\nNoticeIcon.defaultProps = {\r\n  emptyImage:\r\n    'https://gw.alipayobjects.com/zos/rmsportal/wAhyIChODzsoKIOBHcBk.svg',\r\n};\r\n\r\nNoticeIcon.Tab = NoticeList;\r\n\r\nexport default NoticeIcon;\r\n",
    "import { useEffect, useState } from 'react';\r\nimport { Tag, message } from 'antd';\r\nimport { groupBy } from 'lodash';\r\nimport moment from 'moment';\r\n\r\nimport NoticeIcon from './NoticeIcon';\r\nimport './index.less';\r\nconst getNotices = () => {\r\n  return {\r\n    data: [\r\n      {\r\n        id: '000000001',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png',\r\n        title: '你收到了 14 份新周报',\r\n        datetime: '2017-08-09',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000002',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/OKJXDXrmkNshAMvwtvhu.png',\r\n        title: '你推荐的 曲妮妮 已通过第三轮面试',\r\n        datetime: '2017-08-08',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000003',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/kISTdvpyTAhtGxpovNWd.png',\r\n        title: '这种模板可以区分多种通知类型',\r\n        datetime: '2017-08-07',\r\n        read: true,\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000004',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/GvqBnKhFgObvnSGkDsje.png',\r\n        title: '左侧图标用于区分不同的类型',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000005',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png',\r\n        title: '内容不要超过两行字，超出时自动截断',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000006',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '曲丽丽 评论了你',\r\n        description: '描述信息描述信息描述信息',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000007',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '朱偏右 回复了你',\r\n        description: '这种模板用于提醒谁与你发生了互动，左侧放『谁』的头像',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000008',\r\n        avatar:\r\n          'https://gw.alipayobjects.com/zos/rmsportal/fcHMVNCjPOsbUGdEduuv.jpeg',\r\n        title: '标题',\r\n        description: '这种模板用于提醒谁与你发生了互动，左侧放『谁』的头像',\r\n        datetime: '2017-08-07',\r\n        type: 'notification',\r\n        clickClose: true,\r\n      },\r\n      {\r\n        id: '000000009',\r\n        title: '任务名称',\r\n        description: '任务需要在 2017-01-12 20:00 前启动',\r\n        extra: '未开始',\r\n        status: 'todo',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000010',\r\n        title: '第三方紧急代码变更',\r\n        description:\r\n          '冠霖提交于 2017-01-06，需在 2017-01-07 前完成代码变更任务',\r\n        extra: '马上到期',\r\n        status: 'urgent',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000011',\r\n        title: '信息安全考试',\r\n        description: '指派竹尔于 2017-01-09 前完成更新并发布',\r\n        extra: '已耗时 8 天',\r\n        status: 'doing',\r\n        type: 'notification',\r\n      },\r\n      {\r\n        id: '000000012',\r\n        title: 'ABCD 版本发布',\r\n        description:\r\n          '冠霖提交于 2017-01-06，需在 2017-01-07 前完成代码变更任务',\r\n        extra: '进行中',\r\n        status: 'processing',\r\n        type: 'notification',\r\n      },\r\n    ],\r\n  };\r\n};\r\nconst getNoticeData = (notices) => {\r\n  if (!notices || notices.length === 0 || !Array.isArray(notices)) {\r\n    return {};\r\n  }\r\n\r\n  const newNotices = notices.map((notice) => {\r\n    const newNotice = { ...notice };\r\n\r\n    if (newNotice.datetime) {\r\n      newNotice.datetime = moment(notice.datetime).fromNow();\r\n    }\r\n\r\n    if (newNotice.id) {\r\n      newNotice.key = newNotice.id;\r\n    }\r\n\r\n    if (newNotice.extra && newNotice.status) {\r\n      const color = {\r\n        todo: '',\r\n        processing: 'blue',\r\n        urgent: 'red',\r\n        doing: 'gold',\r\n      }[newNotice.status];\r\n      newNotice.extra = (\r\n        <Tag\r\n          color={color}\r\n          style={{\r\n            marginRight: 0,\r\n          }}\r\n        >\r\n          {newNotice.extra}\r\n        </Tag>\r\n      );\r\n    }\r\n\r\n    return newNotice;\r\n  });\r\n  return groupBy(newNotices, 'type');\r\n};\r\n\r\nconst getUnreadData = (noticeData) => {\r\n  const unreadMsg = {};\r\n  Object.keys(noticeData).forEach((key) => {\r\n    const value = noticeData[key];\r\n\r\n    if (!unreadMsg[key]) {\r\n      unreadMsg[key] = 0;\r\n    }\r\n\r\n    if (Array.isArray(value)) {\r\n      unreadMsg[key] = value.filter((item) => !item.read).length;\r\n    }\r\n  });\r\n  return unreadMsg;\r\n};\r\n\r\nconst NoticeIconView = () => {\r\n  // const { initialState } = useModel('@@initialState');\r\n  // const { currentUser } = initialState || {};\r\n  const [notices, setNotices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // getNotices().then(({ data }) => setNotices(data || []));\r\n    setNotices(getNotices().data || []);\r\n  }, []);\r\n\r\n  const noticeData = getNoticeData(notices);\r\n  const unreadMsg = getUnreadData(noticeData || {});\r\n\r\n  const changeReadState = (id) => {\r\n    setNotices(\r\n      notices.map((item) => {\r\n        const notice = { ...item };\r\n        if (notice.id === id) {\r\n          notice.read = true;\r\n        }\r\n        return notice;\r\n      })\r\n    );\r\n  };\r\n\r\n  const clearReadState = (title, key) => {\r\n    setNotices(\r\n      notices.map((item) => {\r\n        const notice = { ...item };\r\n        if (notice.type === key) {\r\n          notice.read = true;\r\n        }\r\n        return notice;\r\n      })\r\n    );\r\n    message.success(`${'Clear'} ${title}`);\r\n  };\r\n\r\n  return (\r\n    <NoticeIcon\r\n      className={`action`}\r\n      //count={currentUser&&currentUser.unreadCount}\r\n      count={10}\r\n      onItemClick={(item) => {\r\n        changeReadState(item.id);\r\n      }}\r\n      onClear={(title, key) => clearReadState(title, key)}\r\n      loading={false}\r\n      clearText='Clear'\r\n      viewMoreText='View More'\r\n      onViewMore={() => message.info('Click on view more')}\r\n      clearClose\r\n    >\r\n      <NoticeIcon.Tab\r\n        tabKey='notification'\r\n        count={unreadMsg.notification}\r\n        list={noticeData.notification}\r\n        title='Notification'\r\n        emptyText='You have no new notifiications'\r\n      />\r\n      {/**\r\n      <NoticeIcon.Tab\r\n        tabKey='message'\r\n        count={unreadMsg.message}\r\n        list={noticeData.message}\r\n        title='消息'\r\n        emptyText='您已读完所有消息'\r\n        showViewMore\r\n      />\r\n      <NoticeIcon.Tab\r\n        tabKey='event'\r\n        title='待办'\r\n        emptyText='你已完成所有待办'\r\n        count={unreadMsg.event}\r\n        list={noticeData.event}\r\n        showViewMore\r\n      /> */}\r\n    </NoticeIcon>\r\n  );\r\n};\r\n\r\nexport default NoticeIconView;\r\n",
    "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  message,\r\n  Avatar,\r\n  Button,\r\n  Menu,\r\n  Space,\r\n  Typography,\r\n  Dropdown,\r\n  Badge,\r\n  Tabs,\r\n  List,\r\n  Row,\r\n  Col,\r\n  Image,\r\n} from 'antd';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { BellOutlined, UserOutlined } from '@ant-design/icons';\r\nimport jwtDecode from 'jwt-decode';\r\nimport 'antd/dist/antd.css';\r\nimport './Navbar.less';\r\nimport { useDispatch } from 'react-redux';\r\nimport { LOGOUT } from '../../constants/actionTypes';\r\nconst { TabPane } = Tabs;\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n\r\n    navigate('/auth');\r\n    setUser(null);\r\n  };\r\n  const login = () => {\r\n    navigate('/auth');\r\n  };\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key='profile'>\r\n        <Link to='/profile'>Profile</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key='logout' onClick={logout}>\r\n        Logout\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n        message.error('Session expired. Please login again');\r\n        logout();\r\n      }\r\n    }\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n  //https://stackoverflow.com/questions/50882990/how-to-right-align-menu-items-in-ant-design\r\n  return (\r\n    <>\r\n      <Menu\r\n        theme='light'\r\n        mode='horizontal'\r\n        forceSubMenuRender={true}\r\n        style={{ background: 'red' }}\r\n        className='right'\r\n      >\r\n        {/**<NoticeIcon />*/}\r\n        {user ? (\r\n          <>\r\n            <Menu.SubMenu\r\n              key='SubMenu'\r\n              icon={<UserOutlined />}\r\n              title={`${user.result.first_name} ${user.result.last_name}`}\r\n            >\r\n              <Menu.Item key='profile'>\r\n                <Link to='/profile'>Profile</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key='logout' onClick={logout}>\r\n                Logout\r\n              </Menu.Item>\r\n            </Menu.SubMenu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Item key='login' onClick={login}>\r\n              SignIn\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n/**\r\n *   <Row justify='space-between'>\r\n        <Col>\r\n          <Menu theme='light' mode='horizontal'>\r\n            <Menu.Item key='Home'>\r\n              <Link to='/'>Home</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Col>\r\n        <Col>\r\n          <Menu theme='light' mode='horizontal'>\r\n            {user ? (\r\n              <>\r\n                <Menu.Item key='notification'>\r\n                  <BellOutlined />\r\n                </Menu.Item>\r\n                <NoticeIcon />\r\n                <Menu.SubMenu\r\n                  key='SubMenu'\r\n                  icon={<UserOutlined />}\r\n                  title={`${user.result.first_name} ${user.result.last_name}`}\r\n                >\r\n                  <Menu.Item key='profile'>\r\n                    <Link to='/profile'>Profile</Link>\r\n                  </Menu.Item>\r\n                  <Menu.Item key='logout' onClick={logout}>\r\n                    Logout\r\n                  </Menu.Item>\r\n                </Menu.SubMenu>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Menu.Item\r\n                  key='login'\r\n                  onClick={login}\r\n                  style={{ marginLeft: 'auto' }}\r\n                >\r\n                  SignIn\r\n                </Menu.Item>\r\n              </>\r\n            )}\r\n          </Menu>\r\n        </Col>\r\n      </Row>\r\n */\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  AUTH,\r\n  AUTH_END_LOADING,\r\n  AUTH_START_LOADING,\r\n  AUTH_ERROR,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const signIn = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.signIn(formData);\r\n    dispatch({ type: AUTH, data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n\r\n    navigate('/');\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });   \r\n  }\r\n};\r\n\r\nexport const signUp = (formData, navigate) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.signUp(formData);\r\n    dispatch({ type: AUTH, data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n\r\n    navigate('/');\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });   \r\n  }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: AUTH_START_LOADING });\r\n\r\n    const { data } = await api.resetPassword(email);\r\n    dispatch({ type: AUTH, data });\r\n    dispatch({ type: AUTH_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: AUTH_ERROR, error });   \r\n  }\r\n};\r\n",
    "import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button, Select, Typography } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './Auth.css';\r\nimport { signIn } from '../../actions/auth';\r\nconst { Title } = Typography;\r\nconst Auth = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const onFinish = (values) => {\r\n    dispatch(signIn(values, navigate));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title\r\n        level={2}\r\n        style={{ margin: '0 auto', textAlign: 'center', padding: '20px' }}\r\n      >\r\n        Sign In\r\n      </Title>\r\n\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 8 }}\r\n        name='basic'\r\n        initialValues={{\r\n          email: 'LarLex579@gmail.com',\r\n          password: 'test',\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Email'\r\n          name='email'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert your email',\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoFocus />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Password'\r\n          name='password'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your password!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 10,\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Sign In\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Link to='/resetPassword'>Forgot Password</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_LEAVETYPE,\r\n  FETCH_ALL_LEAVETYPE,\r\n  FETCH_ONE_LEAVETYPE,\r\n  UPDATE_LEAVETYPE,\r\n  LEAVETYPE_END_LOADING,\r\n  LEAVETYPE_ERROR,\r\n  LEAVETYPE_START_LOADING,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const getLeaveTypes = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.getLeaveTypes();\r\n    dispatch({ type: FETCH_ALL_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, LEAVETYPE_ERROR);\r\n  }\r\n};\r\nexport const getLeaveType = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.getLeaveType(id);\r\n    dispatch({ type: FETCH_ONE_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    handleError(error, LEAVETYPE_ERROR);\r\n  }\r\n};\r\nexport const createLeaveType = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.createLeaveType(formData);\r\n    dispatch({ type: CREATE_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, LEAVETYPE_ERROR);\r\n  }\r\n};\r\n\r\nexport const updateLeaveType = (id, leaveType) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: LEAVETYPE_START_LOADING });\r\n    const { data } = await api.updateLeaveType(id, leaveType);\r\n    dispatch({ type: UPDATE_LEAVETYPE, payload: data });\r\n    dispatch({ type: LEAVETYPE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, LEAVETYPE_ERROR);\r\n  }\r\n};\r\n",
    "import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './LeaveForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createLeave, fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst LeaveForm = () => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { leave } = useSelector((state) => state.leaves);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const calcWorkingDays = (startDate, endDate) => {\r\n    let day = moment(startDate);\r\n    let workingDays = 0;\r\n    ///https://stackoverflow.com/a/45483646\r\n    while (day.isSameOrBefore(endDate, 'day')) {\r\n      if (![0, 6].includes(day.day())) workingDays++;\r\n      day.add(1, 'd');\r\n    }\r\n    return workingDays;\r\n  };\r\n  const onFinish = (values) => {\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        }\r\n      }\r\n    }\r\n\r\n    const rangeValue = values['range-picker'];\r\n    const startDate = rangeValue[0];\r\n    const endDate = rangeValue[1];\r\n    let remainLeave = user.leaveCount[values.leaveType];\r\n    const dateDiff = calcWorkingDays(startDate, endDate);\r\n    const leaveData = {\r\n      reason: values.reason,\r\n      leaveType: values.leaveType,\r\n      user: user._id,\r\n      department: user.department._id,\r\n      fromDate: startDate.format('YYYY-MM-DD HH:mm'),\r\n      toDate: endDate.format('YYYY-MM-DD HH:mm'),\r\n    };\r\n    Object.entries(leaveData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    //  console.log(...formData);\r\n\r\n    if (remainLeave >= dateDiff) {\r\n      if (id) {\r\n        dispatch(updateLeave(id, formData));\r\n      } else {\r\n        dispatch(createLeave(formData));\r\n      }\r\n    } else {\r\n      setError('Insufficient leave balance');\r\n    }\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      leave?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: `http://localhost:5000/${file.filePath}`,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getLeaveTypes());\r\n    console.log(leaveTypes);\r\n    if (id) {\r\n      dispatch(fetchLeaveById(id)).then((leave) => {\r\n        form.setFieldsValue({\r\n          ...leave,\r\n          'range-picker': [moment(leave.fromDate), moment(leave.toDate)],\r\n        });\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    console.log('?????false', file);\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  return (\r\n    <>\r\n      <h2 className='form-header'>Apply for Leave</h2>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Leave Type'\r\n          name='leaveType'\r\n          rules={[\r\n            {\r\n              required: false,\r\n              message: 'Please input your leaveType!',\r\n            },\r\n          ]}\r\n        >\r\n          <Select>\r\n            {leaveTypes.map((leaveType) => (\r\n              <Option key={leaveType._id} value={leaveType.code}>\r\n                {leaveType.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Reason'\r\n          name='reason'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your reason!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='range-picker'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your date!',\r\n            },\r\n          ]}\r\n        >\r\n          <RangePicker />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='upload'\r\n          label='Upload'\r\n          valuePropName='fileList'\r\n          getValueFromEvent={normFile}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          {error && <Text type='danger'>{error}</Text>}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type='secondary'\r\n            htmlType='button'\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            Back\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default LeaveForm;\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_USER,\r\n  FETCH_ALL_USER,\r\n  FETCH_ONE_USER,\r\n  UPDATE_USER,\r\n  USER_END_LOADING,\r\n  USER_ERROR,\r\n  USER_START_LOADING,\r\n  FETCH_DEPT_USER,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const getUsers = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.getUsers();\r\n    dispatch({ type: FETCH_ALL_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, USER_ERROR);\r\n  }\r\n};\r\nexport const getUser = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.getUser(id);\r\n    dispatch({ type: FETCH_ONE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n\r\n    return data;\r\n  } catch (error) {\r\n    handleError(error, USER_ERROR);\r\n  }\r\n};\r\nexport const createUser = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.createUser(formData);\r\n    dispatch({ type: CREATE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // Request made and server responded\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        error: error.response.data.message,\r\n      });\r\n      message.error(error.response.data.message.toString());\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        error: error.request,\r\n      });\r\n      message.error(error.request.toString());\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      dispatch({\r\n        type: USER_ERROR,\r\n        error: error.message,\r\n      });\r\n      message.error(error.message.toString());\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateUser = (id, user) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.updateUser(id, user);\r\n    dispatch({ type: UPDATE_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, USER_ERROR);\r\n  }\r\n};\r\n\r\nexport const fetchDeptUsers = (department) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_START_LOADING });\r\n    const { data } = await api.fetchDeptUsers(department);\r\n    dispatch({ type: FETCH_DEPT_USER, payload: data });\r\n    dispatch({ type: USER_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, USER_ERROR);\r\n  }\r\n};\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './LeaveDetail.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveById, updateLeave } from '../../actions/leaves';\r\nimport { Descriptions, Badge, Button, Space, Spin } from 'antd';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { updateUser, getUser } from '../../actions/users';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport _ from 'lodash';\r\nconst LeaveDetail = () => {\r\n  const { leave, isLoading: leaveIsloading } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const dispatch = useDispatch();\r\n  const [loading, setIsloading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(fetchLeaveById(id)).then(() => setIsloading(false));\r\n  }, [dispatch, id]);\r\n  const setStatus = (status) => {\r\n    dispatch(updateLeave(id, { ...leave, status }));\r\n    if (status == 'approve') {\r\n      dispatch(getUser(leave.user._id)).then((user) => {\r\n        console.log(user);\r\n        const remainLeave = user.leaveCount[leave.leaveType];\r\n        const dateDiff =\r\n          moment\r\n            .duration(moment(leave.toDate).diff(moment(leave.fromDate)))\r\n            .asDays() + 1;\r\n        const minDate = remainLeave - dateDiff;\r\n        dispatch(\r\n          updateUser(user._id, {\r\n            ...user,\r\n            leaveCount: {\r\n              ...user.leaveCount,\r\n              [leave.leaveType]: minDate,\r\n            },\r\n          })\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  if (loading || leaveIsloading) return <PageLoading />;\r\n  //if (leaveIsloading || userIsloading) return null;\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='Leave Info'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Requester' span={3}>\r\n          {`${leave.user.first_name} ${leave.user.last_name}`}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Department' span={3}>\r\n          {leave.department.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Title' span={3}>\r\n          {leave.title}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Reason' span={3}>\r\n          {leave.reason}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Date' span={1}>\r\n          {moment(leave.fromDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Date' span={2}>\r\n          {moment(leave.toDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Status' span={3}>\r\n          <Badge\r\n            status={\r\n              leave.status == 'pending'\r\n                ? 'processing'\r\n                : leave.status == 'approve'\r\n                ? 'success'\r\n                : 'error'\r\n            }\r\n            text={leave.status}\r\n          />\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <Space>\r\n        <Button onClick={() => navigate(-1)}>Back</Button>\r\n        {leave.status == 'pending' && (\r\n          <>\r\n            <Button\r\n              className='btn-success'\r\n              onClick={() => setStatus('approve')}\r\n            >\r\n              Approve\r\n            </Button>\r\n            <Button danger onClick={() => setStatus('reject')}>\r\n              Reject\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveDetail;\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_DEPT,\r\n  DELETE_DEPT,\r\n  FETCH_ALL_DEPT,\r\n  FETCH_ONE_DEPT,\r\n  DEPT_END_LOADING,\r\n  DEPT_ERROR,\r\n  DEPT_START_LOADING,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const getDepts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.getDepts();\r\n    dispatch({ type: FETCH_ALL_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });   \r\n  }\r\n};\r\nexport const getDept = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.getDept(id);\r\n    dispatch({ type: FETCH_ONE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });   \r\n  }\r\n};\r\nexport const createDept = (dept) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.createDept(dept);\r\n    dispatch({ type: CREATE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });   \r\n  }\r\n};\r\nexport const deleteDept = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: DEPT_START_LOADING });\r\n    const { data } = await api.deleteDept(id);\r\n    dispatch({ type: DELETE_DEPT, payload: data });\r\n    dispatch({ type: DEPT_END_LOADING });\r\n  } catch (error) {\r\n    dispatch({ type: DEPT_ERROR, error });   \r\n  }\r\n};\r\n",
    "import React, { useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveRequests } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n  Typography,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport _ from 'lodash';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport { ProFormDateRangePicker } from '@ant-design/pro-form';\r\nconst { Text } = Typography;\r\n\r\nconst LeaveList = () => {\r\n  const { leaves, isLoading } = useSelector((state) => state.leaves);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'pending' },\r\n    { text: 'Approved', value: 'approve' },\r\n    { text: 'Rejected', value: 'reject' },\r\n  ];\r\n  var typeFilter = [];\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(\r\n      fetchLeaveRequests(user.roles.name, user._id, user.department.name)\r\n    );\r\n    dispatch(getDepts());\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n  if (user.roles.name == 'admin')\r\n    depts.map((element) => {\r\n      deptFilters.push({ text: element.name, value: element.name });\r\n    });\r\n  leaveTypes.map((element) => {\r\n    typeFilter.push({ text: element.name, value: element.code });\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Employee Name',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Department',\r\n      dataIndex: ['department', 'name'],\r\n      key: 'department',\r\n\r\n      filters: deptFilters,\r\n      onFilter: (value, record) => record.department.name.indexOf(value) === 0,\r\n      //  render: (text, record) => `${record.department.name}`,\r\n    },\r\n    {\r\n      title: 'Reason',\r\n      dataIndex: 'reason',\r\n      key: 'reason',\r\n      hideInSearch: true,\r\n      render: (text, record) => <Text ellipsis>{text}</Text>,\r\n    },\r\n    {\r\n      title: 'Leave Type',\r\n      dataIndex: 'leaveType',\r\n      key: 'leaveType',\r\n      filters: typeFilter,\r\n      onFilter: (value, record) => record.leaveType.code.indexOf(value) === 0,\r\n      render: (text, record) => <Tag color={text.color}>{text.code}</Tag>,\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Start Date to End Date',\r\n      dataIndex: 'fromDate',\r\n      valueType: 'dateRange',\r\n      key: 'somehtin',\r\n      hideInTable: true,\r\n      search: {\r\n        transform: (value) => {\r\n          return {\r\n            startTime: value[0],\r\n            endTime: value[1],\r\n          };\r\n        },\r\n      },\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'pending'\r\n              ? 'processing'\r\n              : record.status == 'approve'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <h2>Leave Requests</h2>\r\n      {!leaves.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = leaves.reverse();\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        console.log(Object.keys(params));\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        } else if (key == 'startTime') {\r\n                          console.log(\r\n                            item['fromDate'],\r\n                            params[key],\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            )\r\n                          );\r\n                          return (\r\n                            moment(item['fromDate']).diff(\r\n                              moment(params[key])\r\n                            ) >= 0\r\n                          );\r\n                        } else if (key == 'endTime') {\r\n                          return (\r\n                            moment(item['toDate']).diff(\r\n                              moment(params[key]),\r\n                              'days'\r\n                            ) <= 0\r\n                          );\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                layout: 'vertical',\r\n                defaultCollapsed: true,\r\n                span: 6,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n              toolBarRender={() => [\r\n                <Space>\r\n                  <Button type='primary'>\r\n                    <Link to='/leaves/create'>Apply Leave</Link>\r\n                  </Button>\r\n                </Space>,\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveList;\r\n/**<Table\r\n            dataSource={leaves}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Employee Name'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            {user.roles.name === 'admin' && (\r\n              <Table.Column\r\n                title='Department ID'\r\n                dataIndex='department'\r\n                key='department._id'\r\n                filters={deptFilters}\r\n                onFilter={(value, record) =>\r\n                  record.department.name.indexOf(value) === 0\r\n                }\r\n                render={(text, record) => `${text.name}`}\r\n              ></Table.Column>\r\n            )}\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Leave Type'\r\n              dataIndex='leaveType'\r\n              key='leaveType'\r\n              filters={typeFilter}\r\n              onFilter={(value, record) =>\r\n                record.leaveType.indexOf(value) === 0\r\n              }\r\n              render={(text, record) => <Tag color='red'>{text}</Tag>}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Start Date'\r\n              dataIndex='fromDate'\r\n              key='fromDate'\r\n              defaultSortOrder='descend'\r\n              sorter={(a, b) => moment(a.fromDate) - moment(b.fromDate)}\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='End Date'\r\n              dataIndex='toDate'\r\n              key='toDate'\r\n              sorter={(a, b) => moment(a.toDate) - moment(b.toDate)}\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Status'\r\n              dataIndex='status'\r\n              key='status'\r\n              filters={statusFilter}\r\n              onFilter={(value, record) => record.status.indexOf(value) === 0}\r\n              render={(text, record) => (\r\n                <Badge\r\n                  status={\r\n                    record.status == 'pending'\r\n                      ? 'processing'\r\n                      : record.status == 'approve'\r\n                      ? 'success'\r\n                      : 'error'\r\n                  }\r\n                  text={record.status}\r\n                />\r\n              )}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> \r\n          */\r\n",
    "import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchLeaveHistory } from '../../actions/leaves';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst LeaveHistory = () => {\r\n  const { leaves, isLoading } = useSelector((state) => state.leaves);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'pending' },\r\n    { text: 'Approved', value: 'approve' },\r\n    { text: 'Rejected', value: 'reject' },\r\n  ];\r\n  var typeFilter = [];\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchLeaveHistory(user._id));\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n\r\n  leaveTypes.map((element) => {\r\n    typeFilter.push({ text: element.name, value: element.code });\r\n  });\r\n\r\n  const applyLeave = () => {\r\n    navigate('/leaves/create');\r\n  };\r\n\r\n  const actionRef = useRef();\r\n\r\n  const columns = [\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Leave Type',\r\n      dataIndex: 'leaveType',\r\n      key: 'leaveType',\r\n      filters: typeFilter,\r\n      onFilter: (value, record) => record.leaveType.indexOf(value) === 0,\r\n      render: (text, record) => <Tag color='red'>{text}</Tag>,\r\n    },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'pending'\r\n              ? 'processing'\r\n              : record.status == 'approve'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`view/${record._id}`}>View</Link>\r\n          {record.status == 'pending' && (\r\n            <Link to={`/leaves/edit/${record._id}`}>Edit</Link>\r\n          )}\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2>My Leave Applications</h2>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={applyLeave}>Apply Leave</Button>\r\n      </Space>\r\n      {!leaves.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              rowKey='id'\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = leaves.reverse();\r\n\r\n                if (filter) {\r\n                  if (Object.keys(filter).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(filter).some((key) => {\r\n                        if (!filter[key]) {\r\n                          return true;\r\n                        }\r\n                        if (filter[key].includes(`${item[key]}`)) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                layout: 'vertical',\r\n                defaultCollapsed: true,\r\n                span: 6,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n              toolBarRender={() => [\r\n                <Button type='primary' key='primary'>\r\n                  <Link to='/leaves/create'>Apply Leave</Link>\r\n                </Button>,\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n      <Button>\r\n        <Link to='/leaves/'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveHistory;\r\n\r\n/**<Table\r\n            dataSource={leaves}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Employee Name'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) =>\r\n                `${text?.first_name} ${text?.last_name}`\r\n              }\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Department ID'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text?.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Leave Type'\r\n              dataIndex='leaveType'\r\n              key='leaveType'\r\n              render={(text, record) => <Tag color='red'>{text}</Tag>}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Start Date'\r\n              dataIndex='fromDate'\r\n              key='fromDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='End Date'\r\n              dataIndex='toDate'\r\n              key='toDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Status'\r\n              dataIndex='status'\r\n              key='status'\r\n              render={(text, record) => (\r\n                <Badge\r\n                  status={\r\n                    record.status == 'pending'\r\n                      ? 'processing'\r\n                      : record.status == 'approve'\r\n                      ? 'success'\r\n                      : 'error'\r\n                  }\r\n                  text={record.status}\r\n                />\r\n              )}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                  {record.status == 'pending' && (\r\n                    <Link to={`/leaves/edit/${record._id}`}>Edit</Link>\r\n                  )}\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> */\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_ROLE,\r\n  FETCH_ALL_ROLE,\r\n  FETCH_ONE_ROLE,\r\n  UPDATE_ROLE,\r\n  ROLE_END_LOADING,\r\n  ROLE_ERROR,\r\n  ROLE_START_LOADING,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const getRoles = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.getRoles();\r\n    dispatch({ type: FETCH_ALL_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, ROLE_ERROR);\r\n  }\r\n};\r\nexport const getRole = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.getRole(id);\r\n    dispatch({ type: FETCH_ONE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, ROLE_ERROR);\r\n  }\r\n};\r\nexport const createRole = (role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.createRole(role);\r\n    dispatch({ type: CREATE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, ROLE_ERROR);\r\n  }\r\n};\r\nexport const updateRole = (id, role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: ROLE_START_LOADING });\r\n    const { data } = await api.updateRole(id, role);\r\n    dispatch({ type: UPDATE_ROLE, payload: data });\r\n    dispatch({ type: ROLE_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, ROLE_ERROR);\r\n  }\r\n};\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_POLICY,\r\n  FETCH_ALL_POLICY,\r\n  FETCH_ONE_POLICY,\r\n  UPDATE_POLICY,\r\n  POLICY_END_LOADING,\r\n  POLICY_ERROR,\r\n  POLICY_START_LOADING,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const getPolicies = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.getPolicies();\r\n    dispatch({ type: FETCH_ALL_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, POLICY_ERROR);\r\n  }\r\n};\r\nexport const getPolicy = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.getPolicy(id);\r\n    dispatch({ type: FETCH_ONE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, POLICY_ERROR);\r\n  }\r\n};\r\nexport const createPolicy = (role) => async (dispatch) => {\r\n  try {\r\n    console.log(role);\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.createPolicy(role);\r\n    dispatch({ type: CREATE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, POLICY_ERROR);\r\n  }\r\n};\r\nexport const updatePolicy = (id, role) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: POLICY_START_LOADING });\r\n    const { data } = await api.updatePolicy(id, role);\r\n    dispatch({ type: UPDATE_POLICY, payload: data });\r\n    dispatch({ type: POLICY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, POLICY_ERROR);\r\n  }\r\n};\r\n",
    "import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './StaffForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createUser } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport { getRoles } from '../../actions/roles';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPolicy } from '../../actions/policy';\r\n\r\nimport moment from 'moment';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst StaffForm = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [staff, setStaff] = useState({\r\n    emp_id: '',\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    employment_date: '',\r\n    password: 'test',\r\n    department: '',\r\n    roles: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRoles());\r\n    dispatch(getDepts());\r\n    dispatch(getLeaveTypes());\r\n    dispatch(getPolicy({ name: 'defaultPolicy' }));\r\n  }, [dispatch]);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { roles } = useSelector((state) => state.roles);\r\n  const { policy } = useSelector((state) => state.policy);\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const onFinish = (values) => {\r\n    dispatch(\r\n      createUser({\r\n        emp_id: values.emp_id,\r\n        first_name: values.first_name,\r\n        last_name: values.last_name,\r\n        email: values.email,\r\n        employment_date: values['employment_date'].format('YYYY-MM-DD'),\r\n        password: 'test',\r\n        department: values.department,\r\n        roles: values.roles,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const onDateChange = (val) => {\r\n    const stacked = policy.stacked;\r\n    const policy = policy.list;\r\n    if (policy) {\r\n      const today = moment('2025-01-01');\r\n      const employmentDate = moment(val);\r\n      const totalYears = today.diff(employmentDate, 'years');\r\n      console.log(totalYears);\r\n      let totalIncrease = 0;\r\n      const policyAfter = policy.filter((p) => p.condition1 == 'after');\r\n      const policyEvery = policy.filter((p) => p.condition1 == 'every');\r\n      let highestAfter = 0;\r\n      policyAfter.forEach((p) => {\r\n        if (totalYears >= p.year) {\r\n          if (stacked) {\r\n            totalIncrease += p.increase;\r\n          } else {\r\n            if (p.year > highestAfter) {\r\n              totalIncrease = p.increase;\r\n              highestAfter = p.year;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      policyEvery.forEach((p) => {\r\n        const count = totalYears / p.year;\r\n        totalIncrease += count * p.increase;\r\n      });\r\n\r\n      console.log(totalIncrease);\r\n    }\r\n  };\r\n  return (\r\n    <Form\r\n      name='basic'\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete='off'\r\n    >\r\n      <Form.Item\r\n        label='Employee ID'\r\n        name='emp_id'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a title!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='First Name'\r\n        name='first_name'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a title!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='Last Name'\r\n        name='last_name'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your reason!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      {leaveTypes.map((leaveType) => (\r\n        <Form.Item\r\n          key={leaveType._id}\r\n          label={leaveType.name}\r\n          name={leaveType.name}\r\n          initialValue={leaveType.count}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your reason!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n      ))}\r\n      <Form.Item\r\n        label='Email'\r\n        name='email'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your leaveType!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input type='email' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='Employment Date'\r\n        name='employment_date'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a title!',\r\n          },\r\n        ]}\r\n      >\r\n        <DatePicker placeholder='hi' onChange={onDateChange} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='Department'\r\n        name='department'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a title!',\r\n          },\r\n        ]}\r\n      >\r\n        <Select>\r\n          {depts.map((dept) => (\r\n            <Option key={dept._id} value={dept._id}>\r\n              {dept.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='Roles'\r\n        name='roles'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a title!',\r\n          },\r\n        ]}\r\n      >\r\n        <Select>\r\n          {roles.map((role) => (\r\n            <Option key={role._id} value={role._id}>\r\n              {role.name}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type='primary' htmlType='submit'>\r\n          Submit\r\n        </Button>\r\n        <Button>\r\n          <Link to='/users'>Back</Link>\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default StaffForm;\r\n",
    "import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './DeptHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { deleteDept, getDepts } from '../../actions/depts';\r\nconst { Column } = Table;\r\nconst DeptHome = () => {\r\n  const deleteD = (rec) => {\r\n    // dispatch(deleteDept(rec._id));\r\n  };\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const dispatch = useDispatch();\r\n  console.log(depts);\r\n  useEffect(() => {\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createDept = () => {\r\n    navigate('/depts/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createDept}>Create New Department</Button>\r\n      </Space>\r\n\r\n      {!depts.length ? (\r\n        <>\r\n          <br />\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={depts} rowKey='_id'>\r\n            <Column title='Code' dataIndex='code' key='code' />\r\n            <Column title='Name' dataIndex='name' key='name' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button danger onClick={() => deleteD(record)}>\r\n                    Delete\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Button>\r\n            <Link to='/'>Back</Link>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptHome;\r\n",
    "import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { Form, Input, Button, Select, Typography } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './DeptForm.css';\r\nimport { createDept } from '../../actions/depts';\r\nconst { Title } = Typography;\r\nconst DeptForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n\r\n    dispatch(createDept(values));\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}> Create Department</Title>\r\n      <Form\r\n        name='basic'\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Code'\r\n          name='code'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert your code',\r\n            },\r\n          ]}\r\n        >\r\n          <Input autoFocus />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Name'\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your name!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button>\r\n            <Link to='/depts'>Back</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptForm;\r\n",
    "import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button, List, Grid } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './StaffHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { getUsers } from '../../actions/users';\r\nconst { Column } = Table;\r\nconst { useBreakpoint } = Grid;\r\nconst StaffHome = () => {\r\n  const { users, isLoading, error } = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createUser = () => {\r\n    navigate('/users/create');\r\n  };\r\n  const screens = useBreakpoint();\r\n  if (isLoading) return <Spin size='large' />;\r\n  console.log(users);\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createUser}>Add User</Button>\r\n      </Space>\r\n      <br />\r\n      {isLoading ? (\r\n        <>\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        [\r\n          screens.xs ? (\r\n            <List\r\n              itemLayout='vertical'\r\n              size='large'\r\n              dataSource={users}\r\n              renderItem={(item) => (\r\n                <List.Item\r\n                  key={item._id}\r\n                  actions={[\r\n                    <Button>\r\n                      <Link to={`users/view/${item._id}`}>View</Link>\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta title={item.emp_id} />\r\n                  {item.first_name} {item.last_name}\r\n                </List.Item>\r\n              )}\r\n            />\r\n          ) : (\r\n            <>\r\n              <Table dataSource={users} rowKey='_id'>\r\n                <Column title='Employee ID' dataIndex='emp_id' key='emp_id' />\r\n                <Column\r\n                  title='Name'\r\n                  key='name'\r\n                  render={(text, record) => (\r\n                    <div>\r\n                      {record.first_name} {record.last_name}\r\n                    </div>\r\n                  )}\r\n                />\r\n                <Column\r\n                  title='Department'\r\n                  dataIndex={['department', 'name']}\r\n                  key='department.name'\r\n                />\r\n                <Column\r\n                  title='Roles'\r\n                  dataIndex={['roles', 'name']}\r\n                  key='roles.name'\r\n                />\r\n                <Column\r\n                  title='Action'\r\n                  key='action'\r\n                  render={(text, record) => (\r\n                    <Space size='middle'>\r\n                      <Button>\r\n                        <Link to={`users/view/${record._id}`}>View</Link>\r\n                      </Button>\r\n                    </Space>\r\n                  )}\r\n                />\r\n              </Table>\r\n              <Button>\r\n                <Link to='/'>Back</Link>\r\n              </Button>\r\n            </>\r\n          ),\r\n        ]\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffHome;\r\n",
    "import React, { useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './StaffDetail.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Descriptions, Badge, Button } from 'antd';\r\nimport { getUser } from '../../actions/users';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nconst StaffDetail = () => {\r\n  const { user } = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(getUser(id));\r\n  }, [dispatch, id]);\r\n  if (!user) return null;\r\n  console.log(user);\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        title='User Info'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Employee ID'>{user.emp_id}</Descriptions.Item>\r\n        <Descriptions.Item label='First Name'>\r\n          {user.first_name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Last Name'>\r\n          {user.last_name}\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label='Email'>{user.email}</Descriptions.Item>\r\n        <Descriptions.Item label='Department'>\r\n          {user.department.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Employment Date'>\r\n          {moment(user.employment_date).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n      <Descriptions title='Leave Balance' bordered>\r\n        {Object.entries(user.leaveCount).map(([key, value]) => (\r\n          <Descriptions.Item key={key} label={key}>\r\n            {value}\r\n          </Descriptions.Item>\r\n        ))}\r\n      </Descriptions>\r\n      <Button>\r\n        <Link to='/users'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StaffDetail;\r\n",
    "import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Tag,\r\n  ConfigProvider,\r\n  Space,\r\n  Row,\r\n  Col,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport ProForm, {\r\n  ProFormText,\r\n  ProFormDigit,\r\n  ProFormColorPicker,\r\n} from '@ant-design/pro-form';\r\nimport styles from './LeaveTypeForm.less';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport {\r\n  createLeaveType,\r\n  updateLeaveType,\r\n  getLeaveType,\r\n} from '../../actions/leaveTypes';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nimport { ChromePicker, SketchPicker } from 'react-color';\r\nimport { PageLoading } from '@ant-design/pro-layout';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst LeaveTypeForm = () => {\r\n  const { id } = useParams();\r\n  const [color, setColor] = useState('#39f983');\r\n  const { leaveType, isLoading } = useSelector((state) => state.leaveTypes);\r\n  const [loading, setLoading] = useState(false);\r\n  const [colorState, setColorState] = useState({\r\n    code: 'sample',\r\n    color: 'blue',\r\n  });\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    if (id) {\r\n      dispatch(updateLeaveType(id, values));\r\n    } else {\r\n      dispatch(createLeaveType(values));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      setLoading(true);\r\n\r\n      dispatch(getLeaveType(id)).then((data) => {\r\n        form.setFieldsValue(data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [dispatch, id]);\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const onValuesChange = (changedFields, allFields) => {\r\n    console.log(changedFields, allFields);\r\n    if (allFields.code != '' && allFields.color != '') setColorState(allFields);\r\n  };\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <ConfigProvider locale={enUSIntl}>\r\n        <ProForm\r\n          onValuesChange={onValuesChange}\r\n          form={form}\r\n          name='basic'\r\n          layout='horizontal'\r\n          labelCol={{ span: 8 }}\r\n          // wrapperCol={{ span: 16 }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete='off'\r\n          formKey='base-form-use-demo'\r\n          //https://github.com/ant-design/pro-components/issues/1027\r\n          submitter={{\r\n            resetButtonProps: {\r\n              style: {\r\n                display: 'none',\r\n              },\r\n            },\r\n            render: (props, doms) => {\r\n              return (\r\n                <Form.Item wrapperCol={{ offset: 8 }}>\r\n                  <Space>{doms}</Space>\r\n                </Form.Item>\r\n              );\r\n            },\r\n          }}\r\n        >\r\n          <ProFormText\r\n            name='code'\r\n            label='Code'\r\n            placeholder='Enter code'\r\n            width='md'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your reason!',\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <ProFormText\r\n            name='name'\r\n            label='Name'\r\n            placeholder='Enter Name'\r\n            width='md'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your reason!',\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <ProFormDigit\r\n            name='count'\r\n            label='Count'\r\n            width='md'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your reason!',\r\n              },\r\n            ]}\r\n          />\r\n\r\n          <ProFormColorPicker\r\n            name='color'\r\n            initialValue='blue'\r\n            label='color'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please enter color',\r\n              },\r\n            ]}\r\n          />\r\n        </ProForm>\r\n      </ConfigProvider>\r\n      <Row>\r\n        <Col offset={8}>\r\n          <Space>\r\n            Preview:\r\n            <Tag color={colorState.color}>{colorState.code}</Tag>\r\n          </Space>\r\n        </Col>\r\n      </Row>\r\n      {/* \r\n      <ChromePicker color={color} onChangeComplete={handleChangeComplete} />\r\n      <Tag color={color}>Sample</Tag>\r\n      \r\n      */}\r\n    </>\r\n  );\r\n};\r\nexport default LeaveTypeForm;\r\n/**\r\n *       <Form\r\n        //form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Code'\r\n          name='code'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert a title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Name'\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert a title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Count'\r\n          name='count'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your reason!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n        <ProFormColorPicker\r\n          name='color'\r\n          label='color'\r\n          width='lg'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter color',\r\n            },\r\n          ]}\r\n        />\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button type='secondary' htmlType='button'>\r\n            <Link to='/leaveTypes'>Back</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n */\r\n",
    "import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './LeaveTypeHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { getLeaveTypes } from '../../actions/leaveTypes';\r\nconst { Column } = Table;\r\nconst LeaveTypeHome = () => {\r\n  const { leaveTypes } = useSelector((state) => state.leaveTypes);\r\n  const dispatch = useDispatch();\r\n  console.log(leaveTypes);\r\n  useEffect(() => {\r\n    dispatch(getLeaveTypes());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createLeaveType = () => {\r\n    navigate('/leaveTypes/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createLeaveType}>Create New Leave Type</Button>\r\n      </Space>\r\n\r\n      {!leaveTypes.length ? (\r\n        <>\r\n          <br />\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={leaveTypes} rowKey='_id'>\r\n            <Column title='Code' dataIndex='code' key='code' />\r\n            <Column title='Name' dataIndex='name' key='name' />\r\n            <Column title='Count' dataIndex='count' key='count' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`/leaveTypes/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n          <Button type='secondary' htmlType='button'>\r\n            <Link to='/'>Back</Link>\r\n          </Button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeaveTypeHome;\r\n",
    "import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './RoleHome.css';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { getRoles } from '../../actions/roles';\r\nconst { Column } = Table;\r\nconst RoleHome = () => {\r\n  const { roles } = useSelector((state) => state.roles);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getRoles());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createRole = () => {\r\n    navigate('/roles/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createRole}>Add Roles</Button>\r\n      </Space>\r\n      <br />\r\n      {!roles.length ? (\r\n        <>\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={roles} rowKey='_id'>\r\n            <Column title='Roles' dataIndex='name' key='name' />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`roles/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n      <Button>\r\n        <Link to='/'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleHome;\r\n",
    "export const LEAVE_VIEW_SELF = 'LEAVE_VIEW_SELF';\r\nexport const LEAVE_VIEW_DEPT = 'LEAVE_VIEW_DEPT';\r\nexport const LEAVE_VIEW_ALL = 'LEAVE_VIEW_ALL';\r\nexport const LEAVE_APPROVE = 'LEAVE_APPROVE';\r\n\r\nexport const ROLES_ASSIGN = 'ROLES_ASSIGN';\r\n\r\nexport const PERMISSIONS = [\r\n  {\r\n    modules: 'HISTORY',\r\n    permissions: [\r\n      {\r\n        name: 'View Own Leave',\r\n        code: LEAVE_VIEW_SELF,\r\n      },\r\n      {\r\n        name: 'View Department Leave',\r\n        code: LEAVE_VIEW_DEPT,\r\n      },\r\n      {\r\n        name: 'View All Leave',\r\n        code: LEAVE_VIEW_ALL,\r\n      },\r\n      {\r\n        name: 'Approve Leave',\r\n        code: LEAVE_APPROVE,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    modules: 'Other',\r\n    permissions: [\r\n      {\r\n        name: 'Assign roles',\r\n        code: ROLES_ASSIGN,\r\n      },\r\n    ],\r\n  },\r\n];\r\n",
    "import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Space,\r\n  Checkbox,\r\n  Typography,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './RoleForm.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { createRole, getRole, updateRole } from '../../actions/roles';\r\nimport { PERMISSIONS } from '../../constants/permissions';\r\n\r\nconst RoleForm = () => {\r\n  const modules = PERMISSIONS.map((list) => list.modules);\r\n  const { id } = useParams();\r\n  const { role } = useSelector((state) => state.roles);\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    console.log(values);\r\n    let lists = [];\r\n    for (let i of modules) lists = lists.concat(values[i]);\r\n\r\n    //PERMISSIONS.map((list) => (lists = lists.concat(values[list.modules])));\r\n    //https://stackoverflow.com/a/44971570\r\n    // for (let key in modules) lists = lists.concat(values[key].filter);\r\n    console.log(lists);\r\n\r\n    if (id) {\r\n      dispatch(updateRole(id, { ...values, permissions: lists }));\r\n    } else {\r\n      dispatch(createRole({ ...values, permissions: lists }));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getRole(id));\r\n      const fields = modules.map((module) => {\r\n        return { [module]: role.permissions };\r\n      });\r\n      form.setFieldsValue({ ...role, ...fields });\r\n    }\r\n  }, [dispatch, id]);\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const onChange = () => {};\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      name='basic'\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      autoComplete='off'\r\n    >\r\n      <Form.Item\r\n        label='Name'\r\n        name='name'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a role name!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input onChange={onChange} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label='Code'\r\n        name='code'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please insert a role name!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      {PERMISSIONS.map((list) => {\r\n        const options = list.permissions.map((permission) => {\r\n          return {\r\n            key: permission.code,\r\n            label: permission.name,\r\n            value: permission.code,\r\n          };\r\n        });\r\n        return (\r\n          <>\r\n            <Form.Item\r\n              wrapperCol={{\r\n                offset: 7,\r\n                span: 16,\r\n              }}\r\n              labelCol={{ offset: 7, span: 24 }}\r\n              key={list.modules}\r\n              name={list.modules}\r\n              label={list.modules}\r\n            >\r\n              <Checkbox.Group options={options} defaultValue={[]} />\r\n            </Form.Item>\r\n          </>\r\n        );\r\n      })}\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Space>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button type='secondary' htmlType='button'>\r\n            <Link to='/roles'>Back</Link>\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\nexport default RoleForm;\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './Profile.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Descriptions,\r\n  Badge,\r\n  Button,\r\n  Divider,\r\n  Typography,\r\n  Space,\r\n  Upload,\r\n  Image,\r\n} from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { getUser } from '../../actions/users';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\n//https://github.com/nanxiaobei/antd-img-crop#styles\r\nimport 'antd/es/modal/style';\r\nimport 'antd/es/slider/style';\r\nconst { Text } = Typography;\r\n\r\nconst Profile = ({ user }) => {\r\n  const [imageState, setImageState] = useState({\r\n    imageUrl:\r\n      'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    loading: false,\r\n  });\r\n\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n  const handleChange = (info) => {\r\n    console.log(info, 'here');\r\n    getBase64(info.fileList[0].originFileObj, (imageUrl) =>\r\n      setImageState({\r\n        imageUrl,\r\n        loading: false,\r\n      })\r\n    );\r\n    console.log(imageState);\r\n    return;\r\n    if (info.file.status === 'uploading') {\r\n      setImageState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        setImageState({\r\n          imageUrl,\r\n          loading: false,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const [fileList, setFileList] = useState([\r\n    {\r\n      uid: '-1',\r\n      name: 'image.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    },\r\n  ]);\r\n\r\n  const onChange = async ({ file }) => {\r\n    console.log(file);\r\n    const src = await new Promise((resolve) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file.originFileObj);\r\n      reader.onload = () => resolve(reader.result);\r\n    });\r\n\r\n    setFileList([\r\n      {\r\n        uid: '-1',\r\n        name: file.name,\r\n        status: 'done',\r\n        url: src,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const onPreview = async (file) => {\r\n    let src = file.url;\r\n    if (!src) {\r\n      src = await new Promise((resolve) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file.originFileObj);\r\n        reader.onload = () => resolve(reader.result);\r\n      });\r\n    }\r\n    const image = new Image();\r\n    image.src = src;\r\n    const imgWindow = window.open(src);\r\n    imgWindow.document.write(image.outerHTML);\r\n  };\r\n\r\n  function ZoomIn() {\r\n    return (\r\n      <Image\r\n        width={200}\r\n        src='https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\r\n      />\r\n    );\r\n  }\r\n  const uploadButton = (\r\n    <div>\r\n      {imageState.loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n  const ImageCrop = () => (\r\n    <ImgCrop rotate>\r\n      <Upload\r\n        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n        listType='picture-card'\r\n        fileList={fileList}\r\n        onChange={onChange}\r\n        onPreview={onPreview}\r\n      >\r\n        {fileList.length <= 2 && '+ Upload'}\r\n      </Upload>\r\n    </ImgCrop>\r\n  );\r\n  const UploadProfile = () => (\r\n    <ImgCrop rotate>\r\n      <Upload\r\n        name='avatar'\r\n        listType='picture-card'\r\n        className='avatar-uploader'\r\n        //showUploadList={false}\r\n        action='https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n        //beforeUpload={preventUpload}\r\n        // customRequest={dummyRequest}\r\n        onChange={handleChange}\r\n        accept='image/*'\r\n      >\r\n        {imageState.imageUrl ? (\r\n          <img\r\n            src={imageState.imageUrl}\r\n            alt='avatar'\r\n            style={{ width: '100%' }}\r\n          />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    </ImgCrop>\r\n  );\r\n\r\n  const normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    console.log('?????false', file);\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider>\r\n        <Text style={{ fontSize: 23 }}>Profile Page</Text>\r\n      </Divider>\r\n      <center>\r\n        <div>\r\n          <ImageCrop />\r\n        </div>\r\n      </center>\r\n\r\n      <Descriptions\r\n        title='Profile Details'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        <Descriptions.Item label='Emoployee ID'>\r\n          {user.emp_id}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='First Name'>\r\n          {user.first_name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Last Name'>\r\n          {user.last_name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Department'>\r\n          {user.department.name}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Employment Date'>\r\n          {moment(user.employment_date).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Roles'>{user.roles.name}</Descriptions.Item>\r\n      </Descriptions>\r\n      <Descriptions title='Leave Balance' bordered>\r\n        {Object.entries(user.leaveCount).map(([key, value]) => (\r\n          <Descriptions.Item key={key} label={key}>\r\n            {value}\r\n          </Descriptions.Item>\r\n        ))}\r\n      </Descriptions>\r\n      <Button>\r\n        <Link to='/'>Back to Home</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n//https://flexiple.com/loop-through-object-javascript/\r\n\r\nexport default Profile;\r\n",
    "let eventGuid = 0;\r\nlet todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\r\nlet date1 = new Date('2021-10-03');\r\nlet date2 = new Date('2021-10-08');\r\nexport const INITIAL_EVENTS = [\r\n  {\r\n    id: createEventId(),\r\n    title: 'All-day event',\r\n    start: todayStr,\r\n    display: 'background',\r\n  },\r\n  {\r\n    id: createEventId(),\r\n    title: 'Timed1 event',\r\n    start: todayStr + 'T12:00:00',\r\n  },\r\n  {\r\n    id: createEventId(),\r\n    title: 'Timed event',\r\n    start: date1,\r\n    end: date2,\r\n    display: 'background',\r\n  },\r\n];\r\n\r\nexport function createEventId() {\r\n  return String(eventGuid++);\r\n}\r\n",
    "import React, { useEffect, useState, createRef } from 'react';\r\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport { INITIAL_EVENTS, createEventId } from './events-utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Grid, Spin } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Calendar.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { fetchLeaveByDateRange } from '../../actions/leaves';\r\nimport moment from 'moment';\r\nconst { useBreakpoint } = Grid;\r\n\r\n//https://github.com/scaredofseagles/Producky/blob/master/client/src/views/CalendarMain.js\r\n//https://github.com/fullcalendar/fullcalendar-example-projects/blob/master/react/src/DemoApp.jsx\r\nconst Calendar = () => {\r\n  const dispatch = useDispatch();\r\n  const screens = useBreakpoint();\r\n  const navigate = useNavigate();\r\n  const c = createRef();\r\n  let newLeave;\r\n  const [dateRange, setDateRange] = useState({\r\n    fromDate: moment(),\r\n    toDate: moment(),\r\n  });\r\n  const [cal, setCal] = useState({});\r\n  const { leaves, isLoading, error } = useSelector((state) => state.leaves);\r\n  //https://stackoverflow.com/questions/61528054/react-full-calendar-change-view-api\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      if (screens.xs) {\r\n        c.current.getApi().changeView('listMonth');\r\n      } else {\r\n        c.current.getApi().changeView('dayGridMonth');\r\n      }\r\n    }\r\n  }, [screens]);\r\n\r\n  const handleEventsss = async (info, success, error) => {\r\n    const startDate = moment(info.start);\r\n    const endDate = moment(info.end);\r\n    console.log(\r\n      dateRange.fromDate.diff(startDate) != 0 &&\r\n        dateRange.toDate.diff(endDate) != 0\r\n    );\r\n\r\n    if (\r\n      dateRange.fromDate.diff(startDate) != 0 &&\r\n      dateRange.toDate.diff(endDate) != 0\r\n    ) {\r\n      setDateRange({\r\n        fromDate: startDate,\r\n        toDate: endDate,\r\n      });\r\n      dispatch(\r\n        fetchLeaveByDateRange({\r\n          fromDate: startDate,\r\n          toDate: endDate,\r\n        })\r\n      );\r\n    }\r\n\r\n    success(leaves);\r\n    console.log('here');\r\n  };\r\n\r\n  const handleEventClick = (clickInfo) => {\r\n    if (clickInfo.event.display != 'background') navigate(clickInfo.event.url);\r\n  };\r\n\r\n  const renderEventContent = (eventInfo) => {\r\n    return (\r\n      <>\r\n        <b>{eventInfo.timeText}</b>\r\n        <i>{eventInfo.event.title}</i>\r\n        <i>{eventInfo.event.extendedProps.emp_id}</i>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <div className='demo-app'>\r\n        <div className='demo-app-main'>\r\n          <FullCalendar\r\n            ref={c}\r\n            plugins={[\r\n              dayGridPlugin,\r\n              timeGridPlugin,\r\n              interactionPlugin,\r\n              listPlugin,\r\n            ]}\r\n            headerToolbar={{\r\n              left: 'prevYear,prev,next,nextYear',\r\n              center: 'title',\r\n              right: 'today dayGridMonth,listMonth',\r\n            }}\r\n            initialView='dayGridMonth'\r\n            dayMaxEvents={true}\r\n            weekends\r\n            businessHours={{ daysOfWeek: [1, 2, 3, 4, 5] }}\r\n            events={handleEventsss}\r\n            eventContent={renderEventContent}\r\n            eventClick={handleEventClick}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Calendar;\r\n",
    "import { Route, Navigate } from 'react-router-dom';\r\nimport {\r\n  LEAVE_APPROVE,\r\n  LEAVE_VIEW_ALL,\r\n  ROLES_ASSIGN,\r\n} from './constants/permissions';\r\n\r\n//https://medium.com/@thanhbinh.tran93/private-route-public-route-and-restricted-route-with-react-router-d50b27c15f5e\r\n//https://stackoverflow.com/questions/69864165/error-privateroute-is-not-a-route-component-all-component-children-of-rou\r\nfunction PrivateRoute({\r\n  children,\r\n  requiredPermissions = null,\r\n  matchAllPermissions = false,\r\n}) {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  let hasAccess = true;\r\n  if (requiredPermissions) {\r\n    if (matchAllPermissions) {\r\n      hasAccess = requiredPermissions.every(\r\n        (ai) => [LEAVE_APPROVE, ROLES_ASSIGN, LEAVE_VIEW_ALL].indexOf(ai) !== -1\r\n      );\r\n\r\n      console.log(hasAccess);\r\n    } else {\r\n      hasAccess = [LEAVE_APPROVE, ROLES_ASSIGN, LEAVE_VIEW_ALL].some(\r\n        (ai) => requiredPermissions.indexOf(ai) !== -1\r\n      );\r\n    }\r\n  }\r\n  return user && hasAccess ? children : <Navigate to='/auth' replace />;\r\n}\r\n\r\nexport default PrivateRoute;\r\n",
    "import React, { useRef, useState } from 'react';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  Table,\r\n  Select,\r\n  ConfigProvider,\r\n  Space,\r\n  Tooltip,\r\n  Dropdown,\r\n  Menu,\r\n  Input,\r\n} from 'antd';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport moment from 'moment';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n//https://stackoverflow.com/a/59479818\r\nconst sorterA = (a, b) =>\r\n  isNaN(a) && isNaN(b) ? (a || '').localeCompare(b || '') : a - b;\r\n//https://stackoverflow.com/a/42948173\r\nconst sorterDate = (a, b) => moment(a).diff(moment(b));\r\nconst valueEnum = {\r\n  0: 'close',\r\n  1: 'running',\r\n  2: 'online',\r\n  3: 'error',\r\n};\r\nconst tableListDataSource = [];\r\nconst creators = ['付小小', '曲丽丽', '林东东', '陈帅帅', '兼某某'];\r\nfor (let i = 0; i < 100; i += 1) {\r\n  tableListDataSource.push({\r\n    key: i,\r\n    name: 'AppName',\r\n    containers: Math.floor(Math.random() * 20),\r\n    creator: creators[Math.floor(Math.random() * creators.length)],\r\n    status: valueEnum[Math.floor(Math.random() * 10) % 4],\r\n    createdAt: Date.now() - Math.floor(Math.random() * 2000),\r\n    money: Math.floor(Math.random() * 2000) * i,\r\n    progress: Math.ceil(Math.random() * 100) + 1,\r\n    memo:\r\n      i % 2 === 1\r\n        ? '很长很长很长很长很长很长很长的文字要展示但是要留下尾巴'\r\n        : '简短备注文案',\r\n  });\r\n}\r\nconst columns = [\r\n  {\r\n    title: '排序',\r\n    dataIndex: 'index',\r\n    valueType: 'indexBorder',\r\n    width: 48,\r\n  },\r\n  {\r\n    title: '应用名称',\r\n    dataIndex: 'name',\r\n    render: (_) => <a>{_}</a>,\r\n    // 自定义筛选项功能具体实现请参考 https://ant.design/components/table-cn/#components-table-demo-custom-filter-panel\r\n    filterDropdown: () => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input style={{ width: 188, marginBottom: 8, display: 'block' }} />\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />\r\n    ),\r\n  },\r\n  {\r\n    title: '创建者',\r\n    dataIndex: 'creator',\r\n    valueEnum: {\r\n      all: { text: '全部' },\r\n      付小小: { text: '付小小' },\r\n      曲丽丽: { text: '曲丽丽' },\r\n      林东东: { text: '林东东' },\r\n      陈帅帅: { text: '陈帅帅' },\r\n      兼某某: { text: '兼某某' },\r\n    },\r\n  },\r\n  {\r\n    title: '状态',\r\n    dataIndex: 'status',\r\n    initialValue: 'all',\r\n    filters: true,\r\n    onFilter: true,\r\n    valueEnum: {\r\n      all: { text: '全部', status: 'Default' },\r\n      close: { text: '关闭', status: 'Default' },\r\n      running: { text: '运行中', status: 'Processing' },\r\n      online: { text: '已上线', status: 'Success' },\r\n      error: { text: '异常', status: 'Error' },\r\n    },\r\n  },\r\n  {\r\n    title: (\r\n      <>\r\n        创建时间\r\n        <Tooltip placement='top' title='这是一段描述'>\r\n          <QuestionCircleOutlined style={{ marginLeft: 4 }} />\r\n        </Tooltip>\r\n      </>\r\n    ),\r\n    width: 140,\r\n    key: 'since',\r\n    dataIndex: 'createdAt',\r\n    valueType: 'date',\r\n    sorter: (a, b) => a.createdAt - b.createdAt,\r\n  },\r\n  {\r\n    title: '备注',\r\n    dataIndex: 'memo',\r\n    ellipsis: true,\r\n    copyable: true,\r\n  },\r\n  {\r\n    title: '操作',\r\n    width: 180,\r\n    key: 'option',\r\n    valueType: 'option',\r\n    render: () => [\r\n      <a key='link'>链路</a>,\r\n      <a key='link2'>报警</a>,\r\n      <a key='link3'>监控</a>,\r\n      <TableDropdown\r\n        key='actionGroup'\r\n        menus={[\r\n          { key: 'copy', name: '复制' },\r\n          { key: 'delete', name: '删除' },\r\n        ]}\r\n      />,\r\n    ],\r\n  },\r\n];\r\n\r\nconst columns2 = [\r\n  {\r\n    title: 'Index',\r\n    dataIndex: 'index',\r\n    valueType: 'indexBorder',\r\n    key: 'index',\r\n    width: 48,\r\n  },\r\n  {\r\n    title: 'Title',\r\n    dataIndex: 'title',\r\n    key: 'title',\r\n    render: (text, record) => `${record.title} ${record.leaveType}`,\r\n    sorter: (a, b) => sorterA(a.title, b.title),\r\n  },\r\n  {\r\n    title: 'Start Date',\r\n    dataIndex: 'fromDate',\r\n    key: 'fromDate',\r\n    valueType: 'date',\r\n    render: (text, record) => moment(text).format('y-MM-DD'),\r\n    sorter: (a, b) => sorterA(a.fromDate, b.fromDate),\r\n  },\r\n];\r\nconst menu = (\r\n  <Menu>\r\n    <Menu.Item key='1'>1st item</Menu.Item>\r\n    <Menu.Item key='2'>2nd item</Menu.Item>\r\n    <Menu.Item key='3'>3rd item</Menu.Item>\r\n  </Menu>\r\n);\r\nexport default () => {\r\n  const { leaves } = useSelector((state) => state.leaves);\r\n  const [data, setData] = useState(leaves);\r\n  const actionRef = useRef();\r\n  return (\r\n    <ConfigProvider locale={enUSIntl}>\r\n      <ProTable\r\n        columns={columns2}\r\n        actionRef={actionRef}\r\n        request={(params, sorter, filter) => {\r\n          // 表单搜索项会从 params 传入，传递给后端接口。\r\n          //https://www.codeshelper.com/article/27727.html\r\n          //https://github.com/ant-design/ant-design-pro/blob/master/mock/listTableList.ts\r\n          let dataSource = data;\r\n          //  console.log(dataSource);\r\n          //  console.log(params, sorter, filter);\r\n          /*\r\n          if (sorter) {\r\n            if (Object.keys(sorter).length > 0) {\r\n              dataSource = dataSource.sort((prev, next) => {\r\n                let sortNumber = 0;\r\n          \r\n                Object.keys(sorter).forEach((key) => {\r\n                  if (sorter[key] === 'descend') {\r\n                    if (key == 'frmDate')\r\n                      if (sorterA(prev[key], next[key]) > 0) {\r\n                        sortNumber += -1;\r\n                      } else {\r\n                        sortNumber += 1;\r\n                      }\r\n                    return;\r\n                  }\r\n                  if (sorterA(prev[key], next[key]) > 0) {\r\n                    sortNumber += 1;\r\n                  } else {\r\n                    sortNumber += -1;\r\n                  }\r\n                });\r\n                return sortNumber;\r\n              });\r\n            }\r\n          }\r\n          */\r\n          if (filter) {\r\n            if (Object.keys(filter).length > 0) {\r\n              dataSource = dataSource.filter((item) => {\r\n                return Object.keys(filter).some((key) => {\r\n                  if (!filter[key]) {\r\n                    return true;\r\n                  }\r\n                  if (filter[key].includes(`${item[key]}`)) {\r\n                    return true;\r\n                  }\r\n                  return false;\r\n                });\r\n              });\r\n            }\r\n          }\r\n\r\n          if (params) {\r\n            if (Object.keys(params).length > 0) {\r\n              dataSource = dataSource.filter((item) => {\r\n                return Object.keys(params).every((key) => {\r\n                  if (!params[key]) {\r\n                    return true;\r\n                  }\r\n\r\n                  if (key == 'pageSize' || key == 'current') {\r\n                    return true;\r\n                  }\r\n                  if (params[key] == 'all') {\r\n                    return true;\r\n                  }\r\n                  if (\r\n                    item[key].search(\r\n                      new RegExp('.*' + params[key] + '.*', 'gi')\r\n                    ) != -1\r\n                  ) {\r\n                    return true;\r\n                  }\r\n                  return false;\r\n                });\r\n              });\r\n            }\r\n          }\r\n\r\n          // console.log('nani', dataSource);\r\n\r\n          return Promise.resolve({\r\n            data: dataSource,\r\n            success: true,\r\n          });\r\n        }}\r\n        rowKey='key'\r\n        pagination={{\r\n          pageSize: 10,\r\n          showQuickJumper: true,\r\n        }}\r\n        search={{\r\n          layout: 'vertical',\r\n          defaultCollapsed: false,\r\n        }}\r\n        /*{\r\n          layout: 'vertical',\r\n          defaultCollapsed: false,\r\n        }*/\r\n        dateFormatter='string'\r\n        toolbar={{\r\n          title: '高级表格',\r\n          tooltip: '这是一个标题提示',\r\n        }}\r\n        toolBarRender={() => [\r\n          <Button key='danger' danger>\r\n            危险按钮\r\n          </Button>,\r\n          <Button key='show'>查看日志</Button>,\r\n          <Button type='primary' key='primary'>\r\n            <Link to='/leaves/create'>Apply Leave</Link>\r\n          </Button>,\r\n          <Dropdown key='menu' overlay={menu}>\r\n            <Button>\r\n              <EllipsisOutlined />\r\n            </Button>\r\n          </Dropdown>,\r\n        ]}\r\n      />\r\n    </ConfigProvider>\r\n  );\r\n};\r\n",
    "import { Route, Navigate } from 'react-router-dom';\r\n\r\nfunction PublicRoute({ children }) {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  return user ? <Navigate to='/' replace /> : children;\r\n}\r\n\r\nexport default PublicRoute;\r\n",
    "import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n  Form,\r\n  Select,\r\n  InputNumber,\r\n  Switch,\r\n  Radio,\r\n  Slider,\r\n  Button,\r\n  Upload,\r\n  Rate,\r\n  Checkbox,\r\n  Row,\r\n  Col,\r\n  UploadProps,\r\n} from 'antd';\r\nimport { UploadOutlined, InboxOutlined, StarOutlined } from '@ant-design/icons';\r\nimport './Test.css';\r\nconst { Option } = Select;\r\nconst Test = () => {\r\n  //console.log(calcWorkingDays('2021-10-01', '2021-10-11'));\r\n  const normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n  };\r\n  const beforeUpload = () => {};\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n  useEffect(() => {\r\n    notifyMe();\r\n  }, []);\r\n\r\n  function notifyMe() {\r\n    // Let's check if the browser supports notifications\r\n    if (!('Notification' in window)) {\r\n      alert('This browser does not support desktop notification');\r\n    }\r\n\r\n    // Let's check whether notification permissions have already been granted\r\n    else if (Notification.permission === 'granted') {\r\n      // If it's okay let's create a notification\r\n      var notification = new Notification('Hi there!');\r\n    }\r\n\r\n    // Otherwise, we need to ask the user for permission\r\n    else if (Notification.permission !== 'denied') {\r\n      Notification.requestPermission().then(function (permission) {\r\n        // If the user accepts, let's create a notification\r\n        if (permission === 'granted') {\r\n          var notification = new Notification('Hi there!');\r\n        }\r\n      });\r\n    }\r\n\r\n    // At last, if the user has denied notifications, and you\r\n    // want to be respectful there is no need to bother them any more.\r\n  }\r\n  const onFinish = (values) => {\r\n    const files = values.dragger.filter((file) => !!file.originFileObj);\r\n    console.log(files);\r\n  };\r\n  const downloadFile = (downloadFile) => {\r\n    console.log('herer', downloadFile);\r\n  };\r\n  const fileList = [\r\n    {\r\n      uid: '-1',\r\n      name: 'xxx.png',\r\n      status: 'done',\r\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n    },\r\n    {\r\n      uid: '-2',\r\n      name: 'yyy.png',\r\n      status: 'done',\r\n    },\r\n  ];\r\n  return <></>;\r\n};\r\n\r\nexport default Test;\r\n",
    "import React, { useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Checkbox,\r\n  message,\r\n  Alert,\r\n  Typography,\r\n} from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetPassword } from '../../actions/auth';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ResetPasswordForm = () => {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { isLoading, error } = useSelector((state) => state.users);\r\n  const onFinish = async (values) => {\r\n    dispatch(resetPassword(values.email));\r\n    if (!isLoading && !error) {\r\n      message.success('Email sent');\r\n    }\r\n    setSubmitted(true);\r\n    console.log('Success:', values);\r\n    console.log(submitted && !isLoading && !error);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  return (\r\n    <>\r\n      <Typography.Title level={2} style={{ textAlign: 'center' }}>\r\n        Reset Password\r\n      </Typography.Title>\r\n      <Form\r\n        name='basic'\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 8 }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Password'\r\n          name='password'\r\n          initialValue='test'\r\n          rules={[{ required: true, message: 'Please input your email!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Confirm Password'\r\n          name='confirmPassword'\r\n          initialValue='test'\r\n          rules={[{ required: true, message: 'Please input your email!' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        {submitted && !isLoading && !error && (\r\n          <Alert message='Email sent' type='success' />\r\n        )}\r\n        <Form.Item wrapperCol={{ offset: 11 }}>\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Link to='/auth'>Back to Login</Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordForm;\r\n",
    "import { Typography, DatePicker, Button, Table, Empty } from 'antd';\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchHolidaysByYear } from '../../actions/holidays';\r\nimport { Link } from 'react-router-dom';\r\nconst HolidayHome = ({ socket, user }) => {\r\n  const { holidays } = useSelector((state) => state.holidays);\r\n  const today = moment();\r\n  const dispatch = useDispatch();\r\n  const [year, setYear] = useState(today.year().toString());\r\n  const onChange = (date, dateStr) => {\r\n    setYear(dateStr);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchHolidaysByYear(year));\r\n  }, [dispatch, year]);\r\n\r\n  const testNoti = () => {\r\n    console.log(user);\r\n    socket?.emit('sendNoti', {\r\n      senderName: user.email,\r\n      receiverName: 'ShamsuzlynnMahat244@gmail.com',\r\n      content: 'test',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Typography.Title level={1}>Holidays</Typography.Title>\r\n      <DatePicker onChange={onChange} picker='year' defaultValue={today} />\r\n      <Button>\r\n        <Link to={`/holidays/create/${year}`}>Add New Holiday</Link>\r\n      </Button>\r\n      {holidays?.lists?.length ? (\r\n        <>\r\n          <Table\r\n            dataSource={holidays.lists}\r\n            rowKey='_id'\r\n            style={{ 'overflow-x': 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Start Date'\r\n              dataIndex='startDate'\r\n              key='startDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='End Date'\r\n              dataIndex='endDate'\r\n              key='endDate'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n          </Table>\r\n        </>\r\n      ) : (\r\n        <Empty />\r\n      )}\r\n      <Button>\r\n        <Link to='/'>Back</Link>\r\n      </Button>\r\n      <Button onClick={testNoti}>Test</Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HolidayHome;\r\n",
    "import * as api from '../api/index.js';\r\nimport { message } from 'antd';\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  FETCH_ALL_HOLIDAY,\r\n  FETCH_HOLIDAY_BY_YEAR,\r\n  FETCH_ONE_HOLIDAY,\r\n  HOLIDAY_END_LOADING,\r\n  HOLIDAY_ERROR,\r\n  HOLIDAY_START_LOADING,\r\n} from '../constants/actionTypes';\r\nimport { handleError } from './error.js';\r\n\r\nexport const fetchAllHolidays = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.fetchAllHolidays();\r\n    dispatch({ type: FETCH_ALL_HOLIDAY, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, HOLIDAY_ERROR);\r\n  }\r\n};\r\nexport const fetchHolidaysByYear = (year) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.fetchHolidaysByYear(year);\r\n    dispatch({ type: FETCH_HOLIDAY_BY_YEAR, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, HOLIDAY_ERROR);\r\n  }\r\n};\r\nexport const createHoliday = (formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.createHoliday(formData);\r\n    dispatch({ type: CREATE_HOLIDAY, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, HOLIDAY_ERROR);\r\n  }\r\n};\r\nexport const updateHoliday = (id, formData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: HOLIDAY_START_LOADING });\r\n    const { data } = await api.updateHoliday(id, formData);\r\n    dispatch({ type: DELETE_HOLIDAY, payload: data });\r\n    dispatch({ type: HOLIDAY_END_LOADING });\r\n  } catch (error) {\r\n    handleError(error, HOLIDAY_ERROR);\r\n  }\r\n};\r\n",
    "import React, { useState } from 'react';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { Form, Input, Button, Select, Typography, DatePicker } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createHoliday } from '../../actions/holidays';\r\nimport 'antd/dist/antd.css';\r\nimport './HolidayForm.css';\r\nconst { Title } = Typography;\r\nconst DeptForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  const onFinish = (values) => {\r\n    console.log('Success:', values);\r\n    const rangeValue = values['range-picker'];\r\n    const startDate = rangeValue[0];\r\n    const endDate = rangeValue[1];\r\n    dispatch(\r\n      createHoliday({\r\n        year: id,\r\n        holiday: {\r\n          title: values.title,\r\n          decription: values.description,\r\n          startDate,\r\n          endDate,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title level={2}> Create Department</Title>\r\n      <Form\r\n        name='basic'\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Title'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label='description' name='description'>\r\n          <Input.TextArea rows={4} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Date'\r\n          name='range-picker'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker.RangePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n          <Button>\r\n            <Link to='/holidays'>Back</Link>\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeptForm;\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchExtTraining,\r\n  fetchUpcomingTraining,\r\n} from '../../actions/training';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Descriptions,\r\n} from 'antd';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  PieChart,\r\n  Pie,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport './TrainingHome.css';\r\nimport { set } from 'lodash';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\n\r\nconst TrainingHome = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const { trainings, upcomingTraining, isLoading } = useSelector(\r\n    (state) => state.trainings\r\n  );\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  var count = 0;\r\n\r\n  const data = [\r\n    //test example data\r\n    { name: 'Hours Completed', value: 15 },\r\n    { name: 'Hours Required', value: 5 },\r\n  ];\r\n  const COLORS = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(user);\r\n    dispatch(fetchUpcomingTraining(user._id));\r\n    if (user.roles.name != 'staff')\r\n      dispatch(\r\n        fetchExtTraining(user.roles.name, user._id, user.department.name)\r\n      );\r\n  }, [dispatch]);\r\n\r\n  for (var element of trainings) {\r\n    if (element.status == 'pending') count++;\r\n  }\r\n\r\n  console.log('trainings', trainings);\r\n  console.log('upcoming', upcomingTraining);\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Current Training Status</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} md={12} lg={16}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Profile Details'\r\n              bordered\r\n              column={{ sm: 2, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={2}>\r\n                {`${user.first_name} ${user.last_name}`}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Department' span={2}>\r\n                {user.department.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Total Training Hours Required' span={1}>\r\n                {20 /**temp data */}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Training Hours Completed' span={1}>\r\n                {15 /**temp data */}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} md={12} lg={8}>\r\n          <Card bordered>\r\n            <ResponsiveContainer minWidth={200} minHeight={200}>\r\n              <PieChart>\r\n                <Pie\r\n                  data={data}\r\n                  innerRadius={60}\r\n                  outerRadius={80}\r\n                  fill='#8884d8'\r\n                  paddingAngle={3}\r\n                  startAngle={-270}\r\n                  dataKey='value'\r\n                  isAnimationActive={false}\r\n                  label={renderCustomizedLabel}\r\n                  labelLine={false}\r\n                >\r\n                  {data.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Quick Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Upcoming Trainings:</b>\r\n            {upcomingTraining && // uh just do the ?.ya better\r\n              (!upcomingTraining.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={upcomingTraining} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Organizer'\r\n                      render={(text, record) => {\r\n                        return record.trainingType == 'internal'\r\n                          ? `${record.user.first_name} ${record.user.last_name}`\r\n                          : `${record.organization}`;\r\n                      }}\r\n                    ></Table.Column>\r\n\r\n                    <Table.Column\r\n                      title='Title'\r\n                      dataIndex='title'\r\n                      key='title'\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Date'\r\n                      dataIndex='date'\r\n                      key='date'\r\n                      render={(text, record) =>\r\n                        moment(text).format('YYYY-MM-DD')\r\n                      }\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n            <Button type='danger'>\r\n              <Link to='/training/history'>To Trainings</Link>\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n        {user.roles.name != 'staff' && (\r\n          <Col className='gutter-row' xs={24} sm={12}>\r\n            <Card bordered>\r\n              Pending External Training Requests:{` ${count}`}\r\n              <Button className='right-button' type='danger'>\r\n                <Link to='/training/extList'>To Requests</Link>\r\n              </Button>\r\n            </Card>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingHome;\r\n",
    "import {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport {\r\n  Button,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  TimePicker,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { createTraining } from '../../actions/training';\r\nimport './TrainingForm.css';\r\n\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n//const history = useHistory();\r\nconst TrainingForm = () => {\r\n  const { id } = useParams();\r\n\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        }\r\n      }\r\n    }\r\n\r\n    const dateRange = values['date'];\r\n    const startDate = dateRange[0];\r\n    const endDate = dateRange[1];\r\n    const timeRange = values['time'];\r\n    const startTime = timeRange[0];\r\n    const endTime = timeRange[1];\r\n\r\n    const trainingData = {\r\n      user: user._id,\r\n      organizer: values.organizer,\r\n      title: values.title,\r\n      description: values.description,\r\n      fromDate: startDate.format('YYYY-MM-DD'),\r\n      toDate: endDate.format('YYYY-MM-DD'),\r\n      fromTime: startTime.format('HH:mm'),\r\n      toTime: endTime.format('HH:mm'),\r\n      duration:\r\n        moment.duration(endTime.diff(startTime)).as('hours') *\r\n        (moment.duration(endDate.diff(startDate)).as('days') + 1),\r\n      trainingType: 'internal',\r\n    };\r\n    Object.entries(trainingData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    dispatch(createTraining(formData));\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: `http://localhost:5000/${file.filePath}`,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    console.log('?????false', file);\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n\r\n  //if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2 className='form-header'>Create Internal Training</h2>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Organizer'\r\n          name='organizer'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please enter an organizer!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Title'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert a title!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Description'\r\n          name='description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your training description!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker.RangePicker\r\n            disabledDate={(current) => {\r\n              return current && current < moment().endOf('day');\r\n            }}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Time'\r\n          name='time'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your time!',\r\n            },\r\n          ]}\r\n        >\r\n          <TimePicker.RangePicker format='HH:mm' minuteStep={15} />\r\n        </Form.Item>\r\n        {/**https://github.com/ant-design/ant-design/tree/master/components/upload/UploadList */}\r\n        <Form.Item\r\n          name='upload'\r\n          label='Supporting Documents'\r\n          valuePropName='fileList'\r\n          getValueFromEvent={normFile}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          {error && <Text type='danger'>{error}</Text>}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            onClick={() => {\r\n              Modal.success({\r\n                content: 'Training successfully created.',\r\n                onOk() {\r\n                  window.location = '/training';\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingForm;\r\n",
    "import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAllTrainings } from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst TrainingList = () => {\r\n  const { trainings, isLoading } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const navigate = useNavigate();\r\n  var deptFilters = [];\r\n\r\n  const createTraining = () => {\r\n    navigate('/training/create');\r\n  };\r\n  const createExtTraining = () => {\r\n    navigate('/training/submitExt');\r\n  };\r\n  const calcAttendance = (data) => {\r\n    var temp = data.filter(function (item) {\r\n      return item.status == 'Approved';\r\n    }).length;\r\n    return temp;\r\n  };\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchAllTrainings());\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  console.log(trainings);\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'organizer',\r\n      key: 'organizer',\r\n      valueType: 'text',\r\n      //render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Start Date',\r\n      dataIndex: 'fromDate',\r\n      key: 'fromDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.fromDate) - moment(b.fromDate),\r\n      render: (text, record) => moment(record.fromDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'End Date',\r\n      dataIndex: 'toDate',\r\n      key: 'toDate',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.toDate) - moment(b.toDate),\r\n      render: (text, record) => moment(record.toDate).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n      render: (text, record) => `${record.fromTime} - ${record.toTime}`,\r\n    },\r\n    {\r\n      title: 'Total Duration(hours)',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      render: (text, record) =>\r\n        moment\r\n          .utc(moment.duration(record.duration, 'hours').asMilliseconds())\r\n          .format('HH [hours] mm [minutes]'),\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Attendants',\r\n      dataIndex: 'attendants',\r\n      key: 'attendants',\r\n      hideInSearch: true,\r\n      sorter: (a, b) => calcAttendance(a.attendants) - calcAttendance(b.attendants),\r\n      render: (text, record) => calcAttendance(record.attendants),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`/training/view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <h2>Internal Training List</h2>\r\n      {!trainings.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = trainings.reverse();\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        console.log(Object.keys(params));\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                layout: 'vertical',\r\n                defaultCollapsed: true,\r\n                span: 6,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingList;\r\n\r\n/**\r\n<Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Department ID'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> */\r\n",
    "import { StarOutlined } from '@ant-design/icons';\r\nimport { Badge, Button, Descriptions, List, Space, Upload } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport moment from 'moment';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  fetchTrainingById,\r\n  leaveTraining,\r\n  updateTraining,\r\n  updateTrainingStatus,\r\n} from '../../actions/training';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport './TrainingDetails.css';\r\nconst TrainingDetails = ({ socket, user }) => {\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  //const user = JSON.parse(localStorage.getItem('profile')).result;\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    dispatch(fetchTrainingById(id));\r\n  }, [id]);\r\n\r\n  const joinTraining = (user_id) => {\r\n    dispatch(updateTraining(id, { user_id }));\r\n  };\r\n\r\n  const cancelAttendance = (user_id) => {\r\n    dispatch(leaveTraining(id, { user_id }));\r\n  };\r\n\r\n  const setStatus = (status) => {\r\n    //used for approve/reject ext training\r\n    dispatch(updateTrainingStatus(id, { ...training, status }));\r\n  };\r\n\r\n  const setAttendanceStatus = (attendant_id, newStatus) => {\r\n    console.log(attendant_id, newStatus);\r\n    const updatedAttendant = training.attendants.map((attendant) => {\r\n      if (attendant.user._id === attendant_id)\r\n        return { user: attendant_id, status: newStatus };\r\n      return attendant;\r\n    });\r\n\r\n    dispatch(\r\n      updateTrainingStatus(id, { ...training, attendants: updatedAttendant })\r\n    );\r\n  };\r\n\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    console.log(training);\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: `http://localhost:5000/${file.filePath}`,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n\r\n  console.log(training);\r\n\r\n  if (!training) return null;\r\n  if (isLoading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Descriptions\r\n        style={{ marginBottom: 16 }}\r\n        title='Training Info'\r\n        bordered\r\n        column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\r\n      >\r\n        {training.trainingType == 'external' && (\r\n          <Descriptions.Item label='Requester' span={3}>\r\n            {`${training.user.first_name} ${training.user.last_name}`}\r\n          </Descriptions.Item>\r\n        )}\r\n        <Descriptions.Item label='Title' span={3}>\r\n          {training.title}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Description' span={3}>\r\n          {training.description}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Training Type' span={3}>\r\n          {training.trainingType}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Organizer' span={3}>\r\n          {training.organizer}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Start Date' span={2}>\r\n          {moment(training.fromDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='End Date' span={2}>\r\n          {moment(training.toDate).format('YYYY-MM-DD')}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label='Time' span={3}>\r\n          {`${training.fromTime} - ${training.toTime}`}\r\n        </Descriptions.Item>\r\n        {training.trainingType == 'internal' && (\r\n          <Descriptions.Item label='Attendants' span={3}>\r\n            {training.attendants.length != 0 ? (\r\n              <>\r\n                <List\r\n                  size='small'\r\n                  split='true'\r\n                  dataSource={training.attendants}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <Space size='large'>\r\n                        {`${item.user.first_name} ${item.user.last_name}`}\r\n                        <Badge\r\n                          status={\r\n                            item.status == 'Pending'\r\n                              ? 'processing'\r\n                              : item.status == 'Approved'\r\n                              ? 'success'\r\n                              : 'error'\r\n                          }\r\n                          text={item.status}\r\n                        />\r\n                        {user.roles.name == 'admin' &&\r\n                          item.status == 'Pending' && (\r\n                            <>\r\n                              <Button\r\n                                className='btn-success'\r\n                                onClick={() =>\r\n                                  setAttendanceStatus(item.user._id, 'Approved')\r\n                                }\r\n                              >\r\n                                Approve\r\n                              </Button>\r\n                              <Button\r\n                                danger\r\n                                onClick={() =>\r\n                                  setAttendanceStatus(item.user._id, 'Rejected')\r\n                                }\r\n                              >\r\n                                Reject\r\n                              </Button>\r\n                            </>\r\n                          )}\r\n                      </Space>\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div>No data</div>\r\n            )}\r\n          </Descriptions.Item>\r\n        )}\r\n        <Descriptions.Item label='Supporting Documents' span={3}>\r\n          {training.attachments.length != 0 ? (\r\n            <>\r\n              <Upload\r\n                className='showFiles'\r\n                defaultFileList={defaultFile}\r\n                showUploadList={{\r\n                  showDownloadIcon: true,\r\n                  downloadIcon: (\r\n                    <StarOutlined\r\n                    //onClick={(e) => console.log(e, 'custom removeIcon event')}\r\n                    />\r\n                  ),\r\n                  showRemoveIcon: false,\r\n                }}\r\n              ></Upload>\r\n            </>\r\n          ) : (\r\n            <div>None</div>\r\n          )}\r\n        </Descriptions.Item>\r\n        {training.trainingType == 'external' && (\r\n          <Descriptions.Item label='Status' span={3}>\r\n            <Badge\r\n              status={\r\n                training.status == 'pending'\r\n                  ? 'processing'\r\n                  : training.status == 'approve'\r\n                  ? 'success'\r\n                  : 'error'\r\n              }\r\n              text={training.status}\r\n            />\r\n          </Descriptions.Item>\r\n        )}\r\n      </Descriptions>\r\n      <Space>\r\n        <Button onClick={() => navigate(-1)}>Back</Button>\r\n        {!training.attendants.some((e) => e.user._id === user._id) &&\r\n        training.trainingType == 'internal' ? (\r\n          <>\r\n            <Button\r\n              className='btn-success'\r\n              onClick={() => joinTraining(user._id)}\r\n            >\r\n              Join Training\r\n            </Button>\r\n          </>\r\n        ) : training.trainingType == 'internal' ? (\r\n          <>\r\n            <Button danger onClick={() => cancelAttendance(user._id)}>\r\n              Cancel Attendance\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          training.user._id != user._id &&\r\n          training.trainingType == 'external' &&\r\n          training.status == 'pending' && (\r\n            <>\r\n              <Button\r\n                className='btn-success'\r\n                onClick={() => setStatus('approve')}\r\n              >\r\n                Approve\r\n              </Button>\r\n              <Button danger onClick={() => setStatus('reject')}>\r\n                Reject\r\n              </Button>\r\n            </>\r\n          )\r\n        )}\r\n      </Space>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingDetails;\r\n",
    "import React, { createRef, useState, useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  TimePicker,\r\n  InputNumber,\r\n  Typography,\r\n  Upload,\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTraining } from '../../actions/training';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport {\r\n  DeleteOutlined,\r\n  DownloadOutlined,\r\n  UploadOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nconst { TextArea } = Input;\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nconst ExtTrainingForm = () => {\r\n  const { id } = useParams();\r\n\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { isLoading, training } = useSelector((state) => state.trainings);\r\n  const [form] = Form.useForm();\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const onFinish = (values) => {\r\n    setError(null);\r\n\r\n    let formData = new FormData();\r\n    if (values.upload) {\r\n      for (let file of values.upload) {\r\n        if (file.originFileObj) {\r\n          formData.append('files', file.originFileObj);\r\n        }\r\n      }\r\n    }\r\n\r\n    const trainingData = {\r\n      user: user._id,\r\n      department: user.department._id,\r\n      title: values.title,\r\n      description: values.description,\r\n      date: values.date.format('YYYY-MM-DD'),\r\n      time: values.time.format('HH:mm'),\r\n      duration: values.duration,\r\n      trainingType: 'external',\r\n      organization: values.organization,\r\n      status: 'pending',\r\n    };\r\n    Object.entries(trainingData).forEach(([key, value]) => {\r\n      formData.append(key, value);\r\n    });\r\n    dispatch(createTraining(formData));\r\n  };\r\n  const defaultFile = () => {\r\n    if (!!!id) return null;\r\n    return (\r\n      training?.attachments?.map((file) => {\r\n        return {\r\n          uid: file.fileId,\r\n          name: file.fileName,\r\n          status: 'done',\r\n          url: `http://localhost:5000/${file.filePath}`,\r\n        };\r\n      }) || []\r\n    );\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n\r\n    return e && e.fileList;\r\n  };\r\n\r\n  const preventUpload = (file) => {\r\n    console.log('?????false', file);\r\n    return false;\r\n  };\r\n  //https://stackoverflow.com/a/51519603/4858751\r\n  const dummyRequest = ({ file, onSuccess }) => {\r\n    setTimeout(() => {\r\n      onSuccess('ok');\r\n    }, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className='form-header'>Request External Training</h2>\r\n      <Form\r\n        form={form}\r\n        name='basic'\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete='off'\r\n      >\r\n        <Form.Item\r\n          label='Workshop Name'\r\n          name='title'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert a name!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label='Workshop Organization'\r\n          name='organization'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please insert a organization!',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Reason for attending'\r\n          name='description'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your training description!',\r\n            },\r\n          ]}\r\n        >\r\n          <TextArea rows={4} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Date'\r\n          name='date'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your date!',\r\n            },\r\n          ]}\r\n        >\r\n          <DatePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Time'\r\n          name='time'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input your time!',\r\n            },\r\n          ]}\r\n        >\r\n          <TimePicker />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label='Duration(hours)'\r\n          name='duration'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input the duration!',\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber min={1} />\r\n        </Form.Item>\r\n        {/**https://github.com/ant-design/ant-design/tree/master/components/upload/UploadList */}\r\n        <Form.Item\r\n          name='upload'\r\n          label='Supporting Documents'\r\n          valuePropName='fileList'\r\n          getValueFromEvent={normFile}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please provide documents for workshop details!',\r\n            },\r\n          ]}\r\n        >\r\n          <Upload.Dragger\r\n            name='logo'\r\n            listType='picture'\r\n            beforeUpload={preventUpload}\r\n            customRequest={dummyRequest}\r\n            defaultFileList={defaultFile}\r\n            showUploadList={{\r\n              showDownloadIcon: true,\r\n              downloadIcon: (file) => {\r\n                if (file.status == 'done') return <DownloadOutlined />;\r\n                return <></>;\r\n              },\r\n              showRemoveIcon: true,\r\n              removeIcon: (file) => {\r\n                if (file.status == 'done') return <></>;\r\n                return <DeleteOutlined />;\r\n              },\r\n            }}\r\n          >\r\n            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n          </Upload.Dragger>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          {error && <Text type='danger'>{error}</Text>}\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button type='primary' htmlType='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default ExtTrainingForm;\r\n",
    "import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchExtTraining } from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst ExtTrainingList = () => {\r\n  const { trainings, isLoading } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchExtTraining(user.roles.name, user._id, user.department.name));\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'pending' },\r\n    { text: 'Approved', value: 'approve' },\r\n    { text: 'Rejected', value: 'reject' },\r\n  ];\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Requester Name',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Requester Department',\r\n      dataIndex: ['department', 'name'],\r\n      key: 'department',\r\n\r\n      filters: deptFilters,\r\n      onFilter: (value, record) => record.department.name.indexOf(value) === 0,\r\n    },\r\n    { title: 'Organizer', dataIndex: 'organization', key: 'organization' },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.date) - moment(b.date),\r\n      render: (text, record) => moment(record.date).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Duration(hours)',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'pending'\r\n              ? 'processing'\r\n              : record.status == 'approve'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h2>External Training Requests</h2>\r\n      {!trainings.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = trainings.reverse();\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        console.log(Object.keys(params));\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 10,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                layout: 'vertical',\r\n                defaultCollapsed: true,\r\n                span: 6,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExtTrainingList;\r\n\r\n/**<Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Requester Name'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Requester Department'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='organization'\r\n              key='organization'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Status'\r\n              dataIndex='status'\r\n              key='status'\r\n              render={(text, record) => (\r\n                <Badge\r\n                  status={\r\n                    record.status == 'pending'\r\n                      ? 'processing'\r\n                      : record.status == 'approve'\r\n                      ? 'success'\r\n                      : 'error'\r\n                  }\r\n                  text={record.status}\r\n                />\r\n              )}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table> */\r\n",
    "import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  fetchExtTrainingHistory,\r\n  fetchTrainingHistory,\r\n} from '../../actions/training';\r\nimport { getDepts } from '../../actions/depts';\r\nimport {\r\n  Spin,\r\n  Table,\r\n  Space,\r\n  Button,\r\n  Badge,\r\n  Empty,\r\n  Tag,\r\n  ConfigProvider,\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd';\r\nimport {\r\n  PlusOutlined,\r\n  EllipsisOutlined,\r\n  QuestionCircleOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport ProTable, { TableDropdown } from '@ant-design/pro-table';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\n\r\nconst TrainingHistory = () => {\r\n  const { trainings, extTrainings, isLoading } = useSelector(\r\n    (state) => state.trainings\r\n  );\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchExtTrainingHistory(user._id));\r\n    dispatch(fetchTrainingHistory(user._id));\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n\r\n  var deptFilters = [];\r\n  const statusFilter = [\r\n    { text: 'Pending', value: 'pending' },\r\n    { text: 'Approved', value: 'approve' },\r\n    { text: 'Rejected', value: 'reject' },\r\n  ];\r\n\r\n  depts.forEach((element) => {\r\n    deptFilters.push({ text: element.name, value: element.name });\r\n  });\r\n\r\n  const columns1 = [\r\n    { title: 'Organizer', dataIndex: 'organization', key: 'organization' },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.date) - moment(b.date),\r\n      render: (text, record) => moment(record.date).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Duration(hours)',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      filters: statusFilter,\r\n      onFilter: (value, record) => record.status.indexOf(value) === 0,\r\n      render: (text, record) => (\r\n        <Badge\r\n          status={\r\n            record.status == 'pending'\r\n              ? 'processing'\r\n              : record.status == 'approve'\r\n              ? 'success'\r\n              : 'error'\r\n          }\r\n          text={record.status}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const columns2 = [\r\n    {\r\n      title: 'Organizer',\r\n      dataIndex: 'user',\r\n      key: 'user',\r\n      valueType: 'text',\r\n      render: (text, record) => `${text.first_name} ${text.last_name}`,\r\n    },\r\n    {\r\n      title: 'Department',\r\n      dataIndex: ['department', 'name'],\r\n      key: 'department',\r\n\r\n      filters: deptFilters,\r\n      onFilter: (value, record) => record.department.name.indexOf(value) === 0,\r\n    },\r\n    { title: 'Title', dataIndex: 'title', key: 'title' },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n      valueType: 'date',\r\n      sorter: (a, b) => moment(a.date) - moment(b.date),\r\n      render: (text, record) => moment(record.date).format('YYYY-MM-DD'),\r\n    },\r\n    {\r\n      title: 'Time',\r\n      dataIndex: 'time',\r\n      key: 'time',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Duration(hours)',\r\n      dataIndex: 'duration',\r\n      key: 'duration',\r\n      hideInSearch: true,\r\n    },\r\n    {\r\n      title: 'Attendants',\r\n      dataIndex: 'attendants',\r\n      key: 'attendants',\r\n      hideInSearch: true,\r\n      sorter: (a, b) =>\r\n        moment(a.attendants.length) - moment(b.attendants.length),\r\n      render: (text, record) => record.attendants.length,\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: '_id',\r\n      valueType: 'option',\r\n      render: (text, record) => (\r\n        <Space size='middle' key={record._id}>\r\n          <Link to={`view/${record._id}`}>View</Link>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  const actionRef = useRef();\r\n\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  return (\r\n    <>\r\n      <h3>Your External Training Requests</h3>\r\n      {extTrainings &&\r\n        (!extTrainings.length ? (\r\n          <Empty></Empty>\r\n        ) : (\r\n          <>\r\n            <ConfigProvider locale={enUSIntl}>\r\n              <ProTable\r\n                columns={columns1}\r\n                actionRef={actionRef}\r\n                request={(params, sorter, filter) => {\r\n                  let dataSource = extTrainings.reverse();\r\n                  if (params) {\r\n                    if (Object.keys(params).length > 0) {\r\n                      dataSource = dataSource.filter((item) => {\r\n                        return Object.keys(params).every((key) => {\r\n                          console.log(Object.keys(params));\r\n                          if (!params[key]) {\r\n                            return true;\r\n                          }\r\n                          if (key == 'pageSize' || key == 'current') {\r\n                            return true;\r\n                          }\r\n\r\n                          if (params[key] == 'all') {\r\n                            return true;\r\n                          }\r\n                          let val = item[key];\r\n                          if (key == 'user') {\r\n                            val = `${item.user.first_name} ${item.user.last_name}`;\r\n                          } else if (key == 'department') {\r\n                            val = `${item.department.name}`;\r\n                          }\r\n                          if (!val) {\r\n                            return true;\r\n                          }\r\n                          if (\r\n                            val.search(\r\n                              new RegExp('.*' + params[key] + '.*', 'gi')\r\n                            ) != -1\r\n                          ) {\r\n                            return true;\r\n                          }\r\n                          return false;\r\n                        });\r\n                      });\r\n                    }\r\n                  }\r\n\r\n                  return Promise.resolve({\r\n                    data: dataSource,\r\n                    success: true,\r\n                  });\r\n                }}\r\n                rowKey='_id'\r\n                pagination={{\r\n                  pageSize: 5,\r\n                  showQuickJumper: true,\r\n                }}\r\n                search={{\r\n                  layout: 'vertical',\r\n                  defaultCollapsed: true,\r\n                  span: 6,\r\n                }}\r\n                dateFormatter='string'\r\n                toolbar={{\r\n                  title: 'Tips:',\r\n                  tooltip:\r\n                    'Use the search bar above or filter icons on the columns for easy record finding',\r\n                }}\r\n                toolBarRender={() => [\r\n                  <Space>\r\n                    <Button type='primary'>\r\n                      <Link to='/training/submitExt'>\r\n                        Submit External Training Request\r\n                      </Link>\r\n                    </Button>\r\n                  </Space>,\r\n                ]}\r\n              />\r\n            </ConfigProvider>\r\n            <br />\r\n          </>\r\n        ))}\r\n\r\n      <h3>Attending/Hosting Internal Training</h3>\r\n      {!trainings.length ? (\r\n        <Empty></Empty>\r\n      ) : (\r\n        <>\r\n          <ConfigProvider locale={enUSIntl}>\r\n            <ProTable\r\n              columns={columns2}\r\n              actionRef={actionRef}\r\n              request={(params, sorter, filter) => {\r\n                let dataSource = trainings.reverse();\r\n                if (params) {\r\n                  if (Object.keys(params).length > 0) {\r\n                    dataSource = dataSource.filter((item) => {\r\n                      return Object.keys(params).every((key) => {\r\n                        console.log(Object.keys(params));\r\n                        if (!params[key]) {\r\n                          return true;\r\n                        }\r\n                        if (key == 'pageSize' || key == 'current') {\r\n                          return true;\r\n                        }\r\n\r\n                        if (params[key] == 'all') {\r\n                          return true;\r\n                        }\r\n                        let val = item[key];\r\n                        if (key == 'user') {\r\n                          val = `${item.user.first_name} ${item.user.last_name}`;\r\n                        } else if (key == 'department') {\r\n                          val = `${item.department.name}`;\r\n                        }\r\n                        if (!val) {\r\n                          return true;\r\n                        }\r\n                        if (\r\n                          val.search(\r\n                            new RegExp('.*' + params[key] + '.*', 'gi')\r\n                          ) != -1\r\n                        ) {\r\n                          return true;\r\n                        }\r\n                        return false;\r\n                      });\r\n                    });\r\n                  }\r\n                }\r\n\r\n                return Promise.resolve({\r\n                  data: dataSource,\r\n                  success: true,\r\n                });\r\n              }}\r\n              rowKey='_id'\r\n              pagination={{\r\n                pageSize: 5,\r\n                showQuickJumper: true,\r\n              }}\r\n              search={{\r\n                layout: 'vertical',\r\n                defaultCollapsed: true,\r\n                span: 6,\r\n              }}\r\n              dateFormatter='string'\r\n              toolbar={{\r\n                title: 'Tips:',\r\n                tooltip:\r\n                  'Use the search bar above or filter icons on the columns for easy record finding',\r\n              }}\r\n              toolBarRender={() => [\r\n                <Space>\r\n                  <Button type='primary'>\r\n                    <Link to='/training/create'>Organize Training</Link>\r\n                  </Button>\r\n                </Space>,\r\n              ]}\r\n            />\r\n          </ConfigProvider>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TrainingHistory;\r\n\r\n/**<Table\r\n              dataSource={extTrainings}\r\n              rowKey='_id'\r\n              style={{ overflowX: 'scroll' }}\r\n            >\r\n              <Table.Column\r\n                title='Organizer'\r\n                dataIndex='organization'\r\n                key='organization'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Title'\r\n                dataIndex='title'\r\n                key='title'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Date'\r\n                dataIndex='date'\r\n                key='date'\r\n                render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Time'\r\n                dataIndex='time'\r\n                key='time'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Duration(hours)'\r\n                dataIndex='duration'\r\n                key='duration'\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Status'\r\n                dataIndex='status'\r\n                key='status'\r\n                render={(text, record) => (\r\n                  <Badge\r\n                    status={\r\n                      record.status == 'pending'\r\n                        ? 'processing'\r\n                        : record.status == 'approve'\r\n                        ? 'success'\r\n                        : 'error'\r\n                    }\r\n                    text={record.status}\r\n                  />\r\n                )}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Action'\r\n                key='action'\r\n                render={(text, record) => (\r\n                  <Space size='middle' key={record._id}>\r\n                    <Link to={`view/${record._id}`}>View</Link>\r\n                  </Space>\r\n                )}\r\n              ></Table.Column>\r\n            </Table> \r\n            \r\n            \r\n            \r\n            <Table\r\n            dataSource={trainings}\r\n            rowKey='_id'\r\n            style={{ overflowX: 'scroll' }}\r\n          >\r\n            <Table.Column\r\n              title='Organizer'\r\n              dataIndex='user'\r\n              key='user._id'\r\n              render={(text, record) => `${text.first_name} ${text.last_name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Department ID'\r\n              dataIndex='department'\r\n              key='department._id'\r\n              render={(text, record) => `${text.name}`}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Title'\r\n              dataIndex='title'\r\n              key='title'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Date'\r\n              dataIndex='date'\r\n              key='date'\r\n              render={(text, record) => moment(text).format('YYYY-MM-DD')}\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Time'\r\n              dataIndex='time'\r\n              key='time'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Duration(hours)'\r\n              dataIndex='duration'\r\n              key='duration'\r\n            ></Table.Column>\r\n            <Table.Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle' key={record._id}>\r\n                  <Link to={`view/${record._id}`}>View</Link>\r\n                </Space>\r\n              )}\r\n            ></Table.Column>\r\n          </Table>*/\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n  List,\r\n  Modal,\r\n  Statistic,\r\n} from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchLeaveCount } from '../../actions/leaves';\r\nimport { fetchTrainingCount } from '../../actions/training';\r\nimport { getUsers } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport RcResizeObserver from 'rc-resize-observer';\r\nimport { StatisticCard } from '@ant-design/pro-card';\r\nconst Home = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { leaves, isLoading, leaveCount } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { users } = useSelector((state) => state.users);\r\n  const { trainingCount } = useSelector((state) => state.trainings);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [responsive, setResponsive] = useState(false);\r\n\r\n  var pass2MonthC = 0,\r\n    pass2MonthM = 0,\r\n    pass1MonthC = 0,\r\n    pass1MonthM = 0,\r\n    currentMonthC = 0,\r\n    currentMonthM = 0,\r\n    next1MonthC = 0,\r\n    next1MonthM = 0,\r\n    next2MonthC = 0,\r\n    next2MonthM = 0,\r\n    next3MonthC = 0,\r\n    next3MonthM = 0,\r\n    max = 0;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTrainingCount());\r\n    dispatch(fetchLeaveCount());\r\n    dispatch(getUsers());\r\n    dispatch(getDepts());\r\n  }, [dispatch]);\r\n  const { Divider } = StatisticCard;\r\n  const top3Users = users.slice(0, 3);\r\n\r\n  leaves.map((element) => {\r\n    var d = new Date(element.fromDate);\r\n    if (element.status == 'approve') {\r\n      if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthM, max);\r\n    }\r\n  });\r\n\r\n  const empLeaveData = [\r\n    {\r\n      name: moment().subtract(2, 'months').format('MMMM'),\r\n      Casual: pass2MonthC,\r\n      Medical: pass2MonthM,\r\n    },\r\n    {\r\n      name: moment().subtract(1, 'months').format('MMMM'),\r\n      Casual: pass1MonthC,\r\n      Medical: pass1MonthM,\r\n    },\r\n    {\r\n      name: moment().format('MMMM'),\r\n      Casual: currentMonthC,\r\n      Medical: currentMonthM,\r\n    },\r\n    {\r\n      name: moment().add(1, 'months').format('MMMM'),\r\n      Casual: next1MonthC,\r\n      Medical: next1MonthM,\r\n    },\r\n    {\r\n      name: moment().add(2, 'months').format('MMMM'),\r\n      Casual: next2MonthC,\r\n      Medical: next2MonthM,\r\n    },\r\n    {\r\n      name: moment().add(3, 'months').format('MMMM'),\r\n      Casual: next3MonthC,\r\n      Medical: next3MonthM,\r\n    },\r\n  ];\r\n\r\n  const COLORS1 = ['#0088FE', '#2ce654'];\r\n  const COLORS2 = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (isLoading || !leaves || !leaveCount) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Typography.Title level={2}>Admin Dashboard</Typography.Title>\r\n\r\n      <RcResizeObserver\r\n        key='resize-observer'\r\n        onResize={(offset) => {\r\n          setResponsive(offset.width < 596);\r\n        }}\r\n      >\r\n        <StatisticCard.Group direction={responsive ? 'column' : 'row'}>\r\n          <StatisticCard\r\n            statistic={{\r\n              title: '冻结金额',\r\n              value: 20190102,\r\n              precision: 2,\r\n              suffix: '元',\r\n            }}\r\n            chart={\r\n              <img\r\n                src='https://gw.alipayobjects.com/zos/alicdn/RLeBTRNWv/bianzu%25252043x.png'\r\n                alt='直方图'\r\n                width='100%'\r\n              />\r\n            }\r\n          />\r\n          <Divider type={responsive ? 'horizontal' : 'vertical'} />\r\n          <StatisticCard\r\n            statistic={{\r\n              title: '设计资源数',\r\n              value: 234,\r\n            }}\r\n            chart={\r\n              <img\r\n                src='https://gw.alipayobjects.com/zos/alicdn/RLeBTRNWv/bianzu%25252043x.png'\r\n                alt='直方图'\r\n                width='100%'\r\n              />\r\n            }\r\n          />\r\n          <Divider type={responsive ? 'horizontal' : 'vertical'} />\r\n          <StatisticCard\r\n            statistic={{\r\n              title: '信息完成度',\r\n              value: 5,\r\n              suffix: '/ 100',\r\n            }}\r\n            chart={\r\n              <img\r\n                src='https://gw.alipayobjects.com/zos/alicdn/RLeBTRNWv/bianzu%25252043x.png'\r\n                alt='直方图'\r\n                width='100%'\r\n              />\r\n            }\r\n          />\r\n        </StatisticCard.Group>\r\n      </RcResizeObserver>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={24}>\r\n          <Card bordered>\r\n            <h3>Leaves Taken by Month for All Employees</h3>\r\n            <ResponsiveContainer minHeight={300}>\r\n              <LineChart\r\n                width='100%'\r\n                height='100%'\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} allowDecimals={false} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                <Line\r\n                  type='monotone'\r\n                  dataKey='Casual'\r\n                  stroke='#0088FE'\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Line type='monotone' dataKey='Medical' stroke='#2ce654' />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <br />\r\n            <row>\r\n              <Button className='right-button' type='primary'>\r\n                <Link to='/leaves/list'>More Details...</Link>\r\n              </Button>\r\n              <Button className='right-button' type='primary'>\r\n                <Link to='/calendar'>View on Calendar</Link>\r\n              </Button>\r\n            </row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Leaves Taken by Department:</b>\r\n            <Table dataSource={leaveCount} rowKey='_id'>\r\n              <Table.Column\r\n                title='Name'\r\n                dataIndex={['department', 'name']}\r\n                dataKey={['department', 'name']}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Leaves Taken'\r\n                dataIndex='count'\r\n                dataKey='count'\r\n                defaultSortOrder='descend'\r\n                sorter={(a, b) => a.count - b.count}\r\n              ></Table.Column>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Trainings Conducted by Department:</b>\r\n            <Table dataSource={trainingCount} rowKey='_id'>\r\n              <Table.Column\r\n                title='Name'\r\n                dataIndex={['department', 'name']}\r\n                dataKey={['department', 'name']}\r\n              ></Table.Column>\r\n              <Table.Column\r\n                title='Trainings Organized'\r\n                dataIndex='count'\r\n                dataKey='count'\r\n                defaultSortOrder='descend'\r\n                sorter={(a, b) => a.count - b.count}\r\n              ></Table.Column>\r\n            </Table>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Typography,\r\n  Empty,\r\n  Table,\r\n  Tag,\r\n  Space,\r\n  Button,\r\n  Descriptions,\r\n  Alert,\r\n  List,\r\n  Modal,\r\n  Form,\r\n  Select,\r\n} from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { fetchAllLeaves, fetchTodayLeaves } from '../../actions/leaves';\r\nimport { fetchDeptUsers } from '../../actions/users';\r\nimport { getDepts } from '../../actions/depts';\r\nimport moment from 'moment';\r\nimport recharts, {\r\n  BarChart,\r\n  Bar,\r\n  Sector,\r\n  Cell,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  Legend,\r\n  YAxis,\r\n  XAxis,\r\n  PieChart,\r\n  Pie,\r\n  LineChart,\r\n  CartesianGrid,\r\n  Line,\r\n} from 'recharts';\r\nimport 'antd/dist/antd.css';\r\nimport PageLoading from '../PageLoading/PageLoading';\r\n\r\nconst Home = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile')).result;\r\n  const { leaves, isLoading, todayLeaves } = useSelector(\r\n    (state) => state.leaves\r\n  );\r\n  const { users } = useSelector((state) => state.users);\r\n  const { depts } = useSelector((state) => state.depts);\r\n  const { Option } = Select;\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [loading, setIsloading] = useState(true);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  var deptId;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllLeaves());\r\n    dispatch(fetchTodayLeaves());\r\n    dispatch(fetchDeptUsers(user.department._id)).then(() =>\r\n      setIsloading(false)\r\n    );\r\n\r\n    if (user.roles.name == 'admin') {\r\n      setIsModalVisible(true);\r\n      dispatch(getDepts());\r\n    }\r\n  }, [dispatch]);\r\n  const onFinish = (values) => {\r\n    dispatch(fetchDeptUsers(values.department));\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  if (!users.length) deptId = user.department._id;\r\n  else deptId = users[0].department._id;\r\n  const filterDept = todayLeaves.filter(\r\n    (todayLeaves) => todayLeaves.department._id == deptId\r\n  );\r\n\r\n  const top3Users = users.slice(0, 3);\r\n\r\n  var supervisorNames = [];\r\n  users.map((element) => {\r\n    if (element.roles.name == 'supervisor')\r\n      supervisorNames.push(`${element.first_name} ${element.last_name}`);\r\n  });\r\n\r\n  var pass2MonthC = 0,\r\n    pass2MonthM = 0,\r\n    pass1MonthC = 0,\r\n    pass1MonthM = 0,\r\n    currentMonthC = 0,\r\n    currentMonthM = 0,\r\n    next1MonthC = 0,\r\n    next1MonthM = 0,\r\n    next2MonthC = 0,\r\n    next2MonthM = 0,\r\n    next3MonthC = 0,\r\n    next3MonthM = 0,\r\n    max = 0;\r\n\r\n  leaves.map((element) => {\r\n    var d = new Date(element.fromDate);\r\n    if (element.status == 'approve' && element.department._id == deptId) {\r\n      if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(2, 'months').month()\r\n      )\r\n        max = Math.max(++pass2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().subtract(1, 'months').month()\r\n      )\r\n        max = Math.max(++pass1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().month()\r\n      )\r\n        max = Math.max(++currentMonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(1, 'months').month()\r\n      )\r\n        max = Math.max(++next1MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(2, 'months').month()\r\n      )\r\n        max = Math.max(++next2MonthM, max);\r\n      else if (\r\n        element.leaveType == 'casual' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthC, max);\r\n      else if (\r\n        element.leaveType == 'medical' &&\r\n        d.getMonth() == moment().add(3, 'months').month()\r\n      )\r\n        max = Math.max(++next3MonthM, max);\r\n    }\r\n  });\r\n\r\n  const empLeaveData = [\r\n    {\r\n      name: moment().subtract(2, 'months').format('MMMM'),\r\n      Casual: pass2MonthC,\r\n      Medical: pass2MonthM,\r\n    },\r\n    {\r\n      name: moment().subtract(1, 'months').format('MMMM'),\r\n      Casual: pass1MonthC,\r\n      Medical: pass1MonthM,\r\n    },\r\n    {\r\n      name: moment().format('MMMM'),\r\n      Casual: currentMonthC,\r\n      Medical: currentMonthM,\r\n    },\r\n    {\r\n      name: moment().add(1, 'months').format('MMMM'),\r\n      Casual: next1MonthC,\r\n      Medical: next1MonthM,\r\n    },\r\n    {\r\n      name: moment().add(2, 'months').format('MMMM'),\r\n      Casual: next2MonthC,\r\n      Medical: next2MonthM,\r\n    },\r\n    {\r\n      name: moment().add(3, 'months').format('MMMM'),\r\n      Casual: next3MonthC,\r\n      Medical: next3MonthM,\r\n    },\r\n  ];\r\n\r\n  const COLORS1 = ['#0088FE', '#2ce654'];\r\n  const COLORS2 = ['#0088FE', '#de0b0b'];\r\n\r\n  const renderCustomizedLabel = ({ x, y, value }) => {\r\n    return (\r\n      <text x={x} y={y} fill='black' textAnchor='end' alignmentBaseline='auto'>\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n  if (loading) return <PageLoading />;\r\n  return (\r\n    <>\r\n      <Modal\r\n        title='Select Department to View'\r\n        visible={isModalVisible}\r\n        footer={[\r\n          <Button onClick={() => navigate(-1)}>Back</Button>,\r\n          <Button form='myForm' key='submit' htmlType='submit'>\r\n            Submit\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Form id='myForm' onFinish={onFinish}>\r\n          <Form.Item\r\n            label='Departments'\r\n            name='department'\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please select a department!',\r\n              },\r\n            ]}\r\n          >\r\n            <Select>\r\n              {depts.map((depts) => (\r\n                <Option key={depts._id} value={depts._id}>\r\n                  {depts.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n      <Typography.Title level={2}>Department Dashboard</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <Descriptions\r\n              title='Department Details'\r\n              bordered\r\n              contentStyle={{ wordBreak: 'keep-all' }}\r\n              column={{ sm: 3, xs: 1 }}\r\n            >\r\n              <Descriptions.Item label='Name' span={2}>\r\n                {users[0].department.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Code' span={1}>\r\n                {users[0].department.code}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='Supervisors' span={3}>\r\n                <List\r\n                  dataSource={supervisorNames}\r\n                  renderItem={(item) => (\r\n                    <List.Item>\r\n                      <Typography.Text mark></Typography.Text> {item}\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label='No. of Staff' span={3}>\r\n                {users.length}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n            {user.roles.name == 'admin' && (\r\n              <>\r\n                <br />\r\n                <Button type='primary' onClick={showModal}>\r\n                  Change Departments\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <h4>Leaves Taken by Month for Employees in Department</h4>\r\n            <ResponsiveContainer minHeight={300}>\r\n              <LineChart\r\n                width='100%'\r\n                height='100%'\r\n                data={empLeaveData}\r\n                margin={{\r\n                  top: 5,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5,\r\n                }}\r\n              >\r\n                <XAxis dataKey='name' />\r\n                <YAxis domain={[0, max + 2]} allowDecimals={false} />\r\n                <Tooltip />\r\n                <Legend wrapperStyle={{ top: 0, left: 70 }} />\r\n                <Line\r\n                  type='monotone'\r\n                  dataKey='Casual'\r\n                  stroke='#0088FE'\r\n                  activeDot={{ r: 8 }}\r\n                />\r\n                <Line type='monotone' dataKey='Medical' stroke='#2ce654' />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <Button type='primary'>\r\n              <Link to='/leaves/list'>To Leaves</Link>\r\n            </Button>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <br />\r\n      <Typography.Title level={2}>Department Overview</Typography.Title>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Currently on Leave in Department:</b>\r\n            {filterDept &&\r\n              (!filterDept.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={filterDept} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.user.first_name} ${record.user.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Leave Type'\r\n                      dataIndex='leaveType'\r\n                      key='leaveType'\r\n                      render={(text, record) => <Tag color='red'>{text}</Tag>}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Action'\r\n                      key='action'\r\n                      render={(text, record) => (\r\n                        <Space size='middle' key={record._id}>\r\n                          <Link to={`leaves/view/${record._id}`}>View</Link>\r\n                        </Space>\r\n                      )}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n        <Col className='gutter-row' xs={24} sm={12}>\r\n          <Card bordered>\r\n            <b>Top Training Hours Completed:</b>\r\n            {top3Users &&\r\n              (!top3Users.length ? (\r\n                <Empty></Empty>\r\n              ) : (\r\n                <>\r\n                  <Table dataSource={top3Users} rowKey='_id'>\r\n                    <Table.Column\r\n                      title='Name'\r\n                      dataIndex='name'\r\n                      render={(text, record) => {\r\n                        return `${record.first_name} ${record.last_name}`;\r\n                      }}\r\n                    ></Table.Column>\r\n                    <Table.Column\r\n                      title='Training Hours'\r\n                      //dataIndex='leaveType'\r\n                      //key='leaveType'\r\n                      //render={(text, record) => <Tag color='red'>{text}</Tag>}\r\n                    ></Table.Column>\r\n                  </Table>\r\n                </>\r\n              ))}\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",
    "import React, { useEffect } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  Select,\r\n  InputNumber,\r\n  Checkbox,\r\n  Tooltip,\r\n  Alert,\r\n} from 'antd';\r\nimport {\r\n  InfoCircleOutlined,\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPolicy, getPolicy, updatePolicy } from '../../actions/policy';\r\nimport { useForm } from 'antd/lib/form/Form';\r\nimport { add } from 'lodash';\r\nconst { Option } = Select;\r\n\r\nconst calcEvery = (every, increase) => {\r\n  let today = moment();\r\n  let employmentDate = moment('2020-01-01');\r\n  let totalYears = today.diff(employmentDate, 'y');\r\n  let count = totalYears / every;\r\n  return count * increase;\r\n};\r\nconst calcAfter = (after, increase) => {\r\n  let today = moment();\r\n  let employmentDate = moment('2020-01-01');\r\n  let totalYears = today.diff(employmentDate, 'y');\r\n  if (totalYears > after) {\r\n    return increase;\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst LeavePolicy = () => {\r\n  const [form] = useForm();\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { policy } = useSelector((state) => state.policy);\r\n  useEffect(() => {\r\n    if (id) {\r\n      dispatch(getPolicy(id));\r\n    }\r\n  }, [dispatch, id]);\r\n  const onFinish = (values) => {\r\n    console.log('Received values of form:', values);\r\n\r\n    if (id) {\r\n      dispatch(\r\n        updatePolicy(id, {\r\n          stacked: values.stacked,\r\n          name: values.name,\r\n          list: values.policy,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        createPolicy({\r\n          stacked: values.stacked,\r\n          name: values.name,\r\n          list: values.policy,\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n  const onFieldsChange = () => {};\r\n  return (\r\n    <Form\r\n      ref={form}\r\n      initialValues={{ ...policy, policy: policy.list }}\r\n      name='dynamic_form_nest_item'\r\n      onFinish={onFinish}\r\n      onFinishFailed={onFinishFailed}\r\n      onFieldsChange={onFieldsChange}\r\n      autoComplete='off'\r\n    >\r\n      {/**https://github.com/ant-design/ant-design/issues/7481#issuecomment-802830547 */}\r\n      <Space align='baseline'>\r\n        <Form.Item name='stacked' valuePropName='checked'>\r\n          <Checkbox>Stacked</Checkbox>\r\n        </Form.Item>\r\n        <Tooltip\r\n          title={`If stacked is selected, all 'After' conditions will apply cumulatively. If stacked is not selected, only the highest 'After' condition will apply`}\r\n        >\r\n          <InfoCircleOutlined />\r\n        </Tooltip>\r\n      </Space>\r\n      <Alert\r\n        style={{ marginBottom: '50px' }}\r\n        description={`If stacked is selected, all 'After' conditions will apply cumulatively. If stacked is not selected, only the highest 'After' condition will apply`}\r\n        type='info'\r\n        showIcon\r\n      />\r\n      <Form.Item label='Name' name='name'>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.List name='policy'>\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n              <Space\r\n                key={'name' + key}\r\n                style={{ display: 'flex', flexWrap: 'wrap', marginBottom: 8 }}\r\n                align='baseline'\r\n              >\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'condition1']}\r\n                  fieldKey={[fieldKey, 'condition1']}\r\n                  rules={[{ required: true, message: 'Missing condition1' }]}\r\n                >\r\n                  <Select allowClear placeholder='Choose an option'>\r\n                    <Option value='after'>After</Option>\r\n                    <Option value='every'>Every</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'year']}\r\n                  fieldKey={[fieldKey, 'year']}\r\n                  rules={[{ required: true, message: 'Missing year' }]}\r\n                >\r\n                  <InputNumber min={1} placeholder='Enter years' />\r\n                </Form.Item>\r\n                <>years, increase by </>\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'increase']}\r\n                  fieldKey={[fieldKey, 'increase']}\r\n                  rules={[{ required: true, message: 'Missing increase' }]}\r\n                >\r\n                  <InputNumber min={1} placeholder='Enter increase' />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button\r\n                type='dashed'\r\n                onClick={() => add()}\r\n                block\r\n                icon={<PlusOutlined />}\r\n              >\r\n                Add field\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Button type='primary' htmlType='submit'>\r\n          Submit\r\n        </Button>\r\n        <Button type='secondary' htmlType='button' onClick={() => navigate(-1)}>\r\n          Back\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LeavePolicy;\r\n",
    "import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Spin, Table, Space, Button } from 'antd';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { getPolicies } from '../../actions/policy';\r\nconst { Column } = Table;\r\nconst RoleHome = () => {\r\n  const { policies } = useSelector((state) => state.policy);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getPolicies());\r\n  }, [dispatch]);\r\n  const navigate = useNavigate();\r\n  const createPolicy = () => {\r\n    navigate('/policy/create');\r\n  };\r\n  return (\r\n    <>\r\n      <Space style={{ marginBottom: 16 }}>\r\n        <Button onClick={createPolicy}>Add Policy</Button>\r\n      </Space>\r\n      <br />\r\n      {!policies.length ? (\r\n        <>\r\n          <Spin size='large' />\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Table dataSource={policies} rowKey='_id'>\r\n            <Column\r\n              title='Policy'\r\n              dataIndex='list'\r\n              key='list'\r\n              render={(text, record) =>\r\n                text.map((t, i) => (\r\n                  <p\r\n                    key={i}\r\n                  >{`${t.condition1} ${t.year} years, increase by ${t.increase}`}</p>\r\n                ))\r\n              }\r\n            />\r\n            <Column\r\n              title='Action'\r\n              key='action'\r\n              render={(text, record) => (\r\n                <Space size='middle'>\r\n                  <Button>\r\n                    <Link to={`/policy/edit/${record._id}`}>Edit</Link>\r\n                  </Button>\r\n                </Space>\r\n              )}\r\n            />\r\n          </Table>\r\n        </>\r\n      )}\r\n      <Button>\r\n        <Link to='/'>Back</Link>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RoleHome;\r\n",
    "import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Error404 = () => {\r\n  const navigate = useNavigate();\r\n  const toHome = () => {\r\n    navigate('/');\r\n  };\r\n  return (\r\n    <Result\r\n      status='404'\r\n      title='404'\r\n      subTitle='Sorry, the page you visited does not exist.'\r\n      extra={\r\n        <Button onClick={toHome} type='primary'>\r\n          Back Home\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Error404;\r\n",
    "import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Descriptions,\r\n  Result,\r\n  Space,\r\n  Statistic,\r\n  Layout,\r\n  Image,\r\n  message,\r\n  notification,\r\n} from 'antd';\r\nimport {\r\n  CheckCircleOutlined,\r\n  LikeOutlined,\r\n  UserOutlined,\r\n} from '@ant-design/icons';\r\nimport RightContent from './components/GlobalHeader/RightContent';\r\nimport ProLayout, {\r\n  PageContainer,\r\n  SettingDrawer,\r\n} from '@ant-design/pro-layout';\r\nimport defaultProps from './_defaultProps';\r\nimport supervisorProps from './_supervisorProps';\r\nimport adminProps from './_adminProps';\r\nimport NoticeIcon from './components/backup/NoticeIcon/';\r\nimport Avatar from './components/GlobalHeader/AvatarDropdown';\r\nimport './App.less';\r\n\r\nimport LeaveHome from './components/LeaveHome/LeaveHome';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Auth from './components/Auth/Auth';\r\nimport Home from './components/Home/Home';\r\nimport LeaveForm from './components/LeaveForm/LeaveForm';\r\nimport LeaveDetail from './components/LeaveDetail/LeaveDetail';\r\nimport LeaveList from './components/LeaveList/LeaveList';\r\nimport LeaveHistory from './components/LeaveHistory/LeaveHistory';\r\nimport StaffForm from './components/StaffForm/StaffForm';\r\nimport DeptHome from './components/DeptHome/DeptHome';\r\nimport DeptForm from './components/DeptForm/DeptForm';\r\nimport StaffHome from './components/StaffHome/StaffHome';\r\nimport StaffDetail from './components/StaffDetails/StaffDetail';\r\nimport LeaveTypeForm from './components/LeaveTypeForm/LeaveTypeForm';\r\nimport LeaveTypeHome from './components/LeaveTypeHome/LeaveTypeHome';\r\nimport RoleHome from './components/RoleHome/RoleHome';\r\nimport RoleForm from './components/RoleForm/RoleForm';\r\nimport Profile from './components/Profile/Profile';\r\nimport Calendar from './components/Calendar/Calendar';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport Test from './components/Test/Test';\r\nimport ResetPasswordForm from './components/ResetPasswordForm/ResetPasswordForm';\r\nimport HolidayHome from './components/HolidayHome/HolidayHome';\r\nimport HolidayForm from './components/HolidayForm/HolidayForm';\r\nimport Test2 from './components/Test2/Test2';\r\nimport TrainingHome from './components/TrainingHome/TrainingHome';\r\nimport TrainingForm from './components/TrainingForm/TrainingForm';\r\nimport TrainingList from './components/TrainingList/TrainingList';\r\nimport TrainingDetails from './components/TrainingDetails/TrainingDetails';\r\nimport ExtTrainingForm from './components/ExtTrainingForm/ExtTrainingForm';\r\nimport ExtTrainingList from './components/ExtTrainingList/ExtTrainingList';\r\nimport TrainingHistory from './components/TrainingHistory/TrainingHistory';\r\nimport AdminHome from './components/AdminHome/AdminHome';\r\nimport SupervisorHome from './components/SupervisorHome/SupervisorHome';\r\nimport LeavePolicyForm from './components/LeavePolicyForm/LeavePolicyForm';\r\nimport LeavePolicyHome from './components/LeavePolicyHome/LeavePolicyHome';\r\nimport Error404 from './components/Error/Error404';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useLocation,\r\n  useNavigate,\r\n} from 'react-router-dom';\r\nimport { LOGOUT } from './constants/actionTypes';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\nconst { Header, Footer, Sider, Content } = Layout;\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  const [settings, setSetting] = useState({\r\n    fixSiderbar: true,\r\n    navTheme: 'light',\r\n    primaryColor: '#1890ff',\r\n    layout: 'side',\r\n    contentWidth: 'Fluid',\r\n    splitMenus: false,\r\n  });\r\n  const [pathname, setPathname] = useState('/');\r\n  const [socket, setSocket] = useState(null);\r\n  const { authData } = useSelector((state) => state.auth);\r\n  const user = authData?.result;\r\n  const location = useLocation();\r\n  var temp = defaultProps;\r\n  const navigate = useNavigate();\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n    navigate('/auth');\r\n  };\r\n  useEffect(() => {\r\n    setPathname(location.pathname);\r\n    const token = user?.token;\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) {\r\n        message.error('Session expired. Please login again');\r\n        logout();\r\n      }\r\n    }\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    setSocket(io('https://intihrms.herokuapp.com/'));\r\n  }, []);\r\n  useEffect(() => {\r\n    if (socket && user) {\r\n      socket?.emit('newUser', user);\r\n      socket.emit('listUser');\r\n\r\n      socket.on('getNotif', (data) => {\r\n        notification.open({\r\n          message: 'title',\r\n          description: 'body',\r\n          icon: <CheckCircleOutlined />,\r\n          placement: 'bottomRight',\r\n        });\r\n      });\r\n    }\r\n  }, [socket, user]);\r\n\r\n  if (user?.roles?.name == 'supervisor') temp = supervisorProps;\r\n  else if (user?.roles?.name == 'admin') temp = adminProps;\r\n  else temp = defaultProps;\r\n  return (\r\n    <div\r\n      id='test-pro-layout'\r\n      style={{\r\n        height: '100vh',\r\n      }}\r\n    >\r\n      <ProLayout\r\n        title={false}\r\n        logo={() => (\r\n          <Image className='logo' src='/INTI_Logo.png' preview={false} />\r\n        )}\r\n        {...temp}\r\n        location={{\r\n          pathname,\r\n        }}\r\n        menuFooterRender={(props) => {\r\n          {\r\n            /** \r\n            <a\r\n              style={{\r\n                lineHeight: '48rpx',\r\n                display: 'flex',\r\n                height: 48,\r\n                color: 'rgba(255, 255, 255, 0.65)',\r\n                alignItems: 'center',\r\n              }}\r\n              href='https://preview.pro.ant.design/dashboard/analysis'\r\n              target='_blank'\r\n              rel='noreferrer'\r\n            >\r\n              <img\r\n                alt='pro-logo'\r\n                src='https://procomponents.ant.design/favicon.ico'\r\n                style={{\r\n                  width: 16,\r\n                  height: 16,\r\n                  margin: '0 16px',\r\n                  marginRight: 10,\r\n                }}\r\n              />\r\n              {!(props === null || props === void 0\r\n                ? void 0\r\n                : props.collapsed) && 'Preview Pro'}\r\n            </a>*/\r\n          }\r\n          return (\r\n            <Image className='logo' src='/INTI_Logo.png' preview={false} />\r\n          );\r\n        }}\r\n        menuRender={(props, defaultDom) => {\r\n          return user ? defaultDom : false;\r\n        }}\r\n        onMenuHeaderClick={(e) => console.log(e)}\r\n        menuItemRender={(item, dom) => {\r\n          let path = item.path.split('/./')[0];\r\n          return <Link to={path || '/'}>{dom}</Link>;\r\n        }}\r\n        rightContentRender={() => (\r\n          <Space size='large'>\r\n            <NoticeIcon user={user} />\r\n            <Avatar user={user} />\r\n          </Space>\r\n        )}\r\n        {...settings}\r\n      >\r\n        <Content className='site-layout-background'>\r\n          <Routes>\r\n            <Route\r\n              path='/'\r\n              element={\r\n                <PrivateRoute>\r\n                  <Home socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/supervisor'\r\n              element={\r\n                <PrivateRoute>\r\n                  <SupervisorHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/admin'\r\n              element={\r\n                <PrivateRoute>\r\n                  <AdminHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/view/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveDetail socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/edit/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/list'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaves/history'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveHistory socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/depts'\r\n              element={\r\n                <PrivateRoute>\r\n                  <DeptHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/depts/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <DeptForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users'\r\n              element={\r\n                <PrivateRoute>\r\n                  <StaffHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/profile'\r\n              element={\r\n                <PrivateRoute>\r\n                  <Profile socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <StaffForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/users/view/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <StaffDetail socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaveTypes'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveTypeHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/test'\r\n              element={\r\n                <PrivateRoute>\r\n                  <Test socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/test2'\r\n              element={\r\n                <PrivateRoute>\r\n                  <Test2 socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaveTypes/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveTypeForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/leaveTypes/edit/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeaveTypeForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/roles'\r\n              element={\r\n                <PrivateRoute>\r\n                  <RoleHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/roles/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <RoleForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/roles/edit/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <RoleForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/calendar'\r\n              element={\r\n                <PrivateRoute>\r\n                  <Calendar socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/holidays'\r\n              element={\r\n                <PrivateRoute>\r\n                  <HolidayHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/holidays/create/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <HolidayForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/training/*'\r\n              element={\r\n                <PrivateRoute>\r\n                  <TrainingHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <TrainingForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/list'\r\n              element={\r\n                <PrivateRoute>\r\n                  <TrainingList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/view/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <TrainingDetails socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/submitExt'\r\n              element={\r\n                <PrivateRoute>\r\n                  <ExtTrainingForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/extList'\r\n              element={\r\n                <PrivateRoute>\r\n                  <ExtTrainingList socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/training/history'\r\n              element={\r\n                <PrivateRoute>\r\n                  <TrainingHistory socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/policy'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeavePolicyHome socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/policy/create'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeavePolicyForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/policy/edit/:id'\r\n              element={\r\n                <PrivateRoute>\r\n                  <LeavePolicyForm socket={socket} user={user} />\r\n                </PrivateRoute>\r\n              }\r\n            />\r\n\r\n            <Route\r\n              path='/auth'\r\n              element={\r\n                <PublicRoute>\r\n                  <Auth socket={socket} user={user} />\r\n                </PublicRoute>\r\n              }\r\n            />\r\n            <Route\r\n              path='/resetPassword'\r\n              element={<ResetPasswordForm socket={socket} user={user} />}\r\n            />\r\n            <Route element={<Error404 />} />\r\n          </Routes>\r\n        </Content>\r\n        {/**   <div\r\n            style={{\r\n              height: '120vh',\r\n            }}\r\n          >\r\n            <Result\r\n              status='404'\r\n              style={{\r\n                height: '100%',\r\n                background: '#fff',\r\n              }}\r\n              title='Hello World'\r\n              subTitle='Sorry, you are not authorized to access this page.'\r\n              extra={<Button type='primary'>Back Home</Button>}\r\n            />\r\n          </div>*/}\r\n      </ProLayout>\r\n      {/**\r\n      <SettingDrawer\r\n        pathname={pathname}\r\n        getContainer={() => document.getElementById('test-pro-layout')}\r\n        settings={settings}\r\n        onSettingChange={(changeSetting) => {\r\n          setSetting(changeSetting);\r\n        }}\r\n        disableUrlParams\r\n      />\r\n       */}\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n\r\n/**\r\n * \r\n *    content={content}\r\n            tabList={[\r\n              {\r\n                tab: '基本信息',\r\n                key: 'base',\r\n              },\r\n              {\r\n                tab: '详细信息',\r\n                key: 'info',\r\n              },\r\n            ]}\r\n            extraContent={\r\n              <Space size={24}>\r\n                <Statistic\r\n                  title='Feedback'\r\n                  value={1128}\r\n                  prefix={<LikeOutlined />}\r\n                />\r\n                <Statistic title='Unmerged' value={93} suffix='/ 100' />\r\n              </Space>\r\n            }\r\n            extra={[\r\n              <Button key='3'>操作</Button>,\r\n              <Button key='2'>操作</Button>,\r\n              <Button key='1' type='primary'>\r\n                主操作\r\n              </Button>,\r\n            ]}\r\n            footer={[\r\n              <Button key='3'>重置</Button>,\r\n              <Button key='2' type='primary'>\r\n                提交\r\n              </Button>,\r\n            ]}\r\n */\r\n",
    "import {\r\n  AUTH,\r\n  LOGOUT,\r\n  AUTH_END_LOADING,\r\n  AUTH_START_LOADING,\r\n  AUTH_ERROR,\r\n} from '../constants/actionTypes';\r\n\r\nconst authReducer = (\r\n  state = { error: null, isLoading: true, authData: null },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case AUTH_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case AUTH_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case AUTH_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case AUTH:\r\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\r\n      return { ...state, authData: action?.data };\r\n    case LOGOUT:\r\n      localStorage.clear();\r\n      return { ...state, authData: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n",
    "import { combineReducers } from 'redux';\r\nimport leaves from './leaves';\r\nimport auth from './auth';\r\nimport depts from './depts';\r\nimport users from './users';\r\nimport leaveTypes from './leaveTypes';\r\nimport roles from './roles';\r\nimport holidays from './holidays';\r\nimport trainings from './training';\r\nimport trainingRequest from './trainingRequest';\r\nimport policy from './policy';\r\nimport { LOGOUT } from '../constants/actionTypes';\r\n\r\nconst appReducers = combineReducers({\r\n  leaves,\r\n  auth,\r\n  depts,\r\n  users,\r\n  leaveTypes,\r\n  roles,\r\n  holidays,\r\n  trainings,\r\n  trainingRequest,\r\n  policy,\r\n});\r\n//https://stackoverflow.com/a/35641992\r\nexport const reducers = (state, action) => {\r\n  // when a logout action is dispatched it will reset redux state\r\n  if (action.type === LOGOUT) {\r\n    state = undefined;\r\n  }\r\n\r\n  return appReducers(state, action);\r\n};\r\n",
    "import {\r\n  CREATE_LEAVE,\r\n  FETCH_ALL_LEAVE,\r\n  FETCH_LEAVE_BY_DATERANGE,\r\n  FETCH_ONE_LEAVE,\r\n  LEAVE_END_LOADING,\r\n  LEAVE_ERROR,\r\n  LEAVE_START_LOADING,\r\n  UPDATE_LEAVE,\r\n  FETCH_LEAVE_REQUESTS,\r\n  FETCH_UPCOMING_LEAVE,\r\n  FETCH_LEAVE_HISTORY,\r\n  FETCH_TODAY_LEAVE,\r\n  FETCH_LEAVE_COUNT,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = {\r\n    error: null,\r\n    isLoading: true,\r\n    leaves: [],\r\n    calendar: [],\r\n    leave: null,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LEAVE_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case LEAVE_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case LEAVE_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_LEAVE:\r\n      return {\r\n        ...state,\r\n        leaves: state.leaves.map((leave) =>\r\n          leave._id === action.payload._id ? action.payload : leave\r\n        ),\r\n        leave: action.payload,\r\n      };\r\n    case FETCH_ONE_LEAVE:\r\n      return { ...state, leave: action.payload };\r\n\r\n    case FETCH_LEAVE_BY_DATERANGE:\r\n      // console.log('Here', action.payload);\r\n      const calLeaves =\r\n        action.payload.data.leaves.map((leave) => {\r\n          const leaveType = leave.leaveType;\r\n          return {\r\n            id: leave._id,\r\n            title: `${leave.user.first_name} ${leave.user.last_name} (${leave.leaveType})`,\r\n            start: leave.fromDate,\r\n            url: `/leaves/view/${leave._id}`,\r\n            end: leave.toDate,\r\n            extendedProps: {\r\n              emp_id: leave.emp_id,\r\n            },\r\n            allDay: true,\r\n            color:\r\n              leaveType == 'casual'\r\n                ? 'blue'\r\n                : leaveType == 'medical'\r\n                ? 'green'\r\n                : 'red',\r\n          };\r\n        }) || [];\r\n      const calHolidays =\r\n        action.payload.data.holidays.map((holiday) => {\r\n          return {\r\n            id: holiday._id,\r\n            title: holiday.title,\r\n            start: holiday.startDate,\r\n            end: holiday.endDate,\r\n            allDay: true,\r\n            display: 'background',\r\n          };\r\n        }) || [];\r\n      return {\r\n        ...state,\r\n        leaves: [...calHolidays, ...calLeaves],\r\n      };\r\n    case FETCH_ALL_LEAVE:\r\n      return { ...state, leaves: action.payload };\r\n    case CREATE_LEAVE:\r\n      return { ...state, leaves: [...state.leaves, action.payload] };\r\n\r\n    case FETCH_LEAVE_REQUESTS:\r\n      return { ...state, leaves: action.payload };\r\n\r\n    case FETCH_UPCOMING_LEAVE:\r\n      return { ...state, upcomingLeave: action.payload };\r\n\r\n    case FETCH_LEAVE_HISTORY:\r\n      return { ...state, leaves: action.payload };\r\n\r\n    case FETCH_TODAY_LEAVE:\r\n      return { ...state, todayLeaves: action.payload };\r\n\r\n    case FETCH_LEAVE_COUNT:\r\n      return { ...state, leaveCount: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_DEPT,\r\n  DELETE_DEPT,\r\n  FETCH_ALL_DEPT,\r\n  UPDATE_DEPT,\r\n  DEPT_END_LOADING,\r\n  DEPT_ERROR,\r\n  DEPT_START_LOADING,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, depts: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case DEPT_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case DEPT_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case DEPT_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_DEPT:\r\n      return {\r\n        ...state,\r\n        depts: state.depts.map((dept) =>\r\n          dept._id === action.payload._id ? action.payload : dept\r\n        ),\r\n      };\r\n    case FETCH_ALL_DEPT:\r\n      return { ...state, depts: action.payload };\r\n    case CREATE_DEPT:\r\n      return { ...state, depts: [...state.depts, action.payload] };\r\n    case DELETE_DEPT:\r\n      return {\r\n        ...state,\r\n        depts: state.depts.filter((dept) => dept._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_USER,\r\n  FETCH_ALL_USER,\r\n  FETCH_ONE_USER,\r\n  UPDATE_USER,\r\n  USER_END_LOADING,\r\n  USER_ERROR,\r\n  USER_START_LOADING,\r\n  FETCH_DEPT_USER,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (state = { users: [], user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case USER_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case USER_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user._id === action.payload._id ? action.payload : user\r\n        ),\r\n      };\r\n    case FETCH_ONE_USER:\r\n      return { ...state, user: action.payload };\r\n    case FETCH_ALL_USER:\r\n      return { ...state, users: action.payload };\r\n    case CREATE_USER:\r\n      return { ...state, users: [...state.users, action.payload] };\r\n\r\n    case FETCH_DEPT_USER:\r\n      return { ...state, users: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_LEAVETYPE,\r\n  FETCH_ALL_LEAVETYPE,\r\n  FETCH_ONE_LEAVETYPE,\r\n  UPDATE_LEAVETYPE,\r\n  LEAVETYPE_END_LOADING,\r\n  LEAVETYPE_ERROR,\r\n  LEAVETYPE_START_LOADING,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, leaveTypes: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LEAVETYPE_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case LEAVETYPE_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case LEAVETYPE_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_LEAVETYPE:\r\n      return {\r\n        ...state,\r\n        leaveTypes: state.leaveTypes.map((leaveType) =>\r\n          leaveType._id === action.payload._id ? action.payload : leaveType\r\n        ),\r\n      };\r\n    case FETCH_ONE_LEAVETYPE:\r\n      return { ...state, leaveType: action.payload, isLoading: false };\r\n    case FETCH_ALL_LEAVETYPE:\r\n      return { ...state, leaveTypes: action.payload };\r\n    case CREATE_LEAVETYPE:\r\n      return { ...state, leaveTypes: [...state.leaveTypes, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_ROLE,\r\n  FETCH_ALL_ROLE,\r\n  FETCH_ONE_ROLE,\r\n  UPDATE_ROLE,\r\n  ROLE_END_LOADING,\r\n  ROLE_ERROR,\r\n  ROLE_START_LOADING,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, roles: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ROLE_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case ROLE_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case ROLE_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_ROLE:\r\n      return {\r\n        ...state,\r\n        roles: state.roles.map((role) =>\r\n          role._id === action.payload._id ? action.payload : role\r\n        ),\r\n      };\r\n    case FETCH_ONE_ROLE:\r\n      return { ...state, role: action.payload };\r\n    case FETCH_ALL_ROLE:\r\n      return { ...state, roles: action.payload };\r\n    case CREATE_ROLE:\r\n      return { ...state, roles: [...state.roles, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  FETCH_ALL_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  HOLIDAY_END_LOADING,\r\n  HOLIDAY_ERROR,\r\n  HOLIDAY_START_LOADING,\r\n  FETCH_HOLIDAY_BY_YEAR,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, holidays: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case HOLIDAY_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case HOLIDAY_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case HOLIDAY_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n    case UPDATE_HOLIDAY:\r\n      return {\r\n        ...state,\r\n        holidays: {\r\n          ...state.holidays,\r\n          lists: state.holidays.lists.map((holiday) =>\r\n            holiday._id === action.payload._id ? action.payload : holiday\r\n          ),\r\n        },\r\n      };\r\n    case FETCH_HOLIDAY_BY_YEAR:\r\n    case FETCH_ALL_HOLIDAY:\r\n      return { ...state, holidays: action.payload };\r\n    case CREATE_HOLIDAY:\r\n      return {\r\n        ...state,\r\n        holidays: {\r\n          ...state.holidays,\r\n          lists: [...state.holidays.lists, action.payload],\r\n        },\r\n      };\r\n    case DELETE_HOLIDAY:\r\n      return {\r\n        ...state,\r\n        holidays: {\r\n          ...state.holidays,\r\n          lists: state.holidays.lists.filter(\r\n            (holiday) => holiday._id !== action.payload\r\n          ),\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_TRAINING,\r\n  FETCH_ALL_TRAINING,\r\n  FETCH_ONE_TRAINING,\r\n  TRAINING_START_LOADING,\r\n  TRAINING_END_LOADING,\r\n  TRAINING_ERROR,\r\n  UPDATE_TRAINING,\r\n  LEAVE_TRAINING,\r\n  FETCH_EXT_TRAINING,\r\n  UPDATE_TRAINING_STATUS,\r\n  FETCH_EXT_TRAINING_HISTORY,\r\n  FETCH_TRAINING_HISTORY,\r\n  FETCH_UPCOMING_TRAINING,\r\n  FETCH_TODAY_TRAINING,\r\n  FETCH_TRAINING_COUNT,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, trainings: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TRAINING_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case TRAINING_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case TRAINING_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case FETCH_ONE_TRAINING:\r\n      return { ...state, training: action.payload };\r\n    case FETCH_ALL_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n    case CREATE_TRAINING:\r\n      return { ...state, trainings: [...state.trainings, action.payload] };\r\n\r\n    case UPDATE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case LEAVE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case UPDATE_TRAINING_STATUS:\r\n      return {\r\n        ...state,\r\n        trainings: state.trainings.map((training) =>\r\n          training._id === action.payload._id ? action.payload : training\r\n        ),\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING_HISTORY:\r\n      return { ...state, extTrainings: action.payload };\r\n\r\n    case FETCH_TRAINING_HISTORY:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case FETCH_UPCOMING_TRAINING:\r\n      return { ...state, upcomingTraining: action.payload };\r\n\r\n    case FETCH_TODAY_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case FETCH_TRAINING_COUNT:\r\n      return { ...state, trainingCount: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_TRAINING,\r\n  FETCH_ALL_TRAINING,\r\n  FETCH_ONE_TRAINING,\r\n  TRAINING_START_LOADING,\r\n  TRAINING_END_LOADING,\r\n  TRAINING_ERROR,\r\n  UPDATE_TRAINING,\r\n  LEAVE_TRAINING,\r\n  FETCH_EXT_TRAINING,\r\n  UPDATE_TRAINING_STATUS,\r\n  FETCH_EXT_TRAINING_HISTORY,\r\n  FETCH_TRAINING_HISTORY,\r\n  FETCH_UPCOMING_TRAINING,\r\n  FETCH_TODAY_TRAINING,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, trainings: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case TRAINING_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case TRAINING_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case TRAINING_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case FETCH_ONE_TRAINING:\r\n      return { ...state, training: action.payload };\r\n    case FETCH_ALL_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n    case CREATE_TRAINING:\r\n      return { ...state, trainings: [...state.trainings, action.payload] };\r\n\r\n    case UPDATE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case LEAVE_TRAINING:\r\n      return {\r\n        ...state,\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case UPDATE_TRAINING_STATUS:\r\n      return {\r\n        ...state,\r\n        trainings: state.trainings.map((training) =>\r\n          training._id === action.payload._id ? action.payload : training\r\n        ),\r\n        training: action.payload,\r\n      };\r\n\r\n    case FETCH_EXT_TRAINING_HISTORY:\r\n      return { ...state, extTrainings: action.payload };\r\n\r\n    case FETCH_TRAINING_HISTORY:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    case FETCH_UPCOMING_TRAINING:\r\n      return { ...state, upcomingTraining: action.payload };\r\n\r\n    case FETCH_TODAY_TRAINING:\r\n      return { ...state, trainings: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import {\r\n  CREATE_POLICY,\r\n  FETCH_ALL_POLICY,\r\n  FETCH_ONE_POLICY,\r\n  UPDATE_POLICY,\r\n  POLICY_END_LOADING,\r\n  POLICY_ERROR,\r\n  POLICY_START_LOADING,\r\n} from '../constants/actionTypes';\r\n\r\nexport default (\r\n  state = { error: null, isLoading: true, policies: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case POLICY_START_LOADING:\r\n      return { ...state, isLoading: true, error: null };\r\n    case POLICY_END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case POLICY_ERROR: {\r\n      return { ...state, error: action.error, isLoading: false };\r\n    }\r\n\r\n    case UPDATE_POLICY:\r\n      return {\r\n        ...state,\r\n        policies: state.policies.map((policy) =>\r\n          policy._id === action.payload._id ? action.payload : policy\r\n        ),\r\n      };\r\n    case FETCH_ONE_POLICY:\r\n      return { ...state, policy: action.payload };\r\n    case FETCH_ALL_POLICY:\r\n      return { ...state, policies: action.payload };\r\n    case CREATE_POLICY:\r\n      return { ...state, policies: [...state.policies, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n",
    "const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { ConfigProvider } from 'antd';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport { reducers } from './reducers';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport hardSet from 'redux-persist/lib/stateReconciler/hardSet';\r\nimport autoMergeLevel1 from 'redux-persist/lib/stateReconciler/autoMergeLevel1';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport enUSIntl from 'antd/lib/locale/en_US';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\n///uncomment to reset store data\r\n//persistor.purge();\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <ConfigProvider locale={enUSIntl}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </ConfigProvider>\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"
  ],
  "sourceRoot": ""
}
